{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport { Button, TextInput, Text } from 'react-native-paper';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar AddMealComponent = function AddMealComponent() {\n  var _React$useState = React.useState(\"\"),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      text = _React$useState2[0],\n      setText = _React$useState2[1];\n\n  return _jsx(Modal, {\n    transparent: true,\n    visible: true,\n    children: _jsx(View, {\n      style: styles.container,\n      children: _jsxs(View, {\n        style: styles.card,\n        children: [_jsxs(View, {\n          style: {\n            flex: 1\n          },\n          children: [_jsx(TextInput, {\n            mode: \"flat\",\n            style: [styles.nameInput],\n            label: \"Meal Name\",\n            value: text,\n            onChangeText: function onChangeText(text) {\n              return setText(text);\n            }\n          }), _jsx(TextInput, {\n            mode: \"flat\",\n            style: [styles.macroInput],\n            label: \"Weight (g)\",\n            value: text,\n            onChangeText: function onChangeText(text) {\n              return setText(text);\n            }\n          }), _jsx(TextInput, {\n            mode: \"flat\",\n            style: [styles.macroInput],\n            label: \"Carbs  (per 100g)\",\n            value: text,\n            onChangeText: function onChangeText(text) {\n              return setText(text);\n            },\n            right: _jsx(TextInput.Affix, {\n              text: \"/100g\"\n            })\n          }), _jsx(TextInput, {\n            mode: \"flat\",\n            style: [styles.macroInput],\n            label: \"Fat  (per 100g)\",\n            value: text,\n            onChangeText: function onChangeText(text) {\n              return setText(text);\n            },\n            right: _jsx(TextInput.Affix, {\n              text: \"/100g\"\n            })\n          }), _jsx(TextInput, {\n            mode: \"flat\",\n            style: [styles.macroInput],\n            label: \"Protein  (per 100g)\",\n            value: text,\n            onChangeText: function onChangeText(text) {\n              return setText(text);\n            },\n            right: _jsx(TextInput.Affix, {\n              text: \"/100g\"\n            })\n          })]\n        }), _jsxs(View, {\n          style: {\n            flexDirection: 'row',\n            justifyContent: 'center',\n            marginTop: 60\n          },\n          children: [_jsxs(View, {\n            style: styles.calorieCount,\n            children: [_jsx(Text, {\n              children: \"Calories in the Meal\"\n            }), _jsx(Text, {\n              children: \" 231 kcal\"\n            })]\n          }), _jsx(Button, {\n            style: styles.flexItem,\n            mode: \"contained\",\n            children: \"Scan\"\n          }), _jsx(Button, {\n            style: styles.flexItem,\n            mode: \"contained\",\n            children: \"Add Meal\"\n          })]\n        })]\n      })\n    })\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'rgba(0,0,0,0.5)'\n  },\n  card: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'white',\n    padding: 20,\n    borderRadius: 5\n  },\n  nameInput: {\n    margin: 12,\n    color: 'darkviolet',\n    backgroundColor: 'white',\n    width: 400\n  },\n  weightInput: {\n    margin: 12,\n    color: 'darkviolet',\n    backgroundColor: 'white',\n    width: 200\n  },\n  macroInput: {\n    margin: 12,\n    color: 'darkviolet',\n    backgroundColor: 'white',\n    width: 190\n  },\n  flexItem: {\n    marginLeft: 20\n  },\n  calorieCount: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginRight: 100\n  }\n});\nexport default AddMealComponent;","map":{"version":3,"sources":["/home/dzony/Documents/Site/calorienotes/components/addmeal.tsx"],"names":["React","Button","TextInput","Text","AddMealComponent","useState","text","setText","styles","container","card","flex","nameInput","macroInput","flexDirection","justifyContent","marginTop","calorieCount","flexItem","StyleSheet","create","alignItems","backgroundColor","display","padding","borderRadius","margin","color","width","weightInput","marginLeft","marginRight"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { View, StyleSheet, Modal } from 'react-native'\nimport { Button, TextInput, Text } from 'react-native-paper';\n\nconst AddMealComponent = () => {\n    const [text, setText] = React.useState(\"\");\n    return(\n        <Modal transparent visible={true}>\n            <View style={styles.container}>\n                <View style={styles.card}>\n                    <View style={{flex: 1}}>\n\n                        <TextInput \n                            mode='flat'\n                            style={[styles.nameInput]}\n                            label=\"Meal Name\"\n                            value={text}\n                            onChangeText={text => setText(text)}\n                        />\n                        <TextInput \n                            mode='flat'\n                            style={[styles.macroInput]}\n                            label=\"Weight (g)\"\n                            value={text}\n                            onChangeText={text => setText(text)}\n                        />\n\n\n                            <TextInput \n                                mode='flat'\n                                style={[styles.macroInput]}\n                                label=\"Carbs  (per 100g)\"\n                                value={text}\n                                onChangeText={text => setText(text)}\n                                right={<TextInput.Affix text=\"/100g\" />}\n                            />\n                            <TextInput \n                                mode='flat'\n                                style={[styles.macroInput]}\n                                label=\"Fat  (per 100g)\"\n                                value={text}\n                                onChangeText={text => setText(text)}\n                                right={<TextInput.Affix text=\"/100g\" />}\n                            />\n                            <TextInput \n                                mode='flat'\n                                style={[styles.macroInput]}\n                                label=\"Protein  (per 100g)\"\n                                value={text}\n                                onChangeText={text => setText(text)}\n                                right={<TextInput.Affix text=\"/100g\" />}\n                            />\n\n                    </View>\n                    <View style={{ flexDirection:'row' ,justifyContent:'center', marginTop:60}}>\n                        <View style={styles.calorieCount}>\n                            <Text>Calories in the Meal</Text>\n                            <Text> 231 kcal</Text>\n                        </View>\n                        <Button style={styles.flexItem} mode='contained'>Scan</Button>\n                        <Button style={styles.flexItem} mode='contained'>Add Meal</Button>\n                    </View>\n                </View>\n            </View>\n        </Modal>\n    )\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex:1,\n        justifyContent: 'center',\n        alignItems: 'center',\n        backgroundColor: 'rgba(0,0,0,0.5)',\n    },\n    card: {\n        display:'flex',\n        justifyContent:'center',\n        alignItems: 'center',\n        backgroundColor: 'white',\n        padding: 20,\n        borderRadius: 5,\n    },\n    nameInput: {\n        margin: 12,\n        color: 'darkviolet',\n        backgroundColor: 'white',\n        width: 400,\n    },\n    weightInput: {\n        margin: 12,\n        color: 'darkviolet',\n        backgroundColor: 'white',\n        width: 200,\n    },\n    macroInput: {\n        margin: 12,\n        color: 'darkviolet',\n        backgroundColor: 'white',\n        width: 190,\n    },\n    flexItem: {\n        marginLeft: 20,\n    },\n    calorieCount: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        marginRight: 100,\n    }\n})\n\n\nexport default AddMealComponent"]},"metadata":{},"sourceType":"module"}