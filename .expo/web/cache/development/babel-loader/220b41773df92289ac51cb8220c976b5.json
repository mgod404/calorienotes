{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { Button, IconButton, Text } from 'react-native-paper';\nimport BarCodeScannerComponent from \"./barcodescanner\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar AddMealComponent = function AddMealComponent(_ref) {\n  var setShowAddMeal = _ref.setShowAddMeal,\n      setMeals = _ref.setMeals,\n      meals = _ref.meals;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      showBarCodeScanner = _useState2[0],\n      setShowBarCodeScanner = _useState2[1];\n\n  var _React$useState = React.useState({\n    name: '',\n    weight: 0,\n    carbs: 0,\n    fat: 0,\n    protein: 0\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      meal = _React$useState2[0],\n      setMeal = _React$useState2[1];\n\n  var updateMeals = function updateMeals() {\n    var newMeals = [].concat(_toConsumableArray(meals), [meal]);\n    setMeals(newMeals);\n  };\n\n  var countCalories = function countCalories() {\n    return meal.weight / 100 * (meal.carbs * 4 + meal.fat * 9 + meal.protein * 4);\n  };\n\n  return _jsxs(Modal, {\n    transparent: true,\n    visible: true,\n    children: [_jsx(View, {\n      style: styles.container,\n      children: _jsxs(View, {\n        style: styles.card,\n        children: [_jsx(IconButton, {\n          style: {\n            alignSelf: 'flex-end'\n          },\n          icon: \"window-close\",\n          onPress: function onPress() {\n            return setShowAddMeal(false);\n          }\n        }), _jsx(View, {\n          style: {\n            display: 'flex',\n            flexDirection: 'row'\n          },\n          children: _jsx(TextInput, {\n            style: styles.nameInput,\n            onChangeText: function onChangeText(input) {\n              return setMeal(_objectSpread(_objectSpread({}, meal), {}, {\n                name: input\n              }));\n            },\n            value: meal.name,\n            placeholder: \"Meal Name\"\n          })\n        }), _jsxs(View, {\n          style: {\n            alignSelf: 'stretch',\n            flexDirection: 'row',\n            justifyContent: 'space-between'\n          },\n          children: [_jsx(Text, {\n            style: styles.inputDescription,\n            children: \"Weight(g)\"\n          }), _jsx(TextInput, {\n            style: styles.input,\n            onChangeText: function onChangeText(input) {\n              return setMeal(_objectSpread(_objectSpread({}, meal), {}, {\n                weight: Number(input)\n              }));\n            },\n            value: String(meal.weight),\n            placeholder: \"Weight (g)\",\n            keyboardType: \"numeric\"\n          })]\n        }), _jsxs(View, {\n          style: {\n            alignSelf: 'stretch',\n            flexDirection: 'row',\n            justifyContent: 'space-between'\n          },\n          children: [_jsx(Text, {\n            style: styles.inputDescription,\n            children: \"Carbs(g per 100g)\"\n          }), _jsx(TextInput, {\n            style: styles.input,\n            onChangeText: function onChangeText(input) {\n              return setMeal(_objectSpread(_objectSpread({}, meal), {}, {\n                carbs: Number(input)\n              }));\n            },\n            value: String(meal.carbs),\n            placeholder: \"Carbs (g per 100g)\",\n            keyboardType: \"numeric\"\n          })]\n        }), _jsxs(View, {\n          style: {\n            alignSelf: 'stretch',\n            flexDirection: 'row',\n            justifyContent: 'space-between'\n          },\n          children: [_jsx(Text, {\n            style: styles.inputDescription,\n            children: \"Fat(g per 100g)\"\n          }), _jsx(TextInput, {\n            style: styles.input,\n            onChangeText: function onChangeText(input) {\n              return setMeal(_objectSpread(_objectSpread({}, meal), {}, {\n                fat: Number(input)\n              }));\n            },\n            value: String(meal.fat),\n            placeholder: \"Fat (g per 100g)\",\n            keyboardType: \"numeric\"\n          })]\n        }), _jsxs(View, {\n          style: {\n            alignSelf: 'stretch',\n            flexDirection: 'row',\n            justifyContent: 'space-between'\n          },\n          children: [_jsx(Text, {\n            style: styles.inputDescription,\n            children: \"Protein(g per 100g)\"\n          }), _jsx(TextInput, {\n            style: styles.input,\n            onChangeText: function onChangeText(input) {\n              return setMeal(_objectSpread(_objectSpread({}, meal), {}, {\n                protein: Number(input)\n              }));\n            },\n            value: String(meal.protein),\n            placeholder: \"Protein (g per 100g)\",\n            keyboardType: \"numeric\"\n          })]\n        }), _jsxs(View, {\n          style: {\n            flexDirection: 'row',\n            justifyContent: 'center',\n            marginTop: 60\n          },\n          children: [_jsxs(View, {\n            style: styles.calorieCount,\n            children: [_jsx(Text, {\n              style: {\n                fontWeight: 'bold'\n              },\n              children: \"Calories in the meal\"\n            }), _jsx(Text, {\n              children: countCalories()\n            })]\n          }), _jsx(Button, {\n            style: styles.flexBttn,\n            color: \"darkviolet\",\n            mode: \"contained\",\n            onPress: function onPress() {\n              return setShowBarCodeScanner(true);\n            },\n            children: \"Scan\"\n          }), _jsx(Button, {\n            style: styles.flexBttn,\n            color: \"darkviolet\",\n            mode: \"contained\",\n            onPress: function onPress() {\n              if (meal.weight == 0) {\n                alert(\"Please, set value for food weight.\");\n                return;\n              }\n\n              updateMeals();\n              setShowAddMeal(false);\n            },\n            children: \"Add Meal\"\n          })]\n        })]\n      })\n    }), showBarCodeScanner && _jsx(Modal, {\n      children: _jsx(BarCodeScannerComponent, {\n        setMeal: setMeal,\n        setShowBarCodeScanner: setShowBarCodeScanner\n      })\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'rgba(0,0,0,0.5)'\n  },\n  card: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'white',\n    padding: 20,\n    borderRadius: 5\n  },\n  input: {\n    height: 40,\n    width: 50,\n    margin: 12,\n    borderBottomWidth: 1.3,\n    borderColor: 'darkviolet',\n    padding: 10\n  },\n  nameInput: {\n    height: 40,\n    width: 300,\n    margin: 12,\n    borderBottomWidth: 1.3,\n    borderColor: 'darkviolet',\n    padding: 10\n  },\n  inputDescription: {\n    alignSelf: 'flex-end',\n    margin: 12,\n    fontSize: 23\n  },\n  flexBttn: {\n    marginRight: 20\n  },\n  calorieCount: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginHorizontal: 10\n  }\n});\nexport default AddMealComponent;","map":{"version":3,"sources":["/home/dzony/Documents/Site/calorienotes/components/addmeal.tsx"],"names":["React","useState","Button","IconButton","Text","BarCodeScannerComponent","AddMealComponent","setShowAddMeal","setMeals","meals","showBarCodeScanner","setShowBarCodeScanner","name","weight","carbs","fat","protein","meal","setMeal","updateMeals","newMeals","countCalories","styles","container","card","alignSelf","display","flexDirection","nameInput","input","justifyContent","inputDescription","Number","String","marginTop","calorieCount","fontWeight","flexBttn","alert","StyleSheet","create","flex","alignItems","backgroundColor","padding","borderRadius","height","width","margin","borderBottomWidth","borderColor","fontSize","marginRight","marginHorizontal"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { View, StyleSheet, Modal, TextInput } from 'react-native'\nimport { Button, IconButton, Text, Divider } from 'react-native-paper';\n\nimport BarCodeScannerComponent from './barcodescanner';\n\nimport { Meal } from '../screens/homescreen';\n\n\ninterface Props {\n    setShowAddMeal: React.Dispatch<React.SetStateAction<boolean>>,\n    setMeals: React.Dispatch<React.SetStateAction<Meal[]>>,\n    meals: Meal[],\n}\n\nconst AddMealComponent: React.FC<Props> = ({setShowAddMeal, setMeals, meals}) => {\n    const [showBarCodeScanner, setShowBarCodeScanner] = useState<boolean>(false);\n    const [meal, setMeal] = React.useState<Meal>({\n        name: '',\n        weight: 0,\n        carbs: 0,\n        fat: 0,\n        protein: 0,\n    });\n\n    const updateMeals = () => {\n        let newMeals:Meal[] = [...meals, meal];\n        setMeals(newMeals);\n    }\n    const countCalories = () => {\n        return (meal.weight / 100 * (meal.carbs * 4 + meal.fat * 9 + meal.protein * 4))\n    }\n\n    return(\n        <Modal transparent visible={true}>\n            <View style={styles.container}>\n                <View style={styles.card}>\n                    <IconButton \n                        style={{alignSelf:'flex-end'}}\n                        icon='window-close' \n                        onPress={() => setShowAddMeal(false)}\n                    />\n                        <View style={{display:'flex', flexDirection: 'row',}}>\n                            <TextInput\n                                style={styles.nameInput}\n                                onChangeText={(input) => setMeal({...meal, name: input})}\n                                value={meal.name}\n                                placeholder='Meal Name'\n                            />\n                        </View>\n                        <View style={{alignSelf:'stretch', flexDirection: 'row',justifyContent:'space-between'}}>\n                        <Text style={styles.inputDescription}>Weight(g)</Text>\n                        <TextInput\n                            style={styles.input}\n                            onChangeText={(input) => setMeal({...meal, weight: Number(input)})}\n                            value={String(meal.weight)}\n                            placeholder='Weight (g)'\n                            keyboardType='numeric'\n                        />\n                        </View>\n                        <View style={{alignSelf:'stretch', flexDirection: 'row',justifyContent:'space-between'}}>\n                        <Text style={styles.inputDescription}>Carbs(g per 100g)</Text>\n                        <TextInput\n                            style={styles.input}\n                            onChangeText={(input) => setMeal({...meal, carbs: Number(input)})}\n                            value={String(meal.carbs)}\n                            placeholder='Carbs (g per 100g)'\n                            keyboardType='numeric'\n                        />\n                        </View>\n                        <View style={{alignSelf:'stretch', flexDirection: 'row',justifyContent:'space-between'}}>\n                        <Text style={styles.inputDescription}>Fat(g per 100g)</Text>\n                        <TextInput\n                            style={styles.input}\n                            onChangeText={(input) => setMeal({...meal, fat: Number(input)})}\n                            value={String(meal.fat)}\n                            placeholder='Fat (g per 100g)'\n                            keyboardType='numeric'\n                        />\n                        </View>\n                        <View style={{alignSelf:'stretch', flexDirection: 'row',justifyContent:'space-between'}}>\n                        <Text style={styles.inputDescription}>Protein(g per 100g)</Text>\n                        <TextInput\n                            style={styles.input}\n                            onChangeText={(input) => setMeal({...meal, protein: Number(input)})}\n                            value={String(meal.protein)}\n                            placeholder='Protein (g per 100g)'\n                            keyboardType='numeric'\n                        />\n                        </View>\n\n                    <View style={{ flexDirection:'row' ,justifyContent:'center', marginTop:60}}>\n                        <View style={styles.calorieCount}>\n                            <Text style={{ fontWeight:'bold' }}>Calories in the meal</Text>\n                            <Text>{countCalories()}</Text>\n                        </View>\n                        <Button \n                            style={styles.flexBttn} \n                            color='darkviolet' \n                            mode='contained'\n                            onPress={() => setShowBarCodeScanner(true)}\n                            >\n                                Scan\n                        </Button>\n                        <Button \n                            style={styles.flexBttn} \n                            color='darkviolet' \n                            mode='contained'\n                            onPress={() => {\n                                if(meal.weight == 0){\n                                    alert(`Please, set value for food weight.`);\n                                    return\n                                }\n                                updateMeals();\n                                setShowAddMeal(false);\n                            }}\n                            >\n                                Add Meal\n                        </Button>\n                    </View>\n                </View>\n            </View>\n            {showBarCodeScanner && \n                    <Modal>\n                        <BarCodeScannerComponent \n                            setMeal={setMeal}\n                            setShowBarCodeScanner={setShowBarCodeScanner}/>\n                    </Modal>}\n        </Modal>\n    )\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex:1,\n        justifyContent: 'center',\n        alignItems: 'center',\n        backgroundColor: 'rgba(0,0,0,0.5)',\n    },\n    card: {\n        display:'flex',\n        justifyContent:'center',\n        alignItems: 'center',\n        backgroundColor: 'white',\n        padding: 20,\n        borderRadius: 5,\n    },\n    input: {\n        height: 40,\n        width: 50,\n        margin: 12,\n        borderBottomWidth: 1.3,\n        borderColor:'darkviolet',\n        padding: 10,\n    },\n    nameInput: {\n        height: 40,\n        width: 300,\n        margin: 12,\n        borderBottomWidth: 1.3,\n        borderColor:'darkviolet',\n        padding: 10,\n    },\n    inputDescription: {\n        alignSelf:'flex-end',\n        margin:12, \n        fontSize:23,\n    },\n    flexBttn: {\n        marginRight: 20,\n    },\n    calorieCount: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        marginHorizontal:10,\n    }\n})\n\n\nexport default AddMealComponent"]},"metadata":{},"sourceType":"module"}