{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport DateTimePicker from '@react-native-community/datetimepicker';\nimport { Button } from 'react-native-paper';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar DatePickerComponent = function DatePickerComponent(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      open = _useState2[0],\n      setOpen = _useState2[1];\n\n  var changeDay = function changeDay(date, days) {\n    var newDate = new Date(Date.now());\n    newDate.setDate(date.getDate() + days);\n    return newDate;\n  };\n\n  var onChange = function onChange(event, selectedDate) {\n    var currentDate = selectedDate;\n    setDate(currentDate);\n  };\n\n  var showMode = function showMode(currentMode) {\n    DateTimePickerAndroid.open({\n      value: props.date,\n      onChange: onChange,\n      mode: currentMode,\n      is24Hour: true\n    });\n  };\n\n  var showDatepicker = function showDatepicker() {\n    showMode('date');\n  };\n\n  var showTimepicker = function showTimepicker() {\n    showMode('time');\n  };\n\n  return _jsxs(View, {\n    style: styles.buttonsWrapper,\n    children: [_jsx(Button, {\n      icon: \"chevron-left\",\n      style: styles.sideButton,\n      labelStyle: {\n        textAlign: 'center'\n      },\n      mode: \"text\",\n      onPress: function onPress() {\n        return props.setDate(changeDay(props.date, -1));\n      }\n    }), _jsx(Button, {\n      style: styles.middleButton,\n      mode: \"text\",\n      onPress: showDatepicker,\n      children: _jsx(Text, {\n        children: props.date.toDateString()\n      })\n    }), _jsx(Button, {\n      icon: \"chevron-right\",\n      style: styles.sideButton,\n      mode: \"text\",\n      onPress: function onPress() {\n        return props.setDate(changeDay(props.date, +1));\n      }\n    }), show && _jsx(DateTimePicker, {\n      testID: \"dateTimePicker\",\n      value: props.date,\n      mode: 'date',\n      is24Hour: true,\n      display: 'default',\n      onChange: onChange,\n      style: {\n        width: 320\n      }\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  buttonsWrapper: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    backgroundColor: 'darkviolet'\n  },\n  middleButton: {\n    flex: 0.5,\n    display: 'flex',\n    justifyContent: 'center',\n    color: '#d5d8dc'\n  },\n  sideButton: {\n    flex: 0.25,\n    display: 'flex',\n    justifyContent: 'center'\n  },\n  buttonText: {\n    display: 'flex',\n    justifyContent: 'center'\n  }\n});\nexport default DatePickerComponent;","map":{"version":3,"sources":["C:/Users/dzony/Documents/calorienotes/components/datepicker.tsx"],"names":["React","useState","DateTimePicker","Button","DatePickerComponent","props","open","setOpen","changeDay","date","days","newDate","Date","now","setDate","getDate","onChange","event","selectedDate","currentDate","showMode","currentMode","DateTimePickerAndroid","value","mode","is24Hour","showDatepicker","showTimepicker","styles","buttonsWrapper","sideButton","textAlign","middleButton","toDateString","show","width","StyleSheet","create","flexDirection","justifyContent","backgroundColor","flex","display","color","buttonText"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport { View, Text, StyleSheet } from 'react-native'\r\nimport DateTimePicker from '@react-native-community/datetimepicker';\r\nimport { Button } from 'react-native-paper';\r\n\r\ninterface Props {\r\n    date: Date,\r\n    setDate: React.Dispatch<React.SetStateAction<Date>>, \r\n}\r\n\r\nconst DatePickerComponent: React.FC<Props> = (props) => {\r\n    const [open, setOpen] = useState<boolean>(false);\r\n\r\n    const changeDay = (date: Date, days: number): Date => {\r\n        let newDate: Date = new Date(Date.now());\r\n        newDate.setDate(date.getDate() + days);\r\n        return newDate;\r\n    };\r\n\r\n\r\n\r\n    const onChange = (event, selectedDate) => {\r\n        const currentDate = selectedDate;\r\n        setDate(currentDate);\r\n      };\r\n    \r\n      const showMode = (currentMode) => {\r\n        DateTimePickerAndroid.open({\r\n          value: props.date,\r\n          onChange,\r\n          mode: currentMode,\r\n          is24Hour: true\r\n        })\r\n      };\r\n    \r\n      const showDatepicker = () => {\r\n        showMode('date');\r\n      };\r\n    \r\n      const showTimepicker = () => {\r\n        showMode('time');\r\n      };\r\n\r\n\r\nreturn (\r\n    <View style={styles.buttonsWrapper}>\r\n\r\n        <Button \r\n            icon='chevron-left'\r\n            style={styles.sideButton}\r\n            labelStyle={{textAlign:'center'}}\r\n            mode='text' \r\n            onPress={() => props.setDate(changeDay(props.date, -1))}\r\n            >\r\n        </Button>\r\n        <Button \r\n            style={styles.middleButton}\r\n            mode='text' \r\n            onPress={showDatepicker}\r\n            >\r\n            <Text>{props.date.toDateString()}</Text>\r\n        </Button>\r\n        <Button \r\n            icon='chevron-right'\r\n            style={styles.sideButton}\r\n            mode='text' \r\n            onPress={() => props.setDate(changeDay(props.date, +1))}\r\n            >\r\n        </Button>\r\n\r\n        {show && (<DateTimePicker\r\n          testID=\"dateTimePicker\"\r\n          value={props.date}\r\n          mode={'date'}\r\n          is24Hour={true}\r\n          display={'default'}\r\n          onChange={onChange}\r\n          style={{width:320}}\r\n        />)}\r\n\r\n    </View>\r\n)}\r\n\r\nconst styles = StyleSheet.create({\r\n    buttonsWrapper: {\r\n        flexDirection: 'row',\r\n        justifyContent: 'center',\r\n        backgroundColor: 'darkviolet',\r\n    },\r\n    middleButton: {\r\n        flex:0.5,\r\n        display:'flex',\r\n        justifyContent:'center',\r\n        color:'#d5d8dc',\r\n    },\r\n    sideButton:{\r\n        flex:0.25,\r\n        display:'flex',\r\n        justifyContent:'center'\r\n    },\r\n    buttonText: {\r\n        display:'flex',\r\n        justifyContent:'center'\r\n    }\r\n});\r\n\r\nexport default DatePickerComponent"]},"metadata":{},"sourceType":"module"}