{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { IconButton } from 'react-native-paper';\nimport { Button } from 'react-native-paper';\nimport { BarCodeScanner } from 'expo-barcode-scanner';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar BarCodeScannerComponent = function BarCodeScannerComponent(_ref) {\n  var setShowBarCodeScanner = _ref.setShowBarCodeScanner,\n      setMeal = _ref.setMeal;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      hasPermission = _useState2[0],\n      setHasPermission = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      scanned = _useState4[0],\n      setScanned = _useState4[1];\n\n  useEffect(function () {\n    (function _callee() {\n      var _await$BarCodeScanner, status;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(BarCodeScanner.requestPermissionsAsync());\n\n            case 2:\n              _await$BarCodeScanner = _context.sent;\n              status = _await$BarCodeScanner.status;\n              setHasPermission(status === 'granted');\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, []);\n\n  if (hasPermission === null) {\n    return _jsx(Text, {\n      children: \"Requesting for camera permission\"\n    });\n  }\n\n  if (hasPermission === false) {\n    return _jsx(Text, {\n      children: \"No access to camera\"\n    });\n  }\n\n  var fetchFoodData = function fetchFoodData() {\n    var response, data, nutrients;\n    return _regeneratorRuntime.async(function fetchFoodData$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(fetch(\"https://world.openfoodfacts.org/api/v0/product/\" + data + \".json\"));\n\n          case 3:\n            response = _context2.sent;\n            data = response.json();\n\n            if (!(data.status == 0)) {\n              _context2.next = 8;\n              break;\n            }\n\n            alert(\"Product not found. Try again or type in macronutrients manually.\");\n            return _context2.abrupt(\"return\");\n\n          case 8:\n            nutrients = data.product.nutriments;\n            setMeal({\n              name: data.product.product_name,\n              weight: 0,\n              carbs: nutrients.carbohydrates_100g,\n              fat: nutrients.fat_100g,\n              protein: nutrients.proteins_100g\n            });\n            _context2.next = 15;\n            break;\n\n          case 12:\n            _context2.prev = 12;\n            _context2.t0 = _context2[\"catch\"](0);\n            alert(_context2.t0);\n\n          case 15:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 12]], Promise);\n  };\n\n  var handleBarCodeScanned = function handleBarCodeScanned(_ref2) {\n    var type = _ref2.type,\n        data = _ref2.data;\n    setScanned(true);\n    setShowBarCodeScanner(false);\n    console.log(\"Bar code with type \" + type + \" and data \" + data + \" has been scanned!\");\n  };\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(BarCodeScanner, {\n      onBarCodeScanned: scanned ? undefined : handleBarCodeScanned,\n      style: StyleSheet.absoluteFillObject\n    }), scanned && _jsx(Button, {\n      style: styles.AndroidSafeArea,\n      onPress: function onPress() {\n        return setScanned(false);\n      },\n      children: \"Tap to Scan Again\"\n    }), _jsx(IconButton, {\n      style: {\n        alignSelf: 'flex-end'\n      },\n      icon: \"window-close\",\n      onPress: function onPress() {\n        setShowBarCodeScanner(false);\n        console.log('Scanner Closed');\n      }\n    })]\n  });\n};\n\nexport default BarCodeScannerComponent;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  AndroidSafeArea: {\n    paddingTop: Platform.OS === \"android\" ? StatusBar.currentHeight : 0,\n    flexDirection: 'row',\n    justifyContent: 'center',\n    backgroundColor: 'darkviolet'\n  }\n});","map":{"version":3,"sources":["/home/dzony/Documents/Site/calorienotes/components/barcodescanner.tsx"],"names":["React","useState","useEffect","IconButton","Button","BarCodeScanner","BarCodeScannerComponent","setShowBarCodeScanner","setMeal","hasPermission","setHasPermission","scanned","setScanned","requestPermissionsAsync","status","fetchFoodData","fetch","data","response","json","alert","nutrients","product","nutriments","name","product_name","weight","carbs","carbohydrates_100g","fat","fat_100g","protein","proteins_100g","handleBarCodeScanned","type","console","log","styles","container","undefined","StyleSheet","absoluteFillObject","AndroidSafeArea","alignSelf","create","flex","paddingTop","Platform","OS","StatusBar","currentHeight","flexDirection","justifyContent","backgroundColor"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Text, View, StyleSheet, StatusBar, Platform } from 'react-native'\nimport { IconButton } from 'react-native-paper';\nimport { Button } from 'react-native-paper'\nimport { BarCodeScanner } from 'expo-barcode-scanner'\n\nimport { Meal } from '../screens/homescreen';\n\ninterface Props {\n    setShowBarCodeScanner: React.Dispatch<React.SetStateAction<boolean>>,\n    setMeal: React.Dispatch<React.SetStateAction<Meal>>,\n}\n\nconst BarCodeScannerComponent: React.FC<Props> = ({setShowBarCodeScanner, setMeal}) => {\n    const [hasPermission, setHasPermission] = useState(null);\n    const [scanned, setScanned] = useState(false);\n\n    useEffect(() => {\n    (async () => {\n        const { status } = await BarCodeScanner.requestPermissionsAsync();\n        setHasPermission(status === 'granted');\n    })();\n    }, []);\n\n    if (hasPermission === null) {\n        return <Text>Requesting for camera permission</Text>;\n    }\n    if (hasPermission === false) {\n        return <Text>No access to camera</Text>;\n    }\n\n    const fetchFoodData = async () => {\n        try {\n            const response:any = await fetch(`https://world.openfoodfacts.org/api/v0/product/${data}.json`);\n            const data = response.json();\n            if(data.status == 0) {\n                alert(`Product not found. Try again or type in macronutrients manually.`);\n                return\n            }\n            const nutrients = data.product.nutriments;\n            setMeal({\n                name: data.product.product_name,\n                weight: 0,\n                carbs: nutrients.carbohydrates_100g,\n                fat: nutrients.fat_100g,\n                protein: nutrients.proteins_100g,\n            });\n        }\n        catch (error) {\n            alert(error);\n        }\n    }\n\n    const handleBarCodeScanned = ({ type, data}) => {\n    setScanned(true);\n    setShowBarCodeScanner(false);\n    console.log(`Bar code with type ${type} and data ${data} has been scanned!`);\n    };\n\n    return (\n    <View style={styles.container}>\n        <BarCodeScanner\n            onBarCodeScanned={scanned ? undefined : handleBarCodeScanned}\n            style={StyleSheet.absoluteFillObject}\n        />\n        {scanned && \n        <Button \n            style={styles.AndroidSafeArea} \n            onPress={() => setScanned(false)}>\n                Tap to Scan Again\n        </Button>}\n        <IconButton \n            style={{alignSelf:'flex-end'}}\n            icon='window-close' \n            onPress={() => {\n                setShowBarCodeScanner(false);\n                console.log('Scanner Closed');\n            }}\n        />\n    </View>\n    );\n};\n\nexport default BarCodeScannerComponent;\n\nconst styles = StyleSheet.create({\n    container:{\n        flex:1,\n    },\n    AndroidSafeArea: {\n        paddingTop: Platform.OS === \"android\" ? StatusBar.currentHeight : 0,\n        flexDirection: 'row',\n        justifyContent: 'center',\n        backgroundColor: 'darkviolet',\n}\n})"]},"metadata":{},"sourceType":"module"}