{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect, useContext } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Searchbar, List } from 'react-native-paper';\nimport { JwtTokenContext } from \"../contexts/jwttoken\";\nimport { BACKEND_URL } from \"../CONFIG\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar MealSearchBarComponent = function MealSearchBarComponent(_ref) {\n  var meal = _ref.meal,\n      setMeal = _ref.setMeal;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      searchResultsVisible = _useState2[0],\n      setSearchResultsVisible = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      fetchedMealsList = _useState4[0],\n      setFetchedMealsList = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      foundMealsList = _useState6[0],\n      setFoundMealsList = _useState6[1];\n\n  var jwt = useContext(JwtTokenContext);\n  useEffect(function () {\n    fetchMealsList();\n  }, []);\n\n  var fetchMealsList = function fetchMealsList() {\n    var response, data, mealsList;\n    return _regeneratorRuntime.async(function fetchMealsList$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(fetch(BACKEND_URL + \"/api/mealslist/\", {\n              method: 'GET',\n              headers: {\n                'Authorization': \"Bearer \" + (jwt == null ? void 0 : jwt.jwtAccessToken),\n                'Content-Type': 'application/json'\n              }\n            }));\n\n          case 2:\n            response = _context.sent;\n\n            if (!(response.status == 200)) {\n              _context.next = 11;\n              break;\n            }\n\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 6:\n            data = _context.sent;\n            _context.next = 9;\n            return _regeneratorRuntime.awrap(data.mealslist);\n\n          case 9:\n            mealsList = _context.sent;\n            setFetchedMealsList(mealsList);\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var searchLocalStorageForMeal = function searchLocalStorageForMeal(mealName) {\n    var mealsFound;\n    return _regeneratorRuntime.async(function searchLocalStorageForMeal$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (!fetchedMealsList) {\n              _context2.next = 3;\n              break;\n            }\n\n            mealsFound = fetchedMealsList.filter(function (element) {\n              return element.name.toLowerCase().includes(mealName.toLowerCase());\n            });\n            return _context2.abrupt(\"return\", mealsFound);\n\n          case 3:\n            ;\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var search = function search(mealName) {\n    return _regeneratorRuntime.async(function search$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            setMeal(_objectSpread(_objectSpread({}, meal), {}, {\n              name: mealName\n            }));\n\n            if (!mealName) {\n              _context3.next = 10;\n              break;\n            }\n\n            setSearchResultsVisible(true);\n            _context3.t0 = setFoundMealsList;\n            _context3.next = 6;\n            return _regeneratorRuntime.awrap(searchLocalStorageForMeal(mealName));\n\n          case 6:\n            _context3.t1 = _context3.sent;\n            (0, _context3.t0)(_context3.t1);\n            _context3.next = 12;\n            break;\n\n          case 10:\n            setSearchResultsVisible(false);\n            setFoundMealsList([]);\n\n          case 12:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var removeMealFromStorage = function removeMealFromStorage(mealName) {\n    var response, data, mealsList, mealsListWithItemRemoved, updatedMealsList, update;\n    return _regeneratorRuntime.async(function removeMealFromStorage$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return _regeneratorRuntime.awrap(fetch(BACKEND_URL + \"/api/mealslist/\", {\n              method: 'GET',\n              headers: {\n                'Authorization': \"Bearer \" + (jwt == null ? void 0 : jwt.jwtAccessToken),\n                'Content-Type': 'application/json'\n              }\n            }));\n\n          case 2:\n            response = _context4.sent;\n\n            if (!(response.status == 200)) {\n              _context4.next = 20;\n              break;\n            }\n\n            _context4.next = 6;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 6:\n            data = _context4.sent;\n            _context4.next = 9;\n            return _regeneratorRuntime.awrap(data.mealslist);\n\n          case 9:\n            mealsList = _context4.sent;\n            mealsListWithItemRemoved = mealsList.filter(function (element) {\n              return element.name !== mealName;\n            });\n            updatedMealsList = JSON.stringify(mealsListWithItemRemoved);\n            _context4.next = 14;\n            return _regeneratorRuntime.awrap(fetch(BACKEND_URL + \"/api/mealslist/\", {\n              method: 'PUT',\n              headers: {\n                'Authorization': \"Bearer \" + (jwt == null ? void 0 : jwt.jwtAccessToken),\n                'Content-Type': 'application/json'\n              },\n              body: \"{\\\"mealslist\\\": \" + updatedMealsList + \"}\"\n            }));\n\n          case 14:\n            update = _context4.sent;\n\n            if (update.status !== 200) {\n              alert(\"Error occured while removing meal from database. Please try again later!\");\n            }\n\n            ;\n            setMeal(_objectSpread(_objectSpread({}, meal), {}, {\n              name: ''\n            }));\n            setFoundMealsList([]);\n            setFetchedMealsList(mealsListWithItemRemoved);\n\n          case 20:\n            ;\n\n          case 21:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return _jsxs(View, {\n    style: {\n      flex: 1\n    },\n    children: [_jsx(Searchbar, {\n      placeholder: \"Meal Name\",\n      value: meal.name,\n      onChangeText: function onChangeText(input) {\n        return search(input);\n      },\n      style: {\n        elevation: 0,\n        borderBottomWidth: 1.5,\n        borderBottomColor: 'darkviolet'\n      }\n    }), searchResultsVisible && foundMealsList && foundMealsList.map(function (element, index) {\n      return _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          setMeal({\n            name: element.name,\n            weight: element.weight,\n            carbs: element.carbs,\n            fat: element.fat,\n            protein: element.protein\n          });\n          setFoundMealsList([]);\n        },\n        children: _jsx(List.Item, {\n          style: styles.searchResult,\n          title: element.name,\n          description: \"Carbs: \" + element.carbs + \" Fat:\" + element.fat + \" Protein:\" + element.protein,\n          right: function right(props) {\n            return _jsx(TouchableOpacity, {\n              onPress: function onPress(e) {\n                e.preventDefault();\n                removeMealFromStorage(element.name);\n              },\n              children: _jsx(List.Icon, _objectSpread(_objectSpread({}, props), {}, {\n                icon: \"window-close\"\n              }))\n            });\n          }\n        })\n      }, index);\n    })]\n  });\n};\n\nexport default MealSearchBarComponent;\nvar styles = StyleSheet.create({\n  searchResult: {\n    elevation: 1\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","useContext","Searchbar","List","JwtTokenContext","BACKEND_URL","MealSearchBarComponent","meal","setMeal","searchResultsVisible","setSearchResultsVisible","fetchedMealsList","setFetchedMealsList","foundMealsList","setFoundMealsList","jwt","fetchMealsList","fetch","method","headers","jwtAccessToken","response","status","json","data","mealslist","mealsList","searchLocalStorageForMeal","mealName","mealsFound","filter","element","name","toLowerCase","includes","search","removeMealFromStorage","mealsListWithItemRemoved","updatedMealsList","JSON","stringify","body","update","alert","flex","input","elevation","borderBottomWidth","borderBottomColor","map","index","weight","carbs","fat","protein","styles","searchResult","props","e","preventDefault","StyleSheet","create"],"sources":["/home/dzony/Documents/Site/calorienotes/mobileclient/components/mealsearchbar.tsx"],"sourcesContent":["// import React in our code\nimport React, { useState, useEffect, useContext } from 'react';\nimport { View, StyleSheet, TouchableOpacity } from 'react-native'\nimport { Searchbar, List } from 'react-native-paper';\nimport * as SecureStore from 'expo-secure-store';\n\nimport { JwtTokenContext } from '../contexts/jwttoken';\nimport { BACKEND_URL } from '../CONFIG';\n\nimport { Meal } from '../screens/homescreen';\n\ninterface Props {\n    meal: Meal,\n    setMeal: React.Dispatch<React.SetStateAction<Meal>>\n}\n\nconst MealSearchBarComponent: React.FC<Props> = ({ meal, setMeal }) => {\n    const [searchResultsVisible, setSearchResultsVisible] = useState(false);\n    const [fetchedMealsList, setFetchedMealsList] =useState<Meal[]>();\n    const [foundMealsList, setFoundMealsList] = useState<Meal[]>();\n    const jwt = useContext(JwtTokenContext);\n\n    useEffect(()=>{\n        fetchMealsList();\n    },[]);\n\n    const fetchMealsList = async () => {\n        const response = await fetch(`${BACKEND_URL}/api/mealslist/`,{\n            method: 'GET',\n            headers: {\n                'Authorization': `Bearer ${jwt?.jwtAccessToken}`,\n                'Content-Type': 'application/json'\n            }\n        });\n        if(response.status == 200){\n            const data = await response.json();\n            const mealsList:Meal[] = await data.mealslist;\n            setFetchedMealsList(mealsList);\n        }\n    }\n    const searchLocalStorageForMeal = async (mealName:string) => {\n            if(fetchedMealsList){\n                const mealsFound = fetchedMealsList.filter(element => element.name.toLowerCase().includes(mealName.toLowerCase()))\n                return mealsFound\n            };\n    };\n    const search = async (mealName: string) => {\n        setMeal({...meal ,name: mealName});\n        if(mealName){\n            setSearchResultsVisible(true);\n            setFoundMealsList(await searchLocalStorageForMeal(mealName));\n        }else{\n            setSearchResultsVisible(false);\n            setFoundMealsList([]);\n        }\n    };\n    const removeMealFromStorage = async (mealName: string) => {\n        const response = await fetch(`${BACKEND_URL}/api/mealslist/`,{\n            method: 'GET',\n            headers: {\n                'Authorization': `Bearer ${jwt?.jwtAccessToken}`,\n                'Content-Type': 'application/json'\n            }\n        });\n        if(response.status == 200){\n            const data = await response.json();\n            const mealsList:Meal[] = await data.mealslist;\n            const mealsListWithItemRemoved = mealsList.filter(element => element.name !== mealName);\n            const updatedMealsList = JSON.stringify(mealsListWithItemRemoved);\n            const update = await fetch(`${BACKEND_URL}/api/mealslist/`,{\n                method: 'PUT',\n                headers: {\n                    'Authorization': `Bearer ${jwt?.jwtAccessToken}`,\n                    'Content-Type': 'application/json'\n                },\n                body: `{\"mealslist\": ${updatedMealsList}}`\n            });\n            if(update.status !== 200){\n                alert(`Error occured while removing meal from database. Please try again later!`);\n            };\n            setMeal({...meal, name:''});\n            setFoundMealsList([]);\n            setFetchedMealsList(mealsListWithItemRemoved);\n        };\n    };\n\n    return(\n        <View style={{flex:1}}>\n            <Searchbar \n            placeholder='Meal Name'\n            value={meal.name}\n            onChangeText={input => search(input)}\n            style={{elevation:0, borderBottomWidth:1.5, borderBottomColor: 'darkviolet'}}\n            />\n            {searchResultsVisible && foundMealsList && foundMealsList.map((element, index) => \n                (<TouchableOpacity\n                    key={index}\n                    onPress={() => {\n                        setMeal({\n                            name: element.name,\n                            weight: element.weight,\n                            carbs: element.carbs,\n                            fat: element.fat,\n                            protein: element.protein\n                        });\n                        setFoundMealsList([]);\n                    }}\n                >\n                    <List.Item\n                        style={styles.searchResult}\n                        title={element.name}\n                        description={`Carbs: ${element.carbs} Fat:${element.fat} Protein:${element.protein}`}\n                        right={props => \n                            <TouchableOpacity\n                                onPress={(e) => {\n                                    e.preventDefault();\n                                    removeMealFromStorage(element.name);\n                                }}\n                            >\n                                <List.Icon \n                                    {...props} \n                                    icon='window-close'\n                                />\n                            </TouchableOpacity>}\n                    />\n                </TouchableOpacity>)\n            )}\n        </View>\n    )\n}\n\nexport default MealSearchBarComponent\n\nconst styles = StyleSheet.create({\n    searchResult:{\n        elevation: 1\n    }\n})"],"mappings":";;;;;;;;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;;;;AAEA,SAASC,SAAT,EAAoBC,IAApB,QAAgC,oBAAhC;AAGA,SAASC,eAAT;AACA,SAASC,WAAT;;;;AASA,IAAMC,sBAAuC,GAAG,SAA1CA,sBAA0C,OAAuB;EAAA,IAApBC,IAAoB,QAApBA,IAAoB;EAAA,IAAdC,OAAc,QAAdA,OAAc;;EACnE,gBAAwDT,QAAQ,CAAC,KAAD,CAAhE;EAAA;EAAA,IAAOU,oBAAP;EAAA,IAA6BC,uBAA7B;;EACA,iBAA+CX,QAAQ,EAAvD;EAAA;EAAA,IAAOY,gBAAP;EAAA,IAAyBC,mBAAzB;;EACA,iBAA4Cb,QAAQ,EAApD;EAAA;EAAA,IAAOc,cAAP;EAAA,IAAuBC,iBAAvB;;EACA,IAAMC,GAAG,GAAGd,UAAU,CAACG,eAAD,CAAtB;EAEAJ,SAAS,CAAC,YAAI;IACVgB,cAAc;EACjB,CAFQ,EAEP,EAFO,CAAT;;EAIA,IAAMA,cAAc,GAAG,SAAjBA,cAAiB;IAAA;IAAA;MAAA;QAAA;UAAA;YAAA;YAAA,iCACIC,KAAK,CAAIZ,WAAJ,sBAAiC;cACzDa,MAAM,EAAE,KADiD;cAEzDC,OAAO,EAAE;gBACL,8BAA2BJ,GAA3B,oBAA2BA,GAAG,CAAEK,cAAhC,CADK;gBAEL,gBAAgB;cAFX;YAFgD,CAAjC,CADT;;UAAA;YACbC,QADa;;YAAA,MAQhBA,QAAQ,CAACC,MAAT,IAAmB,GARH;cAAA;cAAA;YAAA;;YAAA;YAAA,iCASID,QAAQ,CAACE,IAAT,EATJ;;UAAA;YASTC,IATS;YAAA;YAAA,iCAUgBA,IAAI,CAACC,SAVrB;;UAAA;YAUTC,SAVS;YAWfd,mBAAmB,CAACc,SAAD,CAAnB;;UAXe;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAAvB;;EAcA,IAAMC,yBAAyB,GAAG,SAA5BA,yBAA4B,CAAOC,QAAP;IAAA;IAAA;MAAA;QAAA;UAAA;YAAA,KACvBjB,gBADuB;cAAA;cAAA;YAAA;;YAEhBkB,UAFgB,GAEHlB,gBAAgB,CAACmB,MAAjB,CAAwB,UAAAC,OAAO;cAAA,OAAIA,OAAO,CAACC,IAAR,CAAaC,WAAb,GAA2BC,QAA3B,CAAoCN,QAAQ,CAACK,WAAT,EAApC,CAAJ;YAAA,CAA/B,CAFG;YAAA,kCAGfJ,UAHe;;UAAA;YAIzB;;UAJyB;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAAlC;;EAMA,IAAMM,MAAM,GAAG,SAATA,MAAS,CAAOP,QAAP;IAAA;MAAA;QAAA;UAAA;YACXpB,OAAO,iCAAKD,IAAL;cAAWyB,IAAI,EAAEJ;YAAjB,GAAP;;YADW,KAERA,QAFQ;cAAA;cAAA;YAAA;;YAGPlB,uBAAuB,CAAC,IAAD,CAAvB;YAHO,eAIPI,iBAJO;YAAA;YAAA,iCAIiBa,yBAAyB,CAACC,QAAD,CAJ1C;;UAAA;YAAA;YAAA;YAAA;YAAA;;UAAA;YAMPlB,uBAAuB,CAAC,KAAD,CAAvB;YACAI,iBAAiB,CAAC,EAAD,CAAjB;;UAPO;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAAf;;EAUA,IAAMsB,qBAAqB,GAAG,SAAxBA,qBAAwB,CAAOR,QAAP;IAAA;IAAA;MAAA;QAAA;UAAA;YAAA;YAAA,iCACHX,KAAK,CAAIZ,WAAJ,sBAAiC;cACzDa,MAAM,EAAE,KADiD;cAEzDC,OAAO,EAAE;gBACL,8BAA2BJ,GAA3B,oBAA2BA,GAAG,CAAEK,cAAhC,CADK;gBAEL,gBAAgB;cAFX;YAFgD,CAAjC,CADF;;UAAA;YACpBC,QADoB;;YAAA,MAQvBA,QAAQ,CAACC,MAAT,IAAmB,GARI;cAAA;cAAA;YAAA;;YAAA;YAAA,iCASHD,QAAQ,CAACE,IAAT,EATG;;UAAA;YAShBC,IATgB;YAAA;YAAA,iCAUSA,IAAI,CAACC,SAVd;;UAAA;YAUhBC,SAVgB;YAWhBW,wBAXgB,GAWWX,SAAS,CAACI,MAAV,CAAiB,UAAAC,OAAO;cAAA,OAAIA,OAAO,CAACC,IAAR,KAAiBJ,QAArB;YAAA,CAAxB,CAXX;YAYhBU,gBAZgB,GAYGC,IAAI,CAACC,SAAL,CAAeH,wBAAf,CAZH;YAAA;YAAA,iCAaDpB,KAAK,CAAIZ,WAAJ,sBAAiC;cACvDa,MAAM,EAAE,KAD+C;cAEvDC,OAAO,EAAE;gBACL,8BAA2BJ,GAA3B,oBAA2BA,GAAG,CAAEK,cAAhC,CADK;gBAEL,gBAAgB;cAFX,CAF8C;cAMvDqB,IAAI,uBAAmBH,gBAAnB;YANmD,CAAjC,CAbJ;;UAAA;YAahBI,MAbgB;;YAqBtB,IAAGA,MAAM,CAACpB,MAAP,KAAkB,GAArB,EAAyB;cACrBqB,KAAK,4EAAL;YACH;;YAAA;YACDnC,OAAO,iCAAKD,IAAL;cAAWyB,IAAI,EAAC;YAAhB,GAAP;YACAlB,iBAAiB,CAAC,EAAD,CAAjB;YACAF,mBAAmB,CAACyB,wBAAD,CAAnB;;UA1BsB;YA2BzB;;UA3ByB;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAA9B;;EA8BA,OACI,MAAC,IAAD;IAAM,KAAK,EAAE;MAACO,IAAI,EAAC;IAAN,CAAb;IAAA,WACI,KAAC,SAAD;MACA,WAAW,EAAC,WADZ;MAEA,KAAK,EAAErC,IAAI,CAACyB,IAFZ;MAGA,YAAY,EAAE,sBAAAa,KAAK;QAAA,OAAIV,MAAM,CAACU,KAAD,CAAV;MAAA,CAHnB;MAIA,KAAK,EAAE;QAACC,SAAS,EAAC,CAAX;QAAcC,iBAAiB,EAAC,GAAhC;QAAqCC,iBAAiB,EAAE;MAAxD;IAJP,EADJ,EAOKvC,oBAAoB,IAAII,cAAxB,IAA0CA,cAAc,CAACoC,GAAf,CAAmB,UAAClB,OAAD,EAAUmB,KAAV;MAAA,OACzD,KAAC,gBAAD;QAEG,OAAO,EAAE,mBAAM;UACX1C,OAAO,CAAC;YACJwB,IAAI,EAAED,OAAO,CAACC,IADV;YAEJmB,MAAM,EAAEpB,OAAO,CAACoB,MAFZ;YAGJC,KAAK,EAAErB,OAAO,CAACqB,KAHX;YAIJC,GAAG,EAAEtB,OAAO,CAACsB,GAJT;YAKJC,OAAO,EAAEvB,OAAO,CAACuB;UALb,CAAD,CAAP;UAOAxC,iBAAiB,CAAC,EAAD,CAAjB;QACH,CAXJ;QAAA,UAaG,KAAC,IAAD,CAAM,IAAN;UACI,KAAK,EAAEyC,MAAM,CAACC,YADlB;UAEI,KAAK,EAAEzB,OAAO,CAACC,IAFnB;UAGI,WAAW,cAAYD,OAAO,CAACqB,KAApB,aAAiCrB,OAAO,CAACsB,GAAzC,iBAAwDtB,OAAO,CAACuB,OAH/E;UAII,KAAK,EAAE,eAAAG,KAAK;YAAA,OACR,KAAC,gBAAD;cACI,OAAO,EAAE,iBAACC,CAAD,EAAO;gBACZA,CAAC,CAACC,cAAF;gBACAvB,qBAAqB,CAACL,OAAO,CAACC,IAAT,CAArB;cACH,CAJL;cAAA,UAMI,KAAC,IAAD,CAAM,IAAN,kCACQyB,KADR;gBAEI,IAAI,EAAC;cAFT;YANJ,EADQ;UAAA;QAJhB;MAbH,GACQP,KADR,CADyD;IAAA,CAAnB,CAP/C;EAAA,EADJ;AA2CH,CAjHD;;AAmHA,eAAe5C,sBAAf;AAEA,IAAMiD,MAAM,GAAGK,UAAU,CAACC,MAAX,CAAkB;EAC7BL,YAAY,EAAC;IACTV,SAAS,EAAE;EADF;AADgB,CAAlB,CAAf"},"metadata":{},"sourceType":"module"}