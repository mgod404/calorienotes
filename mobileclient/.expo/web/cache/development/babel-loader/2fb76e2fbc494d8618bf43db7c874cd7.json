{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { BACKEND_URL } from \"../CONFIG\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar SignUpScreen = function SignUpScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      errorMessage = _useState6[0],\n      setErrorMessage = _useState6[1];\n\n  var signUp = function signUp() {\n    var signUpBody, response, resData;\n    return _regeneratorRuntime.async(function signUp$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            signUpBody = {\n              email: email,\n              password: password\n            };\n            _context.prev = 1;\n            console.log('sending request');\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(fetch(BACKEND_URL + \"/api/register/\", {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify(signUpBody)\n            }));\n\n          case 5:\n            response = _context.sent;\n\n            if (response.status == 201) {\n              Alert.alert(\"Registration Successful!\", \"You've signed up successfully! You can login now!\", [{\n                text: \"GO TO LOGIN PAGE\",\n                onPress: function onPress() {\n                  return navigation.navigate('Login');\n                }\n              }]);\n            }\n\n            ;\n\n            if (!(response.status == 400)) {\n              _context.next = 20;\n              break;\n            }\n\n            _context.next = 11;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 11:\n            resData = _context.sent;\n\n            if (!resData.email) {\n              _context.next = 15;\n              break;\n            }\n\n            setErrorMessage(\"Email: \" + resData.email);\n            return _context.abrupt(\"return\");\n\n          case 15:\n            ;\n\n            if (!resData.password) {\n              _context.next = 19;\n              break;\n            }\n\n            setErrorMessage(\"Password: \" + resData.password);\n            return _context.abrupt(\"return\");\n\n          case 19:\n            ;\n\n          case 20:\n            setErrorMessage(\"Error status: \" + response.status);\n            _context.next = 26;\n            break;\n\n          case 23:\n            _context.prev = 23;\n            _context.t0 = _context[\"catch\"](1);\n            _context.t0 instanceof Error ? setErrorMessage(_context.t0.message) : setErrorMessage(String(_context.t0));\n\n          case 26:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[1, 23]], Promise);\n  };\n\n  return _jsxs(View, {\n    style: styles.loginWrapper,\n    children: [_jsx(TextInput, {\n      style: styles.input,\n      onChangeText: function onChangeText(input) {\n        return setEmail(input);\n      },\n      value: email,\n      placeholder: \"Email\"\n    }), _jsx(TextInput, {\n      secureTextEntry: true,\n      style: styles.input,\n      onChangeText: function onChangeText(number) {\n        return setPassword(number);\n      },\n      value: password,\n      placeholder: \"Password\"\n    }), errorMessage ? _jsx(View, {\n      style: styles.errorView,\n      children: _jsx(Text, {\n        style: {\n          color: 'lightgray'\n        },\n        children: errorMessage\n      })\n    }) : _jsx(_Fragment, {}), _jsx(View, {\n      style: styles.buttons,\n      children: _jsx(Button, {\n        onPress: function onPress() {\n          return signUp();\n        },\n        title: \"Sign up\",\n        color: \"darkviolet\"\n      })\n    })]\n  });\n};\n\nexport default SignUpScreen;\nvar styles = StyleSheet.create({\n  loginWrapper: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  input: {\n    height: 40,\n    width: '80%',\n    margin: 12,\n    borderBottomWidth: 1,\n    padding: 10\n  },\n  buttons: {\n    width: '70%',\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginTop: 20,\n    paddingRight: 10\n  },\n  errorView: {\n    backgroundColor: 'rgba(255, 57, 57, 0.8)',\n    padding: 5,\n    borderRadius: 5\n  }\n});","map":{"version":3,"names":["React","useState","BACKEND_URL","SignUpScreen","navigation","email","setEmail","password","setPassword","errorMessage","setErrorMessage","signUp","signUpBody","console","log","fetch","method","headers","body","JSON","stringify","response","status","Alert","alert","text","onPress","navigate","json","resData","Error","message","String","styles","loginWrapper","input","number","errorView","color","buttons","StyleSheet","create","flex","justifyContent","alignItems","height","width","margin","borderBottomWidth","padding","display","flexDirection","marginTop","paddingRight","backgroundColor","borderRadius"],"sources":["/home/dzony/Documents/Site/calorienotes/mobileclient/screens/signup.tsx"],"sourcesContent":["import React, { useState } from 'react'\nimport { StyleSheet, TextInput, View, Text, Button, Alert } from 'react-native'\nimport { NativeStackNavigationProp } from '@react-navigation/native-stack'\n\nimport { BACKEND_URL } from '../CONFIG'\n\ntype RootStackParamList = {\n    Login: undefined\n};\n\ninterface NavigateProps {\n    navigation: NativeStackNavigationProp<RootStackParamList>;\n}\n\ninterface SignUp {\n    email: string,\n    password: string\n}\n\nconst SignUpScreen = ({ navigation }: NavigateProps) => {\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n\n    const [errorMessage, setErrorMessage] = useState('');\n\n    const signUp =  async () => {\n        const signUpBody:SignUp = {email:email, password:password}\n        try{\n            console.log('sending request')\n            const response = await fetch(`${BACKEND_URL}/api/register/`, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(signUpBody)\n            });\n            if(response.status == 201){\n                Alert.alert(\n                    \"Registration Successful!\",\"You've signed up successfully! You can login now!\",\n                    [\n                        {\n                            text: \"GO TO LOGIN PAGE\",\n                            onPress: () => navigation.navigate('Login'),\n                        }\n                    ],\n                );\n            };\n            if(response.status == 400){\n                const resData:SignUp = await response.json();\n                if(resData.email){\n                    setErrorMessage(`Email: ${resData.email}`);\n                    return\n                };\n                if(resData.password){\n                    setErrorMessage(`Password: ${resData.password}`);\n                    return\n                };\n            }\n            setErrorMessage(`Error status: ${response.status}`);\n        }\n        catch(e) {\n            e instanceof Error ? setErrorMessage(e.message): setErrorMessage(String(e));\n        }\n    }\n\n    return(\n        <View style={styles.loginWrapper}>\n            <TextInput\n                style={styles.input}\n                onChangeText={(input) => setEmail(input)}\n                value={email}\n                placeholder='Email'\n            />\n            <TextInput\n                secureTextEntry={true}\n                style={styles.input}\n                onChangeText={(number)=> setPassword(number)}\n                value={password}\n                placeholder=\"Password\"\n            />\n\n            {errorMessage ?\n            <View style={styles.errorView}>\n            <Text style={{color:'lightgray'}}>{errorMessage}</Text>\n            </View>: <></>}\n\n            <View style={styles.buttons}>\n                <Button \n                    onPress={() => signUp()}\n                    title='Sign up'\n                    color='darkviolet'/>\n            </View>\n        </View>\n    );\n};\n\nexport default SignUpScreen\n\nconst styles = StyleSheet.create({\n    loginWrapper: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    input: {\n        height: 40,\n        width: '80%',\n        margin: 12,\n        borderBottomWidth: 1,\n        padding: 10,\n    },\n    buttons: {\n        width:'70%',\n        display:'flex',\n        flexDirection:'row',\n        justifyContent:'space-between',\n        marginTop:20,\n        paddingRight:10,\n    },\n    errorView: {\n        backgroundColor:'rgba(255, 57, 57, 0.8)', \n        padding:5, \n        borderRadius:5\n    }\n})"],"mappings":"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"},"metadata":{},"sourceType":"module"}