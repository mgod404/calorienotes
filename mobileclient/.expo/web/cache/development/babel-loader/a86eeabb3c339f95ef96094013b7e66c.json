{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect, useContext } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { IconButton, Text } from 'react-native-paper';\nimport * as SecureStore from 'expo-secure-store';\nimport { JwtTokenContext } from \"../contexts/jwttoken\";\nimport { BACKEND_URL } from \"../CONFIG\";\nimport DatePickerComponent from \"../components/datepicker\";\nimport MealListItemComponent from \"../components/meallistitem\";\nimport BottomBarComponent from \"../components/bottombar\";\nimport AddMealComponent from \"../components/addmeal\";\nimport UpdateMealComponent from \"../components/updatemeal\";\nimport AddNoteComponent from \"../components/addnote\";\nimport SettingsComponent from \"../components/settings\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar HomeScreen = function HomeScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      showAddMeal = _useState2[0],\n      setShowAddMeal = _useState2[1];\n\n  var _React$useState = React.useState({\n    name: '',\n    weight: 0,\n    carbs: 0,\n    fat: 0,\n    protein: 0\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      meal = _React$useState2[0],\n      setMeal = _React$useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      showUpdateMeal = _useState4[0],\n      setShowUpdateMeal = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      updateMealIndex = _useState6[0],\n      setUpdateMealIndex = _useState6[1];\n\n  var _useState7 = useState(new Date()),\n      _useState8 = _slicedToArray(_useState7, 2),\n      date = _useState8[0],\n      setDate = _useState8[1];\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      meals = _useState10[0],\n      setMeals = _useState10[1];\n\n  var _useState11 = useState(''),\n      _useState12 = _slicedToArray(_useState11, 2),\n      note = _useState12[0],\n      setNote = _useState12[1];\n\n  var _useState13 = useState(false),\n      _useState14 = _slicedToArray(_useState13, 2),\n      showAddNote = _useState14[0],\n      setShowAddNote = _useState14[1];\n\n  var _useState15 = useState(false),\n      _useState16 = _slicedToArray(_useState15, 2),\n      showSettings = _useState16[0],\n      setShowSettings = _useState16[1];\n\n  var _useState17 = useState(2000),\n      _useState18 = _slicedToArray(_useState17, 2),\n      targetCalories = _useState18[0],\n      setTargetCalories = _useState18[1];\n\n  var _useState19 = useState(100),\n      _useState20 = _slicedToArray(_useState19, 2),\n      targetProtein = _useState20[0],\n      setTargetProtein = _useState20[1];\n\n  var _useState21 = useState(0),\n      _useState22 = _slicedToArray(_useState21, 2),\n      renderCounter = _useState22[0],\n      setRenderCounter = _useState22[1];\n\n  var _useState23 = useState(),\n      _useState24 = _slicedToArray(_useState23, 2),\n      diaryData = _useState24[0],\n      setDiaryData = _useState24[1];\n\n  var setInitialDiaryData = function setInitialDiaryData() {\n    var response, data, diary, isoDate, filteredDiary, DiaryToday, _isoDate, newDayData, newDayDataParsed, createDiary;\n\n    return _regeneratorRuntime.async(function setInitialDiaryData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(fetch(BACKEND_URL + \"/api/diary/\", {\n              method: 'GET',\n              headers: {\n                'Authorization': \"Bearer \" + (jwt == null ? void 0 : jwt.jwtAccessToken),\n                'Content-Type': 'application/json'\n              }\n            }));\n\n          case 3:\n            response = _context.sent;\n\n            if (!(response.status == 200)) {\n              _context.next = 16;\n              break;\n            }\n\n            _context.next = 7;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 7:\n            data = _context.sent;\n            _context.next = 10;\n            return _regeneratorRuntime.awrap(data.diary);\n\n          case 10:\n            diary = _context.sent;\n            setDiaryData(diary);\n            isoDate = date.toISOString().split('T');\n            filteredDiary = diary.filter(function (element) {\n              return element.date === isoDate[0];\n            });\n\n            if (filteredDiary[0]) {\n              DiaryToday = filteredDiary[0];\n              setMeals(DiaryToday.meals);\n              setNote(DiaryToday.additional_note);\n              setTargetCalories(DiaryToday.target_macros.target_calories);\n              setTargetProtein(DiaryToday.target_macros.target_protein);\n            }\n\n            return _context.abrupt(\"return\");\n\n          case 16:\n            if (!(response.status == 404)) {\n              _context.next = 25;\n              break;\n            }\n\n            _isoDate = date.toISOString().split('T');\n            newDayData = {\n              date: _isoDate[0],\n              meals: [],\n              additional_note: '',\n              target_macros: {\n                target_calories: targetCalories,\n                target_protein: targetProtein\n              }\n            };\n            newDayDataParsed = {\n              diary: [newDayData]\n            };\n            _context.next = 22;\n            return _regeneratorRuntime.awrap(fetch(BACKEND_URL + \"/api/diary/create/\", {\n              method: 'POST',\n              headers: {\n                'Authorization': \"Bearer \" + (jwt == null ? void 0 : jwt.jwtAccessToken),\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify(newDayDataParsed)\n            }));\n\n          case 22:\n            createDiary = _context.sent;\n\n            if (createDiary.status == 201) {\n              setDiaryData([newDayData]);\n            }\n\n            return _context.abrupt(\"return\");\n\n          case 25:\n            _context.next = 30;\n            break;\n\n          case 27:\n            _context.prev = 27;\n            _context.t0 = _context[\"catch\"](0);\n            console.error(_context.t0);\n\n          case 30:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 27]], Promise);\n  };\n\n  var updateBackendData = function updateBackendData() {\n    var updateBody, _updateDiary;\n\n    return _regeneratorRuntime.async(function updateBackendData$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            updateBody = JSON.stringify({\n              diary: diaryData\n            });\n            _context2.prev = 1;\n            _context2.next = 4;\n            return _regeneratorRuntime.awrap(fetch(BACKEND_URL + \"/api/diary/\", {\n              method: 'PUT',\n              headers: {\n                'Authorization': \"Bearer \" + (jwt == null ? void 0 : jwt.jwtAccessToken),\n                'Content-Type': 'application/json'\n              },\n              body: updateBody\n            }));\n\n          case 4:\n            _updateDiary = _context2.sent;\n\n            if (_updateDiary.status !== 200) {\n              alert(\"Error when updating diary in DB\");\n            }\n\n            _context2.next = 11;\n            break;\n\n          case 8:\n            _context2.prev = 8;\n            _context2.t0 = _context2[\"catch\"](1);\n            console.error(_context2.t0);\n\n          case 11:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[1, 8]], Promise);\n  };\n\n  var getDailyTargets = function getDailyTargets() {\n    var targets, targetsParsed;\n    return _regeneratorRuntime.async(function getDailyTargets$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return _regeneratorRuntime.awrap(SecureStore.getItemAsync('dailyTargets'));\n\n          case 2:\n            targets = _context3.sent;\n\n            if (targets) {\n              _context3.next = 5;\n              break;\n            }\n\n            return _context3.abrupt(\"return\");\n\n          case 5:\n            ;\n            _context3.next = 8;\n            return _regeneratorRuntime.awrap(JSON.parse(targets));\n\n          case 8:\n            targetsParsed = _context3.sent;\n            setTargetProtein(targetsParsed.targetProtein);\n            setTargetCalories(targetsParsed.targetCalories);\n\n          case 11:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    getDailyTargets();\n    setInitialDiaryData();\n  }, []);\n  useEffect(function () {\n    if (renderCounter < 2) {\n      setRenderCounter(renderCounter + 1);\n      return;\n    }\n\n    updateBackendData();\n  }, [diaryData]);\n\n  var update = function update(inputMeals, inputNote, inputTargetCalories, inputTargetProtein) {\n    var isoDate, diaryWithoutUpdatedDay, newDateData;\n    return _regeneratorRuntime.async(function update$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            if (diaryData) {\n              isoDate = date.toISOString().split('T');\n              diaryWithoutUpdatedDay = diaryData.filter(function (element) {\n                return element.date !== isoDate[0];\n              });\n              newDateData = {\n                date: isoDate[0],\n                meals: inputMeals,\n                additional_note: inputNote,\n                target_macros: {\n                  target_protein: inputTargetProtein,\n                  target_calories: inputTargetCalories\n                }\n              };\n              setDiaryData([].concat(_toConsumableArray(diaryWithoutUpdatedDay), [newDateData]));\n            }\n\n          case 1:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var getDiary = function getDiary() {\n    var isoDate, dayData;\n    return _regeneratorRuntime.async(function getDiary$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            if (!diaryData) {\n              _context5.next = 10;\n              break;\n            }\n\n            isoDate = date.toISOString().split('T');\n            dayData = diaryData.filter(function (element) {\n              return element.date === isoDate[0];\n            });\n\n            if (dayData[0]) {\n              _context5.next = 6;\n              break;\n            }\n\n            getDailyTargets();\n            return _context5.abrupt(\"return\");\n\n          case 6:\n            setNote(dayData[0].additional_note);\n            setMeals(dayData[0].meals);\n\n            if (dayData[0].target_macros.target_calories) {\n              setTargetCalories(dayData[0].target_macros.target_calories);\n            }\n\n            if (dayData[0].target_macros.target_protein) {\n              setTargetProtein(dayData[0].target_macros.target_protein);\n            }\n\n          case 10:\n            ;\n\n          case 11:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    setMeals([]);\n    setNote('');\n    getDiary();\n  }, [date]);\n  var jwt = useContext(JwtTokenContext);\n\n  var logout = function logout() {\n    jwt == null ? void 0 : jwt.setJwtRefreshToken('');\n    SecureStore.deleteItemAsync('jwt_refresh_token');\n    navigation.navigate('Login');\n  };\n\n  var updateDiary = function updateDiary() {\n    var passedMeals = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : meals;\n    var passedNote = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : note;\n    var passedTargetCalories = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : targetCalories;\n    var passedTargetProtein = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : targetProtein;\n    setNote(passedNote);\n    setMeals(passedMeals);\n    setTargetCalories(passedTargetCalories);\n    setTargetProtein(passedTargetProtein);\n    update(passedMeals, passedNote, passedTargetCalories, passedTargetProtein);\n  };\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(DatePickerComponent, {\n      date: date,\n      setDate: setDate\n    }), _jsx(MealListItemComponent, {\n      meals: meals,\n      setMeals: setMeals,\n      setMeal: setMeal,\n      setShowUpdateMeal: setShowUpdateMeal,\n      setUpdateMealIndex: setUpdateMealIndex,\n      updateDiary: updateDiary\n    }), _jsxs(TouchableOpacity, {\n      onPress: function onPress() {\n        return setShowAddNote(true);\n      },\n      children: [_jsx(Text, {\n        style: styles.noteTitle,\n        children: note ? 'Note' : ''\n      }), _jsx(Text, {\n        style: {\n          marginHorizontal: 18\n        },\n        children: note\n      })]\n    }), _jsxs(View, {\n      style: styles.bottom,\n      children: [_jsxs(View, {\n        style: styles.buttons,\n        children: [_jsx(IconButton, {\n          onPress: function onPress() {\n            return setShowAddMeal(true);\n          },\n          icon: \"plus-circle\",\n          color: 'darkviolet',\n          size: 60\n        }), _jsx(IconButton, {\n          icon: \"note-plus\",\n          color: 'darkviolet',\n          size: 60,\n          onPress: function onPress() {\n            return setShowAddNote(true);\n          }\n        })]\n      }), showAddMeal && _jsx(AddMealComponent, {\n        meal: meal,\n        setMeal: setMeal,\n        meals: meals,\n        setShowAddMeal: setShowAddMeal,\n        updateDiary: updateDiary\n      }), showUpdateMeal && _jsx(UpdateMealComponent, {\n        meals: meals,\n        setShowUpdateMeal: setShowUpdateMeal,\n        updateMealIndex: updateMealIndex,\n        meal: meal,\n        setMeal: setMeal,\n        updateDiary: updateDiary\n      }), showAddNote && _jsx(AddNoteComponent, {\n        note: note,\n        setShowAddNote: setShowAddNote,\n        updateDiary: updateDiary\n      }), showSettings && _jsx(SettingsComponent, {\n        setShowSettings: setShowSettings,\n        setTargetCalories: setTargetCalories,\n        setTargetProtein: setTargetProtein,\n        targetCalories: targetCalories,\n        targetProtein: targetProtein,\n        logout: logout,\n        updateDiary: updateDiary\n      }), _jsx(BottomBarComponent, {\n        meals: meals,\n        setShowSettings: setShowSettings,\n        targetCalories: targetCalories,\n        targetProtein: targetProtein\n      })]\n    })]\n  });\n};\n\nexport default HomeScreen;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  bottom: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    bottom: 0\n  },\n  buttons: {\n    display: 'flex',\n    flexDirection: 'row-reverse'\n  },\n  noteTitle: {\n    color: 'darkviolet',\n    fontWeight: 'bold',\n    textAlign: 'center'\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","useContext","IconButton","Text","SecureStore","JwtTokenContext","BACKEND_URL","DatePickerComponent","MealListItemComponent","BottomBarComponent","AddMealComponent","UpdateMealComponent","AddNoteComponent","SettingsComponent","HomeScreen","navigation","showAddMeal","setShowAddMeal","name","weight","carbs","fat","protein","meal","setMeal","showUpdateMeal","setShowUpdateMeal","updateMealIndex","setUpdateMealIndex","Date","date","setDate","meals","setMeals","note","setNote","showAddNote","setShowAddNote","showSettings","setShowSettings","targetCalories","setTargetCalories","targetProtein","setTargetProtein","renderCounter","setRenderCounter","diaryData","setDiaryData","setInitialDiaryData","fetch","method","headers","jwt","jwtAccessToken","response","status","json","data","diary","isoDate","toISOString","split","filteredDiary","filter","element","DiaryToday","additional_note","target_macros","target_calories","target_protein","newDayData","newDayDataParsed","body","JSON","stringify","createDiary","console","error","updateBackendData","updateBody","updateDiary","alert","getDailyTargets","getItemAsync","targets","parse","targetsParsed","update","inputMeals","inputNote","inputTargetCalories","inputTargetProtein","diaryWithoutUpdatedDay","newDateData","getDiary","dayData","logout","setJwtRefreshToken","deleteItemAsync","navigate","passedMeals","passedNote","passedTargetCalories","passedTargetProtein","styles","container","noteTitle","marginHorizontal","bottom","buttons","StyleSheet","create","flex","position","left","right","display","flexDirection","color","fontWeight","textAlign"],"sources":["/home/dzony/Documents/Site/calorienotes/mobileclient/screens/homescreen.tsx"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react'\r\nimport { View, StyleSheet, TouchableOpacity } from 'react-native'\r\nimport { NativeStackNavigationProp } from '@react-navigation/native-stack'\r\nimport { IconButton, Text } from 'react-native-paper';\r\nimport * as SecureStore from 'expo-secure-store'\r\n\r\nimport { JwtTokenContext } from '../contexts/jwttoken';\r\nimport { BACKEND_URL } from '../CONFIG';\r\n\r\nimport DatePickerComponent from '../components/datepicker'\r\nimport MealListItemComponent from '../components/meallistitem'\r\nimport BottomBarComponent  from '../components/bottombar'\r\nimport AddMealComponent from '../components/addmeal';\r\nimport UpdateMealComponent from '../components/updatemeal';\r\nimport AddNoteComponent from '../components/addnote';\r\nimport SettingsComponent from '../components/settings';\r\n\r\ntype RootStackParamList = {\r\n    Login: undefined\r\n};\r\n\r\ninterface NavigateProps {\r\n    navigation: NativeStackNavigationProp<RootStackParamList>;\r\n}\r\n\r\nexport interface Meal {\r\n    name: string,\r\n    weight: number,\r\n    carbs: number,\r\n    fat: number,\r\n    protein: number\r\n}\r\ninterface TargetMacros {\r\n    target_calories: number,\r\n    target_protein: number,\r\n}\r\n\r\ninterface DiaryFetchData {\r\n    date: string,\r\n    meals: Meal[],\r\n    additional_note: string,\r\n    target_macros: TargetMacros\r\n}\r\n\r\ninterface DiaryGetData {\r\n    diary: DiaryFetchData[]\r\n}\r\n\r\nconst HomeScreen = ({ navigation }: NavigateProps) => {\r\n    const [showAddMeal, setShowAddMeal] = useState(false);\r\n    const [meal, setMeal] = React.useState<Meal>({\r\n        name: '',\r\n        weight: 0,\r\n        carbs: 0,\r\n        fat: 0,\r\n        protein: 0,\r\n    });\r\n    const [showUpdateMeal, setShowUpdateMeal] = useState(false);\r\n    const [updateMealIndex, setUpdateMealIndex] = useState<number>();\r\n\r\n    const [date, setDate] = useState<Date>(new Date());\r\n\r\n    const [meals, setMeals] = useState<Array<Meal>>([]);\r\n    const [note, setNote] = useState('');\r\n    const [showAddNote, setShowAddNote] = useState(false);\r\n\r\n    const [showSettings, setShowSettings] = useState(false);\r\n\r\n    const [targetCalories, setTargetCalories] = useState(2000);\r\n    const [targetProtein, setTargetProtein] = useState(100);\r\n\r\n    //to disable a useEffect when the screen renders\r\n    const [renderCounter, setRenderCounter] = useState(0);\r\n\r\n    const [diaryData, setDiaryData] = useState<DiaryFetchData[]>();\r\n    const setInitialDiaryData = async () => {\r\n        try{\r\n            const response = await fetch(`${BACKEND_URL}/api/diary/`,{\r\n                method:'GET',\r\n                headers: {\r\n                    'Authorization': `Bearer ${jwt?.jwtAccessToken}`,\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            });\r\n            if(response.status == 200){\r\n                const data = await response.json();\r\n                const diary:DiaryFetchData[] = await data.diary;\r\n                setDiaryData(diary);\r\n                const isoDate = date.toISOString().split('T');\r\n                const filteredDiary = diary.filter(element => element.date === isoDate[0]);\r\n                if(filteredDiary[0]) {\r\n                    const DiaryToday = filteredDiary[0];\r\n                    setMeals(DiaryToday.meals);\r\n                    setNote(DiaryToday.additional_note);\r\n                    setTargetCalories(DiaryToday.target_macros.target_calories);\r\n                    setTargetProtein(DiaryToday.target_macros.target_protein);\r\n                }\r\n                return\r\n            }\r\n            if(response.status == 404){\r\n                const isoDate = date.toISOString().split('T');\r\n                const newDayData:DiaryFetchData = {\r\n                    date: isoDate[0],\r\n                    meals: [],\r\n                    additional_note: '',\r\n                    target_macros: {\r\n                        target_calories:targetCalories,\r\n                        target_protein:targetProtein,\r\n                    }\r\n                }\r\n                const newDayDataParsed:DiaryGetData = {diary: [newDayData]};\r\n                const createDiary = await fetch(`${BACKEND_URL}/api/diary/create/`, {\r\n                    method:'POST',\r\n                    headers: {\r\n                        'Authorization': `Bearer ${jwt?.jwtAccessToken}`,\r\n                        'Content-Type': 'application/json'\r\n                    },\r\n                    body: JSON.stringify(newDayDataParsed)\r\n                });\r\n                if(createDiary.status == 201) {\r\n                    setDiaryData([newDayData]);\r\n                } \r\n                return\r\n            } \r\n        }\r\n        catch (e) {\r\n            console.error(e);\r\n        }\r\n    }\r\n\r\n    const updateBackendData = async () => {\r\n        const updateBody = JSON.stringify({diary: diaryData});\r\n            try{\r\n                const updateDiary = await fetch(`${BACKEND_URL}/api/diary/`, {\r\n                    method:'PUT',\r\n                    headers: {\r\n                        'Authorization': `Bearer ${jwt?.jwtAccessToken}`,\r\n                        'Content-Type': 'application/json'\r\n                    },\r\n                    body: updateBody\r\n                });\r\n                if(updateDiary.status !== 200){\r\n                    alert(`Error when updating diary in DB`);\r\n                }\r\n            } \r\n            catch (e){\r\n                console.error(e);\r\n            }\r\n    }\r\n\r\n    const getDailyTargets = async () =>{\r\n        const targets = await SecureStore.getItemAsync('dailyTargets');\r\n        if(!targets){\r\n            return\r\n        };\r\n        const targetsParsed = await JSON.parse(targets);\r\n        setTargetProtein(targetsParsed.targetProtein);\r\n        setTargetCalories(targetsParsed.targetCalories);\r\n    }\r\n\r\n    useEffect(() => {\r\n        getDailyTargets();\r\n        setInitialDiaryData();\r\n    },[]);\r\n    useEffect(() => {\r\n        if(renderCounter < 2){\r\n            setRenderCounter(renderCounter + 1);\r\n            return\r\n        }\r\n        updateBackendData();\r\n    },[diaryData]);\r\n\r\n    const update = async (inputMeals: Meal[], inputNote:string, inputTargetCalories: number, inputTargetProtein: number) => {\r\n        if(diaryData){\r\n            const isoDate = date.toISOString().split('T');\r\n            const diaryWithoutUpdatedDay = diaryData.filter(element => element.date !== isoDate[0]);\r\n            const newDateData:DiaryFetchData = {\r\n                date: isoDate[0],\r\n                meals: inputMeals,\r\n                additional_note: inputNote,\r\n                target_macros: {\r\n                    target_protein: inputTargetProtein,\r\n                    target_calories: inputTargetCalories,\r\n                }\r\n            }\r\n            setDiaryData([...diaryWithoutUpdatedDay, newDateData]);\r\n        }\r\n    }\r\n\r\n    const getDiary = async () => {\r\n        if(diaryData){\r\n            const isoDate = date.toISOString().split('T');\r\n            const dayData = diaryData.filter(element => element.date === isoDate[0])\r\n            if(!dayData[0]){\r\n                getDailyTargets();\r\n                return\r\n            }\r\n            setNote(dayData[0].additional_note);\r\n            setMeals(dayData[0].meals);\r\n            if(dayData[0].target_macros.target_calories){\r\n                setTargetCalories(dayData[0].target_macros.target_calories);\r\n            }\r\n            if(dayData[0].target_macros.target_protein){\r\n                setTargetProtein(dayData[0].target_macros.target_protein);\r\n            }\r\n        };\r\n    }\r\n\r\n    //When date changes, the content of app changes(meals, note)\r\n    useEffect(() => {\r\n        setMeals([]);\r\n        setNote('');\r\n        getDiary();\r\n    },[date]);\r\n\r\n    const jwt = useContext(JwtTokenContext);\r\n    const logout = () => {\r\n        jwt?.setJwtRefreshToken('');\r\n        SecureStore.deleteItemAsync('jwt_refresh_token');\r\n        navigation.navigate('Login');\r\n    }\r\n\r\n    const updateDiary = (\r\n        passedMeals = meals, \r\n        passedNote = note, \r\n        passedTargetCalories = targetCalories, \r\n        passedTargetProtein = targetProtein\r\n    ) => {\r\n        setNote(passedNote);\r\n        setMeals(passedMeals);\r\n        setTargetCalories(passedTargetCalories);\r\n        setTargetProtein(passedTargetProtein);\r\n        update(passedMeals, passedNote, passedTargetCalories,passedTargetProtein);\r\n    }\r\n\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <DatePickerComponent \r\n                date={date} \r\n                setDate={setDate}\r\n            />\r\n            <MealListItemComponent \r\n                meals={meals}\r\n                setMeals={setMeals} \r\n                setMeal={setMeal}\r\n                setShowUpdateMeal={setShowUpdateMeal}\r\n                setUpdateMealIndex={setUpdateMealIndex}\r\n                updateDiary={updateDiary}\r\n            />\r\n            <TouchableOpacity onPress={() => setShowAddNote(true)}>\r\n                <Text style={styles.noteTitle}>{note? 'Note' : ''}</Text>\r\n                <Text style={{marginHorizontal:18}}>{note}</Text>\r\n            </TouchableOpacity>\r\n            <View style={styles.bottom}>\r\n                <View style={styles.buttons}>\r\n                    <IconButton \r\n                        onPress={() => setShowAddMeal(true)}\r\n                        icon=\"plus-circle\"\r\n                        color={'darkviolet'}\r\n                        size={60}\r\n                        />\r\n                    <IconButton \r\n                        icon=\"note-plus\"\r\n                        color={'darkviolet'}\r\n                        size={60}\r\n                        onPress={() => setShowAddNote(true)}\r\n                        />\r\n                </View>\r\n                { showAddMeal && \r\n                    <AddMealComponent \r\n                        meal={meal}\r\n                        setMeal={setMeal}\r\n                        meals={meals}\r\n                        setShowAddMeal={setShowAddMeal}\r\n                        updateDiary={updateDiary}\r\n                    /> }\r\n                { showUpdateMeal && \r\n                    <UpdateMealComponent \r\n                        meals={meals}\r\n                        setShowUpdateMeal={setShowUpdateMeal}\r\n                        updateMealIndex={updateMealIndex}\r\n                        meal={meal}\r\n                        setMeal={setMeal}\r\n                        updateDiary={updateDiary}\r\n                    /> }\r\n                { showAddNote && \r\n                    <AddNoteComponent \r\n                        note={note}\r\n                        setShowAddNote={setShowAddNote}\r\n                        updateDiary={updateDiary}\r\n                    />\r\n                }\r\n                { showSettings &&\r\n                    <SettingsComponent \r\n                        setShowSettings={setShowSettings}\r\n                        setTargetCalories={setTargetCalories}\r\n                        setTargetProtein={setTargetProtein}\r\n                        targetCalories={targetCalories}\r\n                        targetProtein={targetProtein}\r\n                        logout={logout}\r\n                        updateDiary={updateDiary}\r\n                    />\r\n                }\r\n                    <BottomBarComponent \r\n                        meals={meals}\r\n                        setShowSettings={setShowSettings}\r\n                        targetCalories={targetCalories}\r\n                        targetProtein={targetProtein}\r\n                    />\r\n            </View>\r\n        </View>\r\n    );\r\n}\r\n\r\nexport default HomeScreen\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n    },\r\n    bottom: {\r\n        position: 'absolute',\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n    },\r\n    buttons: {\r\n        display: 'flex',\r\n        flexDirection: 'row-reverse',\r\n    },\r\n    noteTitle: {\r\n        color:'darkviolet', \r\n        fontWeight:'bold', \r\n        textAlign:'center'\r\n    }\r\n});"],"mappings":"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"},"metadata":{},"sourceType":"module"}