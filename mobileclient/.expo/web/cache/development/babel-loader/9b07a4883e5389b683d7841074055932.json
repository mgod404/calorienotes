{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect, useContext } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { IconButton, Text } from 'react-native-paper';\nimport { JwtTokenContext } from \"../contexts/jwttoken\";\nimport DatePickerComponent from \"../components/datepicker\";\nimport MealListItemComponent from \"../components/meallistitem\";\nimport BottomBarComponent from \"../components/bottombar\";\nimport AddMealComponent from \"../components/addmeal\";\nimport UpdateMealComponent from \"../components/updatemeal\";\nimport AddNoteComponent from \"../components/addnote\";\nimport SettingsComponent from \"../components/settings\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar HomeScreen = function HomeScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      showAddMeal = _useState2[0],\n      setShowAddMeal = _useState2[1];\n\n  var _React$useState = React.useState({\n    name: '',\n    weight: 0,\n    carbs: 0,\n    fat: 0,\n    protein: 0\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      meal = _React$useState2[0],\n      setMeal = _React$useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      showUpdateMeal = _useState4[0],\n      setShowUpdateMeal = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      updateMealIndex = _useState6[0],\n      setUpdateMealIndex = _useState6[1];\n\n  var _useState7 = useState(new Date()),\n      _useState8 = _slicedToArray(_useState7, 2),\n      date = _useState8[0],\n      setDate = _useState8[1];\n\n  var _useState9 = useState([{\n    name: 'French Fries',\n    weight: 200,\n    carbs: 50,\n    fat: 30,\n    protein: 10\n  }, {\n    name: 'Hamburger',\n    weight: 500,\n    carbs: 30,\n    fat: 60,\n    protein: 40\n  }]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      meals = _useState10[0],\n      setMeals = _useState10[1];\n\n  var _useState11 = useState(''),\n      _useState12 = _slicedToArray(_useState11, 2),\n      note = _useState12[0],\n      setNote = _useState12[1];\n\n  var _useState13 = useState(false),\n      _useState14 = _slicedToArray(_useState13, 2),\n      showAddNote = _useState14[0],\n      setShowAddNote = _useState14[1];\n\n  var _useState15 = useState(false),\n      _useState16 = _slicedToArray(_useState15, 2),\n      showSettings = _useState16[0],\n      setShowSettings = _useState16[1];\n\n  var _useState17 = useState(2000),\n      _useState18 = _slicedToArray(_useState17, 2),\n      targetCalories = _useState18[0],\n      setTargetCalories = _useState18[1];\n\n  var _useState19 = useState(100),\n      _useState20 = _slicedToArray(_useState19, 2),\n      targetProtein = _useState20[0],\n      setTargetProtein = _useState20[1];\n\n  var _useState21 = useState(true),\n      _useState22 = _slicedToArray(_useState21, 2),\n      firstRender = _useState22[0],\n      setFirstRender = _useState22[1];\n\n  var getNotes = function getNotes() {\n    var response, data;\n    return _regeneratorRuntime.async(function getNotes$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(fetch(\"http://192.168.0.242:8000/api/notes/\" + date.getFullYear() + \"/\" + (date.getMonth() + 1) + \"/\" + date.getDate(), {\n              method: 'GET',\n              headers: {\n                'Authorization': \"Bearer \" + (jwt == null ? void 0 : jwt.jwtAccessToken)\n              }\n            }));\n\n          case 3:\n            response = _context.sent;\n\n            if (!(response.status == 404)) {\n              _context.next = 8;\n              break;\n            }\n\n            return _context.abrupt(\"return\");\n\n          case 8:\n            if (!(response.status == 200)) {\n              _context.next = 17;\n              break;\n            }\n\n            _context.next = 11;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 11:\n            data = _context.sent;\n            setMeals(data.meals);\n            console.log(meals);\n            _context.next = 16;\n            return _regeneratorRuntime.awrap(data);\n\n          case 16:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 17:\n            _context.next = 22;\n            break;\n\n          case 19:\n            _context.prev = 19;\n            _context.t0 = _context[\"catch\"](0);\n            console.error(_context.t0);\n\n          case 22:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 19]], Promise);\n  };\n\n  useEffect(function () {\n    if (firstRender) {\n      setFirstRender(false);\n      return;\n    }\n\n    console.log('UseEffect Triggered. It would update notes for current day');\n  }, [meals, note]);\n  useEffect(function () {\n    console.log(\"UseEffect,it would retrieve data when date changed\");\n    getNotes();\n  }, [date]);\n  var jwt = useContext(JwtTokenContext);\n\n  var logout = function logout() {\n    jwt == null ? void 0 : jwt.setJwtRefreshToken('');\n    navigation.navigate('Login');\n  };\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(DatePickerComponent, {\n      date: date,\n      setDate: setDate\n    }), _jsx(MealListItemComponent, {\n      meals: meals,\n      setMeals: setMeals,\n      setMeal: setMeal,\n      setShowUpdateMeal: setShowUpdateMeal,\n      setUpdateMealIndex: setUpdateMealIndex\n    }), _jsxs(TouchableOpacity, {\n      onPress: function onPress() {\n        return setShowAddNote(true);\n      },\n      children: [_jsx(Text, {\n        style: styles.noteTitle,\n        children: note ? 'Note' : ''\n      }), _jsx(Text, {\n        style: {\n          marginHorizontal: 18\n        },\n        children: note\n      })]\n    }), _jsxs(View, {\n      style: styles.bottom,\n      children: [_jsxs(View, {\n        style: styles.buttons,\n        children: [_jsx(IconButton, {\n          onPress: function onPress() {\n            return setShowAddMeal(true);\n          },\n          icon: \"plus-circle\",\n          color: 'darkviolet',\n          size: 60\n        }), _jsx(IconButton, {\n          icon: \"note-plus\",\n          color: 'darkviolet',\n          size: 60,\n          onPress: function onPress() {\n            return setShowAddNote(true);\n          }\n        })]\n      }), showAddMeal && _jsx(AddMealComponent, {\n        meal: meal,\n        setMeal: setMeal,\n        meals: meals,\n        setMeals: setMeals,\n        setShowAddMeal: setShowAddMeal\n      }), showUpdateMeal && _jsx(UpdateMealComponent, {\n        setMeals: setMeals,\n        meals: meals,\n        setShowUpdateMeal: setShowUpdateMeal,\n        updateMealIndex: updateMealIndex,\n        meal: meal,\n        setMeal: setMeal\n      }), showAddNote && _jsx(AddNoteComponent, {\n        note: note,\n        setNote: setNote,\n        setShowAddNote: setShowAddNote\n      }), showSettings && _jsx(SettingsComponent, {\n        setShowSettings: setShowSettings,\n        setTargetCalories: setTargetCalories,\n        setTargetProtein: setTargetProtein,\n        targetCalories: targetCalories,\n        targetProtein: targetProtein,\n        logout: logout\n      }), _jsx(BottomBarComponent, {\n        meals: meals,\n        setShowSettings: setShowSettings,\n        targetCalories: targetCalories,\n        targetProtein: targetProtein\n      })]\n    })]\n  });\n};\n\nexport default HomeScreen;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  bottom: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    bottom: 0\n  },\n  buttons: {\n    display: 'flex',\n    flexDirection: 'row-reverse'\n  },\n  noteTitle: {\n    color: 'darkviolet',\n    fontWeight: 'bold',\n    textAlign: 'center'\n  }\n});","map":{"version":3,"sources":["/home/dzony/Documents/Site/calorienotes/mobileclient/screens/homescreen.tsx"],"names":["React","useState","useEffect","useContext","IconButton","Text","JwtTokenContext","DatePickerComponent","MealListItemComponent","BottomBarComponent","AddMealComponent","UpdateMealComponent","AddNoteComponent","SettingsComponent","HomeScreen","navigation","showAddMeal","setShowAddMeal","name","weight","carbs","fat","protein","meal","setMeal","showUpdateMeal","setShowUpdateMeal","updateMealIndex","setUpdateMealIndex","Date","date","setDate","meals","setMeals","note","setNote","showAddNote","setShowAddNote","showSettings","setShowSettings","targetCalories","setTargetCalories","targetProtein","setTargetProtein","firstRender","setFirstRender","getNotes","fetch","getFullYear","getMonth","getDate","method","headers","jwt","jwtAccessToken","response","status","json","data","console","log","error","logout","setJwtRefreshToken","navigate","styles","container","noteTitle","marginHorizontal","bottom","buttons","StyleSheet","create","flex","position","left","right","display","flexDirection","color","fontWeight","textAlign"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from 'react'\r\nimport { View, StyleSheet, TouchableOpacity } from 'react-native'\r\nimport { NativeStackNavigationProp } from '@react-navigation/native-stack'\r\nimport { IconButton, Text } from 'react-native-paper';\r\n\r\nimport { JwtTokenContext } from '../contexts/jwttoken';\r\n\r\nimport DatePickerComponent from '../components/datepicker'\r\nimport MealListItemComponent from '../components/meallistitem'\r\nimport BottomBarComponent  from '../components/bottombar'\r\nimport AddMealComponent from '../components/addmeal';\r\nimport UpdateMealComponent from '../components/updatemeal';\r\nimport AddNoteComponent from '../components/addnote';\r\nimport SettingsComponent from '../components/settings';\r\n\r\ntype RootStackParamList = {\r\n    Login: undefined\r\n};\r\n\r\ninterface NavigateProps {\r\n    navigation: NativeStackNavigationProp<RootStackParamList>;\r\n}\r\n\r\nexport interface Meal {\r\n    name: string,\r\n    weight: number,\r\n    carbs: number,\r\n    fat: number,\r\n    protein: number\r\n}\r\n\r\nconst HomeScreen = ({ navigation }: NavigateProps) => {\r\n    const [showAddMeal, setShowAddMeal] = useState(false);\r\n    const [meal, setMeal] = React.useState<Meal>({\r\n        name: '',\r\n        weight: 0,\r\n        carbs: 0,\r\n        fat: 0,\r\n        protein: 0,\r\n    });\r\n    const [showUpdateMeal, setShowUpdateMeal] = useState(false);\r\n    const [updateMealIndex, setUpdateMealIndex] = useState<number>();\r\n\r\n    const [date, setDate] = useState<Date>(new Date());\r\n    const [meals, setMeals] = useState<Array<Meal>>([\r\n        {\r\n            name: 'French Fries',\r\n            weight: 200,\r\n            carbs: 50,\r\n            fat: 30,\r\n            protein: 10,\r\n        },\r\n        {\r\n            name: 'Hamburger',\r\n            weight: 500,\r\n            carbs: 30,\r\n            fat: 60,\r\n            protein: 40,\r\n        },\r\n    ]);\r\n    const [note, setNote] = useState('');\r\n    const [showAddNote, setShowAddNote] = useState(false);\r\n\r\n    const [showSettings, setShowSettings] = useState(false);\r\n\r\n    const [targetCalories, setTargetCalories] = useState(2000);\r\n    const [targetProtein, setTargetProtein] = useState(100);\r\n\r\n    const [firstRender, setFirstRender] = useState(true);\r\n\r\n\r\n    const getNotes = async () => {\r\n        try {\r\n            const response = await fetch(`http://192.168.0.242:8000/api/notes/${date.getFullYear()}/${date.getMonth() + 1}/${date.getDate()}`,{\r\n                method: 'GET',\r\n                headers: {\r\n                    'Authorization': `Bearer ${jwt?.jwtAccessToken}`,\r\n                },\r\n            });\r\n            if(response.status == 404){\r\n                //do stuff when fetch has not found anything in that day\r\n                return\r\n            }else if (response.status == 200){\r\n                const data = await response.json();\r\n                setMeals(data.meals);\r\n                console.log(meals);\r\n                return await data\r\n            }\r\n        }\r\n        catch (e){\r\n            console.error(e);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if(firstRender){\r\n            setFirstRender(false);\r\n            return\r\n        }\r\n\r\n\r\n\r\n        console.log('UseEffect Triggered. It would update notes for current day');\r\n    },[meals, note]);\r\n    useEffect(() => {\r\n        console.log(`UseEffect,it would retrieve data when date changed`);\r\n        getNotes();\r\n    },[date]);\r\n\r\n    const jwt = useContext(JwtTokenContext);\r\n    const logout = () => {\r\n        jwt?.setJwtRefreshToken('');\r\n        navigation.navigate('Login');\r\n    }\r\n\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <DatePickerComponent \r\n                date={date} \r\n                setDate={setDate}\r\n            />\r\n            <MealListItemComponent \r\n                meals={meals}\r\n                setMeals={setMeals} \r\n                setMeal={setMeal}\r\n                setShowUpdateMeal={setShowUpdateMeal}\r\n                setUpdateMealIndex={setUpdateMealIndex}\r\n            />\r\n            <TouchableOpacity onPress={() => setShowAddNote(true)}>\r\n                <Text style={styles.noteTitle}>{note? 'Note' : ''}</Text>\r\n                <Text style={{marginHorizontal:18}}>{note}</Text>\r\n            </TouchableOpacity>\r\n            <View style={styles.bottom}>\r\n                <View style={styles.buttons}>\r\n                    <IconButton \r\n                        onPress={() => setShowAddMeal(true)}\r\n                        icon=\"plus-circle\"\r\n                        color={'darkviolet'}\r\n                        size={60}\r\n                        />\r\n                    <IconButton \r\n                        icon=\"note-plus\"\r\n                        color={'darkviolet'}\r\n                        size={60}\r\n                        onPress={() => setShowAddNote(true)}\r\n                        />\r\n                </View>\r\n                { showAddMeal && \r\n                    <AddMealComponent \r\n                        meal={meal}\r\n                        setMeal={setMeal}\r\n                        meals={meals}\r\n                        setMeals={setMeals} \r\n                        setShowAddMeal={setShowAddMeal}\r\n                    /> }\r\n                { showUpdateMeal && \r\n                    <UpdateMealComponent \r\n                        setMeals={setMeals}\r\n                        meals={meals}\r\n                        setShowUpdateMeal={setShowUpdateMeal}\r\n                        updateMealIndex={updateMealIndex}\r\n                        meal={meal}\r\n                        setMeal={setMeal}\r\n                    /> }\r\n                { showAddNote && \r\n                    <AddNoteComponent \r\n                        note={note}\r\n                        setNote={setNote}\r\n                        setShowAddNote={setShowAddNote}\r\n                    />\r\n                }\r\n                { showSettings &&\r\n                    <SettingsComponent \r\n                        setShowSettings={setShowSettings}\r\n                        setTargetCalories={setTargetCalories}\r\n                        setTargetProtein={setTargetProtein}\r\n                        targetCalories={targetCalories}\r\n                        targetProtein={targetProtein}\r\n                        logout={logout}\r\n                    />\r\n                }\r\n                    <BottomBarComponent \r\n                        meals={meals}\r\n                        setShowSettings={setShowSettings}\r\n                        targetCalories={targetCalories}\r\n                        targetProtein={targetProtein}\r\n                    />\r\n            </View>\r\n        </View>\r\n    );\r\n}\r\n\r\nexport default HomeScreen\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n    },\r\n    bottom: {\r\n        position: 'absolute',\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n    },\r\n    buttons: {\r\n        display: 'flex',\r\n        flexDirection: 'row-reverse',\r\n    },\r\n    noteTitle: {\r\n        color:'darkviolet', \r\n        fontWeight:'bold', \r\n        textAlign:'center'\r\n    }\r\n});"]},"metadata":{},"sourceType":"module"}