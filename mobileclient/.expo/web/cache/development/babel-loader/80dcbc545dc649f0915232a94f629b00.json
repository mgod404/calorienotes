{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useContext } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { Button, IconButton, Text } from 'react-native-paper';\nimport BarCodeScannerComponent from \"./barcodescanner\";\nimport MealSearchBarComponent from \"./mealsearchbar\";\nimport { JwtTokenContext } from \"../contexts/jwttoken\";\nimport { BACKEND_URL } from \"../CONFIG\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar AddMealComponent = function AddMealComponent(_ref) {\n  var setShowAddMeal = _ref.setShowAddMeal,\n      meals = _ref.meals,\n      meal = _ref.meal,\n      setMeal = _ref.setMeal,\n      updateDiary = _ref.updateDiary;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      showBarCodeScanner = _useState2[0],\n      setShowBarCodeScanner = _useState2[1];\n\n  var jwt = useContext(JwtTokenContext);\n\n  var updateMeals = function updateMeals() {\n    var newMeals = [].concat(_toConsumableArray(meals), [meal]);\n    updateDiary(newMeals);\n  };\n\n  var countCalories = function countCalories() {\n    return Math.round(meal.weight / 100 * (meal.carbs * 4 + meal.fat * 9 + meal.protein * 4));\n  };\n\n  var addMealToLocalStorage = function addMealToLocalStorage() {\n    var response, data, mealsList, mealInStorage, updatedMealsList, update;\n    return _regeneratorRuntime.async(function addMealToLocalStorage$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(fetch(BACKEND_URL + \"/api/mealslist/\", {\n              method: 'GET',\n              headers: {\n                'Authorization': \"Bearer \" + (jwt == null ? void 0 : jwt.jwtAccessToken),\n                'Content-Type': 'application/json'\n              }\n            }));\n\n          case 2:\n            response = _context.sent;\n\n            if (!(response.status == 200)) {\n              _context.next = 19;\n              break;\n            }\n\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 6:\n            data = _context.sent;\n            _context.next = 9;\n            return _regeneratorRuntime.awrap(data.mealslist);\n\n          case 9:\n            mealsList = _context.sent;\n            mealInStorage = mealsList.filter(function (element) {\n              return element.name == meal.name;\n            });\n\n            if (!mealInStorage[0]) {\n              _context.next = 13;\n              break;\n            }\n\n            return _context.abrupt(\"return\");\n\n          case 13:\n            ;\n            updatedMealsList = JSON.stringify([].concat(_toConsumableArray(mealsList), [meal]));\n            _context.next = 17;\n            return _regeneratorRuntime.awrap(fetch(BACKEND_URL + \"/api/mealslist/\", {\n              method: 'PUT',\n              headers: {\n                'Authorization': \"Bearer \" + (jwt == null ? void 0 : jwt.jwtAccessToken),\n                'Content-Type': 'application/json'\n              },\n              body: \"{\\\"mealslist\\\": \" + updatedMealsList + \"}\"\n            }));\n\n          case 17:\n            update = _context.sent;\n\n            if (update.status !== 200) {\n              alert(\"Error occured during synchronizing data. Try again later!\");\n            }\n\n          case 19:\n            ;\n\n          case 20:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return _jsxs(Modal, {\n    transparent: true,\n    visible: true,\n    children: [_jsx(View, {\n      style: styles.container,\n      children: _jsxs(View, {\n        style: styles.card,\n        children: [_jsx(IconButton, {\n          style: {\n            alignSelf: 'flex-end'\n          },\n          icon: \"window-close\",\n          onPress: function onPress() {\n            setMeal({\n              name: '',\n              weight: 0,\n              carbs: 0,\n              fat: 0,\n              protein: 0\n            });\n            setShowAddMeal(false);\n          }\n        }), _jsx(View, {\n          style: {\n            display: 'flex',\n            flexDirection: 'row'\n          },\n          children: _jsx(MealSearchBarComponent, {\n            meal: meal,\n            setMeal: setMeal\n          })\n        }), _jsxs(View, {\n          style: {\n            alignSelf: 'stretch',\n            flexDirection: 'row',\n            justifyContent: 'space-between'\n          },\n          children: [_jsx(Text, {\n            style: styles.inputDescription,\n            children: \"Weight(g)\"\n          }), _jsx(TextInput, {\n            style: styles.input,\n            onChangeText: function onChangeText(input) {\n              return setMeal(_objectSpread(_objectSpread({}, meal), {}, {\n                weight: +input\n              }));\n            },\n            value: String(meal.weight),\n            placeholder: \"Weight (g)\",\n            keyboardType: \"numeric\"\n          })]\n        }), _jsxs(View, {\n          style: {\n            alignSelf: 'stretch',\n            flexDirection: 'row',\n            justifyContent: 'space-between'\n          },\n          children: [_jsx(Text, {\n            style: styles.inputDescription,\n            children: \"Carbs(g per 100g)\"\n          }), _jsx(TextInput, {\n            style: styles.input,\n            onChangeText: function onChangeText(input) {\n              return setMeal(_objectSpread(_objectSpread({}, meal), {}, {\n                carbs: +input\n              }));\n            },\n            value: String(meal.carbs),\n            placeholder: \"Carbs (g per 100g)\",\n            keyboardType: \"numeric\"\n          })]\n        }), _jsxs(View, {\n          style: {\n            alignSelf: 'stretch',\n            flexDirection: 'row',\n            justifyContent: 'space-between'\n          },\n          children: [_jsx(Text, {\n            style: styles.inputDescription,\n            children: \"Fat(g per 100g)\"\n          }), _jsx(TextInput, {\n            style: styles.input,\n            onChangeText: function onChangeText(input) {\n              return setMeal(_objectSpread(_objectSpread({}, meal), {}, {\n                fat: +input\n              }));\n            },\n            value: String(meal.fat),\n            placeholder: \"Fat (g per 100g)\",\n            keyboardType: \"numeric\"\n          })]\n        }), _jsxs(View, {\n          style: {\n            alignSelf: 'stretch',\n            flexDirection: 'row',\n            justifyContent: 'space-between'\n          },\n          children: [_jsx(Text, {\n            style: styles.inputDescription,\n            children: \"Protein(g per 100g)\"\n          }), _jsx(TextInput, {\n            style: styles.input,\n            onChangeText: function onChangeText(input) {\n              return setMeal(_objectSpread(_objectSpread({}, meal), {}, {\n                protein: +input\n              }));\n            },\n            value: String(meal.protein),\n            placeholder: \"Protein (g per 100g)\",\n            keyboardType: \"numeric\"\n          })]\n        }), _jsxs(View, {\n          style: styles.bottomPart,\n          children: [_jsxs(View, {\n            style: styles.calorieCount,\n            children: [_jsx(Text, {\n              style: {\n                fontWeight: 'bold'\n              },\n              children: \"Calories in the meal\"\n            }), _jsx(Text, {\n              children: countCalories()\n            })]\n          }), _jsx(Button, {\n            style: styles.flexBttn,\n            color: \"darkviolet\",\n            mode: \"contained\",\n            onPress: function onPress() {\n              return setShowBarCodeScanner(true);\n            },\n            children: \"Scan\"\n          }), _jsx(Button, {\n            style: styles.flexBttn,\n            color: \"darkviolet\",\n            mode: \"contained\",\n            onPress: function onPress() {\n              if (meal.weight == 0) {\n                alert(\"Please, set value for food weight.\");\n                return;\n              }\n\n              if (meal.name.length === 0) {\n                alert(\"Please, fill in meal name in order to add meal\");\n                return;\n              }\n\n              addMealToLocalStorage();\n              updateMeals();\n              setMeal({\n                name: '',\n                weight: 0,\n                carbs: 0,\n                fat: 0,\n                protein: 0\n              });\n              setShowAddMeal(false);\n            },\n            children: \"Add\"\n          })]\n        })]\n      })\n    }), showBarCodeScanner && _jsx(Modal, {\n      children: _jsx(BarCodeScannerComponent, {\n        setMeal: setMeal,\n        setShowBarCodeScanner: setShowBarCodeScanner\n      })\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'rgba(0,0,0,0.5)'\n  },\n  card: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'white',\n    padding: 20,\n    borderRadius: 5\n  },\n  input: {\n    height: 40,\n    width: 50,\n    margin: 12,\n    borderBottomWidth: 1.3,\n    borderColor: 'darkviolet',\n    padding: 10\n  },\n  nameInput: {\n    height: 40,\n    width: 300,\n    margin: 12,\n    borderBottomWidth: 1.3,\n    borderColor: 'darkviolet',\n    padding: 10\n  },\n  inputDescription: {\n    alignSelf: 'flex-end',\n    margin: 12,\n    fontSize: 23,\n    color: 'dimgrey'\n  },\n  flexBttn: {\n    marginRight: 20\n  },\n  calorieCount: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginHorizontal: 10\n  },\n  bottomPart: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    marginTop: 60\n  }\n});\nexport default AddMealComponent;","map":{"version":3,"names":["React","useState","useContext","Button","IconButton","Text","BarCodeScannerComponent","MealSearchBarComponent","JwtTokenContext","BACKEND_URL","AddMealComponent","setShowAddMeal","meals","meal","setMeal","updateDiary","showBarCodeScanner","setShowBarCodeScanner","jwt","updateMeals","newMeals","countCalories","Math","round","weight","carbs","fat","protein","addMealToLocalStorage","fetch","method","headers","jwtAccessToken","response","status","json","data","mealslist","mealsList","mealInStorage","filter","element","name","updatedMealsList","JSON","stringify","body","update","alert","styles","container","card","alignSelf","display","flexDirection","justifyContent","inputDescription","input","String","bottomPart","calorieCount","fontWeight","flexBttn","length","StyleSheet","create","flex","alignItems","backgroundColor","padding","borderRadius","height","width","margin","borderBottomWidth","borderColor","nameInput","fontSize","color","marginRight","marginHorizontal","marginTop"],"sources":["/home/dzony/Documents/Site/calorienotes/mobileclient/components/addmeal.tsx"],"sourcesContent":["import React, { useState, useContext } from 'react'\nimport { View, StyleSheet, Modal, TextInput } from 'react-native'\nimport { Button, IconButton, Text } from 'react-native-paper';\nimport BarCodeScannerComponent from './barcodescanner';\nimport MealSearchBarComponent from './mealsearchbar';\n\nimport { JwtTokenContext } from '../contexts/jwttoken';\nimport { BACKEND_URL } from '../CONFIG';\n\nimport { Meal } from '../screens/homescreen';\n\n\ninterface Props {\n    setShowAddMeal: React.Dispatch<React.SetStateAction<boolean>>,\n    meals: Meal[],\n    meal: Meal,\n    setMeal: React.Dispatch<React.SetStateAction<Meal>>,\n    updateDiary: (passedMeals?: Meal[], passedNote?: string) => void,\n}\n\nconst AddMealComponent: React.FC<Props> = (\n    {\n        setShowAddMeal,\n        meals, \n        meal, \n        setMeal, \n        updateDiary\n    }) => {\n    const [showBarCodeScanner, setShowBarCodeScanner] = useState<boolean>(false);\n    const jwt = useContext(JwtTokenContext);\n\n    const updateMeals = () => {\n        let newMeals:Meal[] = [...meals, meal];\n        updateDiary(newMeals);\n    }\n    const countCalories = () => {\n        return Math.round(meal.weight / 100 * (meal.carbs * 4 + meal.fat * 9 + meal.protein * 4))\n    }\n    const addMealToLocalStorage = async () => {\n        const response = await fetch(`${BACKEND_URL}/api/mealslist/`,{\n            method: 'GET',\n            headers: {\n                'Authorization': `Bearer ${jwt?.jwtAccessToken}`,\n                'Content-Type': 'application/json'\n            }\n        });\n        if(response.status == 200){\n            const data = await response.json();\n            const mealsList:Meal[] = await data.mealslist;\n            const mealInStorage = mealsList.filter(element => element.name == meal.name);\n            if(mealInStorage[0]){\n                return\n            };\n            const updatedMealsList = JSON.stringify([...mealsList, meal]);\n            const update = await fetch(`${BACKEND_URL}/api/mealslist/`,{\n                method: 'PUT',\n                headers: {\n                    'Authorization': `Bearer ${jwt?.jwtAccessToken}`,\n                    'Content-Type': 'application/json'\n                },\n                body: `{\"mealslist\": ${updatedMealsList}}`\n            });\n            if(update.status !== 200){\n                alert(`Error occured during synchronizing data. Try again later!`);\n            }\n        };\n    };\n\n\n    return(\n        <Modal transparent visible={true}>\n            <View style={styles.container}>\n                <View style={styles.card}>\n                    <IconButton \n                        style={{alignSelf:'flex-end'}}\n                        icon='window-close' \n                        onPress={() => {\n                            setMeal({\n                                name: '',\n                                weight: 0,\n                                carbs: 0,\n                                fat: 0,\n                                protein: 0,\n                            });\n                            setShowAddMeal(false);\n                        }}\n                    />\n\n                        <View style={{display:'flex', flexDirection: 'row',}}>\n                            <MealSearchBarComponent \n                                meal={meal}\n                                setMeal={setMeal}\n                            />\n                        </View>\n\n                        <View style={{alignSelf:'stretch', flexDirection: 'row',justifyContent:'space-between'}}>\n                        <Text style={styles.inputDescription}>Weight(g)</Text>\n                        <TextInput\n                            style={styles.input}\n                            onChangeText={(input) => setMeal({...meal, weight: +input})}\n                            value={String(meal.weight)}\n                            placeholder='Weight (g)'\n                            keyboardType='numeric'\n                        />\n                        </View>\n                        <View style={{alignSelf:'stretch', flexDirection: 'row',justifyContent:'space-between'}}>\n                        <Text style={styles.inputDescription}>Carbs(g per 100g)</Text>\n                        <TextInput\n                            style={styles.input}\n                            onChangeText={(input) => setMeal({...meal, carbs: +input})}\n                            value={String(meal.carbs)}\n                            placeholder='Carbs (g per 100g)'\n                            keyboardType='numeric'\n                        />\n                        </View>\n                        <View style={{alignSelf:'stretch', flexDirection: 'row',justifyContent:'space-between'}}>\n                        <Text style={styles.inputDescription}>Fat(g per 100g)</Text>\n                        <TextInput\n                            style={styles.input}\n                            onChangeText={(input) => setMeal({...meal, fat: +input})}\n                            value={String(meal.fat)}\n                            placeholder='Fat (g per 100g)'\n                            keyboardType='numeric'\n                        />\n                        </View>\n                        <View style={{alignSelf:'stretch', flexDirection: 'row',justifyContent:'space-between'}}>\n                        <Text style={styles.inputDescription}>Protein(g per 100g)</Text>\n                        <TextInput\n                            style={styles.input}\n                            onChangeText={(input) => setMeal({...meal, protein: +input})}\n                            value={String(meal.protein)}\n                            placeholder='Protein (g per 100g)'\n                            keyboardType='numeric'\n                        />\n                        </View>\n\n                    <View style={styles.bottomPart}>\n                        <View style={styles.calorieCount}>\n                            <Text style={{ fontWeight:'bold' }}>Calories in the meal</Text>\n                            <Text>{countCalories()}</Text>\n                        </View>\n                        <Button \n                            style={styles.flexBttn} \n                            color='darkviolet' \n                            mode='contained'\n                            onPress={() => setShowBarCodeScanner(true)}\n                            >\n                                Scan\n                        </Button>\n                        <Button \n                            style={styles.flexBttn} \n                            color='darkviolet' \n                            mode='contained'\n                            onPress={() => {\n                                if(meal.weight == 0){\n                                    alert(`Please, set value for food weight.`);\n                                    return\n                                }\n                                if(meal.name.length === 0){\n                                    alert(`Please, fill in meal name in order to add meal`);\n                                    return\n                                }\n                                addMealToLocalStorage();\n                                updateMeals();\n                                setMeal({\n                                    name: '',\n                                    weight: 0,\n                                    carbs: 0,\n                                    fat: 0,\n                                    protein: 0,\n                                });\n                                setShowAddMeal(false);\n                            }}\n                            >\n                                Add\n                        </Button>\n                    </View>\n                </View>\n            </View>\n            {showBarCodeScanner && \n                    <Modal>\n                        <BarCodeScannerComponent \n                            setMeal={setMeal}\n                            setShowBarCodeScanner={setShowBarCodeScanner}\n                            />\n                    </Modal>}\n        </Modal>\n    )\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex:1,\n        justifyContent: 'center',\n        alignItems: 'center',\n        backgroundColor: 'rgba(0,0,0,0.5)',\n    },\n    card: {\n        display:'flex',\n        justifyContent:'center',\n        alignItems: 'center',\n        backgroundColor: 'white',\n        padding: 20,\n        borderRadius: 5,\n    },\n    input: {\n        height: 40,\n        width: 50,\n        margin: 12,\n        borderBottomWidth: 1.3,\n        borderColor:'darkviolet',\n        padding: 10,\n    },\n    nameInput: {\n        height: 40,\n        width: 300,\n        margin: 12,\n        borderBottomWidth: 1.3,\n        borderColor:'darkviolet',\n        padding: 10,\n    },\n    inputDescription: {\n        alignSelf:'flex-end',\n        margin:12, \n        fontSize:23,\n        color:'dimgrey'\n    },\n    flexBttn: {\n        marginRight: 20,\n    },\n    calorieCount: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        marginHorizontal:10,\n    },\n    bottomPart: { \n        flexDirection:'row',\n        justifyContent:'center', \n        marginTop:60,\n    }\n})\n\n\nexport default AddMealComponent"],"mappings":"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"},"metadata":{},"sourceType":"module"}