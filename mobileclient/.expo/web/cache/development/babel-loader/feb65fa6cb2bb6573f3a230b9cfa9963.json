{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { BACKEND_URL } from \"../CONFIG\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar NewPasswordComponent = function NewPasswordComponent(_ref) {\n  var setTokenSent = _ref.setTokenSent,\n      setSuccess = _ref.setSuccess;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      passToken = _useState4[0],\n      setPassToken = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      password = _useState6[0],\n      setPassword = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      repeatPassword = _useState8[0],\n      setRepeatPassword = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      errorMessage = _useState10[0],\n      setErrorMessage = _useState10[1];\n\n  var changePassword = function changePassword() {\n    var response, data;\n    return _regeneratorRuntime.async(function changePassword$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!repeatPassword || !password || !passToken || !email) {\n              setErrorMessage('Please fill all the fields.');\n            }\n\n            if (!(repeatPassword !== password)) {\n              _context.next = 4;\n              break;\n            }\n\n            setErrorMessage('Password and Repeat Password fields are different!');\n            return _context.abrupt(\"return\");\n\n          case 4:\n            ;\n            _context.next = 7;\n            return _regeneratorRuntime.awrap(fetch(BACKEND_URL + \"/api/newpassword/\", {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify({\n                user: email,\n                token: passToken,\n                password: password\n              })\n            }));\n\n          case 7:\n            response = _context.sent;\n\n            if (!(response.status !== 200)) {\n              _context.next = 18;\n              break;\n            }\n\n            _context.next = 11;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 11:\n            data = _context.sent;\n            _context.t0 = setErrorMessage;\n            _context.next = 15;\n            return _regeneratorRuntime.awrap(data.message);\n\n          case 15:\n            _context.t1 = _context.sent;\n            (0, _context.t0)(_context.t1);\n            return _context.abrupt(\"return\");\n\n          case 18:\n            if (response.status === 200) {\n              setSuccess(true);\n            }\n\n            return _context.abrupt(\"return\");\n\n          case 20:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return _jsxs(View, {\n    style: styles.loginWrapper,\n    children: [_jsx(Text, {\n      style: {\n        width: '80%',\n        textAlign: 'center'\n      },\n      children: \"Please fill the fields below.\"\n    }), _jsx(TextInput, {\n      style: styles.input,\n      onChangeText: function onChangeText(input) {\n        return setEmail(input);\n      },\n      value: email,\n      placeholder: \"Email\"\n    }), _jsx(TextInput, {\n      style: styles.input,\n      onChangeText: function onChangeText(input) {\n        return setPassToken(input);\n      },\n      value: passToken,\n      placeholder: \"Password Reset Token\"\n    }), _jsx(TextInput, {\n      secureTextEntry: true,\n      style: styles.input,\n      onChangeText: function onChangeText(input) {\n        return setPassword(input);\n      },\n      value: password,\n      placeholder: \"Password\"\n    }), _jsx(TextInput, {\n      secureTextEntry: true,\n      style: styles.input,\n      onChangeText: function onChangeText(input) {\n        return setRepeatPassword(input);\n      },\n      value: repeatPassword,\n      placeholder: \"Repeat Password\"\n    }), errorMessage ? _jsx(View, {\n      style: styles.errorView,\n      children: _jsx(Text, {\n        style: {\n          color: 'lightgray'\n        },\n        children: errorMessage\n      })\n    }) : _jsx(_Fragment, {}), _jsxs(View, {\n      style: styles.buttons,\n      children: [_jsx(Button, {\n        onPress: function onPress() {\n          return setTokenSent(false);\n        },\n        title: \"Back\",\n        color: \"darkviolet\"\n      }), _jsx(Button, {\n        onPress: function onPress() {\n          return changePassword();\n        },\n        title: \"Change Password\",\n        color: \"darkviolet\"\n      })]\n    })]\n  });\n};\n\nexport default NewPasswordComponent;\nvar styles = StyleSheet.create({\n  loginWrapper: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  input: {\n    height: 40,\n    width: '80%',\n    margin: 12,\n    borderBottomWidth: 1,\n    padding: 10\n  },\n  buttons: {\n    width: '80%',\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginTop: 20,\n    paddingRight: 10\n  },\n  errorView: {\n    backgroundColor: 'rgba(255, 57, 57, 0.8)',\n    padding: 5,\n    borderRadius: 5\n  }\n});","map":{"version":3,"names":["React","useState","BACKEND_URL","NewPasswordComponent","setTokenSent","setSuccess","email","setEmail","passToken","setPassToken","password","setPassword","repeatPassword","setRepeatPassword","errorMessage","setErrorMessage","changePassword","fetch","method","headers","body","JSON","stringify","user","token","response","status","json","data","message","styles","loginWrapper","width","textAlign","input","errorView","color","buttons","StyleSheet","create","flex","justifyContent","alignItems","height","margin","borderBottomWidth","padding","display","flexDirection","marginTop","paddingRight","backgroundColor","borderRadius"],"sources":["/home/dzony/Documents/Site/calorienotes/mobileclient/components/newpassword.tsx"],"sourcesContent":["import React, { useState } from 'react'\nimport { StyleSheet, TextInput, View, Text, Button, Alert } from 'react-native'\nimport { NativeStackNavigationProp } from '@react-navigation/native-stack'\n\nimport { BACKEND_URL } from '../CONFIG'\n\ninterface Props {\n    setTokenSent: React.Dispatch<React.SetStateAction<boolean>>,\n    setSuccess: React.Dispatch<React.SetStateAction<boolean>>\n}\n\nconst NewPasswordComponent: React.FC<Props>= ({setTokenSent, setSuccess}) => {\n    const [email, setEmail] = useState('');\n    const [passToken, setPassToken] = useState('');\n    const [password, setPassword] = useState('');\n    const [repeatPassword, setRepeatPassword] = useState('');\n    const [errorMessage, setErrorMessage] = useState('');\n\n    const changePassword = async () => {\n        if(!repeatPassword || !password || !passToken || !email) {\n            setErrorMessage('Please fill all the fields.')\n        }\n        if(repeatPassword !== password) {\n            setErrorMessage('Password and Repeat Password fields are different!');\n            return\n        };\n        const response = await fetch(`${BACKEND_URL}/api/newpassword/`, {\n            method:'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({user: email, token: passToken, password:password})\n        });\n        if(response.status !== 200){\n            const data = await response.json();\n            setErrorMessage(await data.message);\n            return\n        }\n        if(response.status === 200){\n            setSuccess(true);\n        }\n        return\n    }\n\n    return(\n        <View style={styles.loginWrapper}>\n\n            <Text style={{width:'80%', textAlign:'center'}}>\n                Please fill the fields below.\n            </Text>\n\n            <TextInput\n                style={styles.input}\n                onChangeText={(input) => setEmail(input)}\n                value={email}\n                placeholder='Email'\n            />\n\n            <TextInput\n                style={styles.input}\n                onChangeText={(input) => setPassToken(input)}\n                value={passToken}\n                placeholder='Password Reset Token'\n            />\n\n            <TextInput\n                secureTextEntry={true}\n                style={styles.input}\n                onChangeText={(input) => setPassword(input)}\n                value={password}\n                placeholder='Password'\n            />\n\n            <TextInput\n                secureTextEntry={true}\n                style={styles.input}\n                onChangeText={(input) => setRepeatPassword(input)}\n                value={repeatPassword}\n                placeholder='Repeat Password'\n            />\n\n            {errorMessage ?\n            <View style={styles.errorView}>\n            <Text style={{color:'lightgray'}}>{errorMessage}</Text>\n            </View>: <></>}\n\n            <View style={styles.buttons}>\n                <Button \n                    onPress={() => setTokenSent(false)}\n                    title='Back'\n                    color='darkviolet'/>\n                <Button \n                    onPress={() => changePassword()}\n                    title='Change Password'\n                    color='darkviolet'/>\n            </View>\n\n        </View>\n    );\n};\n\nexport default NewPasswordComponent\n\nconst styles = StyleSheet.create({\n    loginWrapper: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    input: {\n        height: 40,\n        width: '80%',\n        margin: 12,\n        borderBottomWidth: 1,\n        padding: 10,\n    },\n    buttons: {\n        width:'80%',\n        display:'flex',\n        flexDirection:'row',\n        justifyContent:'space-between',\n        marginTop:20,\n        paddingRight:10,\n    },\n    errorView: {\n        backgroundColor:'rgba(255, 57, 57, 0.8)', \n        padding:5, \n        borderRadius:5\n    }\n})"],"mappings":"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"},"metadata":{},"sourceType":"module"}