{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { IconButton, Button } from 'react-native-paper';\nimport * as SecureStore from 'expo-secure-store';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar SettingsComponent = function SettingsComponent(_ref) {\n  var setShowSettings = _ref.setShowSettings,\n      targetCalories = _ref.targetCalories,\n      setTargetCalories = _ref.setTargetCalories,\n      targetProtein = _ref.targetProtein,\n      setTargetProtein = _ref.setTargetProtein,\n      logout = _ref.logout,\n      updateDiary = _ref.updateDiary;\n\n  var setTargets = function setTargets(targetKey, targetValue) {\n    var currTargets, currTargetsParsed, newTargets;\n    return _regeneratorRuntime.async(function setTargets$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(SecureStore.getItemAsync('dailyTargets'));\n\n          case 2:\n            currTargets = _context.sent;\n\n            if (!currTargets) {\n              currTargets = JSON.stringify({\n                targetCalories: targetCalories,\n                targetProtein: targetProtein\n              });\n              SecureStore.setItemAsync('dailyTargets', currTargets);\n            }\n\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(JSON.parse(currTargets));\n\n          case 6:\n            currTargetsParsed = _context.sent;\n            _context.next = 9;\n            return _regeneratorRuntime.awrap(_objectSpread({}, currTargetsParsed));\n\n          case 9:\n            newTargets = _context.sent;\n            newTargets[targetKey] = targetValue;\n            _context.next = 13;\n            return _regeneratorRuntime.awrap(SecureStore.setItemAsync('dailyTargets', JSON.stringify(newTargets)));\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return _jsx(Modal, {\n    transparent: true,\n    visible: true,\n    children: _jsx(View, {\n      style: styles.container,\n      children: _jsxs(View, {\n        style: styles.card,\n        children: [_jsxs(View, {\n          style: styles.setting,\n          children: [_jsx(Text, {\n            children: \"Set calorie goal\"\n          }), _jsx(View, {\n            style: styles.input,\n            children: _jsx(TextInput, {\n              keyboardType: \"numeric\",\n              value: targetCalories.toString(),\n              onChangeText: function onChangeText(input) {\n                setTargetCalories(+input);\n                updateDiary(undefined, undefined, +input);\n                setTargets('targetCalories', +input);\n              }\n            })\n          })]\n        }), _jsxs(View, {\n          style: styles.setting,\n          children: [_jsx(Text, {\n            children: \"Set protein goal\"\n          }), _jsx(View, {\n            style: styles.input,\n            children: _jsx(TextInput, {\n              keyboardType: \"numeric\",\n              value: targetProtein.toString(),\n              onChangeText: function onChangeText(input) {\n                setTargetProtein(+input);\n                updateDiary(undefined, undefined, undefined, +input);\n                setTargets('targetProtein', +input);\n              }\n            })\n          })]\n        }), _jsxs(View, {\n          style: styles.buttons,\n          children: [_jsx(IconButton, {\n            icon: \"check\",\n            color: \"darkviolet\",\n            onPress: function onPress() {\n              return setShowSettings(false);\n            }\n          }), _jsx(Button, {\n            color: \"darkviolet\",\n            onPress: function onPress() {\n              return logout();\n            },\n            children: \"Logout\"\n          })]\n        })]\n      })\n    })\n  });\n};\n\nexport default SettingsComponent;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'rgba(0,0,0,0.5)'\n  },\n  card: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'white',\n    width: '80%',\n    padding: 20,\n    borderRadius: 5\n  },\n  setting: {\n    flexDirection: 'row',\n    alignSelf: 'stretch',\n    justifyContent: 'space-between'\n  },\n  input: {\n    borderBottomColor: 'darkviolet',\n    borderBottomWidth: 1\n  },\n  buttons: {\n    alignSelf: 'stretch',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginTop: 10\n  }\n});","map":{"version":3,"names":["React","IconButton","Button","SecureStore","SettingsComponent","setShowSettings","targetCalories","setTargetCalories","targetProtein","setTargetProtein","logout","updateDiary","setTargets","targetKey","targetValue","getItemAsync","currTargets","JSON","stringify","setItemAsync","parse","currTargetsParsed","newTargets","styles","container","card","setting","input","toString","undefined","buttons","StyleSheet","create","flex","justifyContent","alignItems","backgroundColor","display","width","padding","borderRadius","flexDirection","alignSelf","borderBottomColor","borderBottomWidth","marginTop"],"sources":["/home/dzony/Documents/Site/calorienotes/mobileclient/components/settings.tsx"],"sourcesContent":["import React, { useState } from 'react'\nimport { View, StyleSheet, Modal, Text, TextInput} from 'react-native'\nimport { IconButton, Button } from 'react-native-paper';\nimport * as SecureStore from 'expo-secure-store'\n\nimport { Meal } from '../screens/homescreen';\n\ninterface Props {\n    setShowSettings: React.Dispatch<React.SetStateAction<boolean>>,\n    targetCalories: number,\n    setTargetCalories: React.Dispatch<React.SetStateAction<number>>,\n    targetProtein: number,\n    setTargetProtein: React.Dispatch<React.SetStateAction<number>>,\n    logout: () => void,\n    updateDiary: (passedMeals?: Meal[], passedNote?: string, passedTargetCalories?: number, passedTargetProtein?: number) => void\n}\n\nconst SettingsComponent: React.FC<Props> = ({\n    setShowSettings ,\n    targetCalories, \n    setTargetCalories, \n    targetProtein, \n    setTargetProtein, \n    logout,\n    updateDiary\n    }) => {\n\n        const setTargets = async (targetKey: string, targetValue: number) => {\n            let currTargets = await SecureStore.getItemAsync('dailyTargets');\n            if(!currTargets){\n                currTargets = JSON.stringify({targetCalories, targetProtein});\n                SecureStore.setItemAsync('dailyTargets',currTargets);\n            }\n            const currTargetsParsed = await JSON.parse(currTargets);\n            let newTargets = await {...currTargetsParsed};\n            newTargets[targetKey] = targetValue;\n            await SecureStore.setItemAsync('dailyTargets', JSON.stringify(newTargets));\n        }\n\n    return(\n        <Modal transparent visible={true}>\n            <View style={styles.container}>\n                <View style={styles.card}>\n                    <View style={styles.setting}>\n                        <Text>Set calorie goal</Text>\n                        <View style={styles.input}>\n                            <TextInput \n                                keyboardType='numeric'\n                                value={targetCalories.toString()}\n                                onChangeText={(input) => {\n                                    setTargetCalories(+input);\n                                    updateDiary(undefined,undefined,+input);\n                                    setTargets('targetCalories', +input);\n                                }}\n                            />\n                        </View>\n                    </View>\n                    <View style={styles.setting}>\n                        <Text>Set protein goal</Text>\n                        <View style={styles.input}>\n                            <TextInput \n                                keyboardType='numeric'\n                                value={targetProtein.toString()}\n                                onChangeText={(input) => {\n                                    setTargetProtein(+input);\n                                    updateDiary(undefined,undefined,undefined,+input);\n                                    setTargets('targetProtein', +input);\n                                }}\n                            />\n                        </View>\n                    </View>\n                    <View style={styles.buttons}>\n                        <IconButton \n                            icon='check'\n                            color='darkviolet'\n                            onPress={() => setShowSettings(false)}\n                        />\n                        <Button\n                            color='darkviolet'\n                            onPress={()=> logout()}\n                        >Logout</Button>\n                    </View>\n                </View>\n            </View>\n        </Modal>\n    )\n};\n\nexport default SettingsComponent\n\nconst styles = StyleSheet.create({\n    container: {\n        flex:1,\n        justifyContent: 'center',\n        alignItems: 'center',\n        backgroundColor: 'rgba(0,0,0,0.5)',\n    },\n    card: {\n        display:'flex',\n        justifyContent:'center',\n        alignItems: 'center',\n        backgroundColor: 'white',\n        width: '80%',\n        padding: 20,\n        borderRadius: 5,\n    },\n    setting: {\n        flexDirection:'row', \n        alignSelf:'stretch',\n        justifyContent:'space-between'\n    },\n    input: {\n        borderBottomColor: 'darkviolet',\n        borderBottomWidth: 1,\n    },\n    buttons: {\n        alignSelf:'stretch', \n        flexDirection:'row', \n        justifyContent:'space-between',\n        marginTop: 10\n    }\n})"],"mappings":"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"},"metadata":{},"sourceType":"module"}