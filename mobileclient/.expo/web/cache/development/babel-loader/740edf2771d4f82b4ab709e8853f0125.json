{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Button } from 'react-native-paper';\nimport DateTimePicker from '@react-native-community/datetimepicker';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar DatePickerComponent = function DatePickerComponent(props) {\n  var _useState = useState('date'),\n      _useState2 = _slicedToArray(_useState, 2),\n      mode = _useState2[0],\n      setMode = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      show = _useState4[0],\n      setShow = _useState4[1];\n\n  var onChange = function onChange(event, selectedDate) {\n    var currentDate = selectedDate;\n    setShow(false);\n    setDate(currentDate);\n  };\n\n  var showMode = function showMode(currentMode) {\n    setShow(true);\n    setMode(currentMode);\n  };\n\n  var showDatepicker = function showDatepicker() {\n    showMode('date');\n  };\n\n  var showTimepicker = function showTimepicker() {\n    showMode('time');\n  };\n\n  var changeDay = function changeDay(date, days) {\n    var newDate = new Date(Date.now());\n    newDate.setDate(date.getDate() + days);\n    return newDate;\n  };\n\n  return _jsxs(View, {\n    style: styles.buttonsWrapper,\n    children: [_jsx(Button, {\n      icon: \"chevron-left\",\n      style: styles.sideButton,\n      labelStyle: {\n        textAlign: 'center'\n      },\n      mode: \"text\",\n      onPress: function onPress() {\n        return props.setDate(changeDay(props.date, -1));\n      }\n    }), _jsx(Button, {\n      style: styles.middleButton,\n      mode: \"text\",\n      onPress: showDatepicker,\n      children: _jsx(Text, {\n        children: props.date.toDateString()\n      })\n    }), _jsx(Button, {\n      icon: \"chevron-right\",\n      style: styles.sideButton,\n      mode: \"text\",\n      onPress: function onPress() {\n        return props.setDate(changeDay(props.date, +1));\n      }\n    }), show && _jsx(DateTimePicker, {\n      testID: \"dateTimePicker\",\n      value: date,\n      mode: mode,\n      is24Hour: true,\n      onChange: onChange\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  buttonsWrapper: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    backgroundColor: 'darkviolet'\n  },\n  middleButton: {\n    flex: 0.5,\n    display: 'flex',\n    justifyContent: 'center',\n    color: '#d5d8dc'\n  },\n  sideButton: {\n    flex: 0.25,\n    display: 'flex',\n    justifyContent: 'center'\n  },\n  buttonText: {\n    display: 'flex',\n    justifyContent: 'center'\n  }\n});\nexport default DatePickerComponent;","map":{"version":3,"sources":["C:/Users/dzony/Documents/calorienotes/components/datepicker.tsx"],"names":["React","useState","Button","DateTimePicker","DatePickerComponent","props","mode","setMode","show","setShow","onChange","event","selectedDate","currentDate","setDate","showMode","currentMode","showDatepicker","showTimepicker","changeDay","date","days","newDate","Date","now","getDate","styles","buttonsWrapper","sideButton","textAlign","middleButton","toDateString","StyleSheet","create","flexDirection","justifyContent","backgroundColor","flex","display","color","buttonText"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport { View, Text, StyleSheet } from 'react-native'\r\nimport { Button } from 'react-native-paper'\r\nimport DateTimePicker from '@react-native-community/datetimepicker'\r\n\r\ninterface Props {\r\n    date: Date,\r\n    setDate: React.Dispatch<React.SetStateAction<Date>>, \r\n}\r\n\r\nconst DatePickerComponent: React.FC<Props> = (props) => {\r\n    const [mode, setMode] = useState('date');\r\n    const [show, setShow] = useState(false);\r\n  \r\n    const onChange = (event, selectedDate) => {\r\n      const currentDate = selectedDate;\r\n      setShow(false);\r\n      setDate(currentDate);\r\n    };\r\n  \r\n    const showMode = (currentMode) => {\r\n      setShow(true);\r\n      setMode(currentMode);\r\n    };\r\n  \r\n    const showDatepicker = () => {\r\n      showMode('date');\r\n    };\r\n  \r\n    const showTimepicker = () => {\r\n      showMode('time');\r\n    };\r\n\r\n\r\n\r\n    const changeDay = (date: Date, days: number): Date => {\r\n        let newDate: Date = new Date(Date.now());\r\n        newDate.setDate(date.getDate() + days);\r\n        return newDate;\r\n    };\r\n\r\nreturn (\r\n    <View style={styles.buttonsWrapper}>\r\n\r\n        <Button \r\n            icon='chevron-left'\r\n            style={styles.sideButton}\r\n            labelStyle={{textAlign:'center'}}\r\n            mode='text' \r\n            onPress={() => props.setDate(changeDay(props.date, -1))}\r\n            >\r\n        </Button>\r\n        <Button \r\n            style={styles.middleButton}\r\n            mode='text' \r\n            onPress={showDatepicker}\r\n            >\r\n            <Text>{props.date.toDateString()}</Text>\r\n        </Button>\r\n        <Button \r\n            icon='chevron-right'\r\n            style={styles.sideButton}\r\n            mode='text' \r\n            onPress={() => props.setDate(changeDay(props.date, +1))}\r\n            >\r\n        </Button>\r\n        {show && (\r\n          <DateTimePicker\r\n            testID=\"dateTimePicker\"\r\n            value={date}\r\n            mode={mode}\r\n            is24Hour={true}\r\n            onChange={onChange}\r\n          />\r\n        )}\r\n\r\n    </View>\r\n)}\r\n\r\nconst styles = StyleSheet.create({\r\n    buttonsWrapper: {\r\n        flexDirection: 'row',\r\n        justifyContent: 'center',\r\n        backgroundColor: 'darkviolet',\r\n    },\r\n    middleButton: {\r\n        flex:0.5,\r\n        display:'flex',\r\n        justifyContent:'center',\r\n        color:'#d5d8dc',\r\n    },\r\n    sideButton:{\r\n        flex:0.25,\r\n        display:'flex',\r\n        justifyContent:'center'\r\n    },\r\n    buttonText: {\r\n        display:'flex',\r\n        justifyContent:'center'\r\n    }\r\n});\r\n\r\nexport default DatePickerComponent"]},"metadata":{},"sourceType":"module"}