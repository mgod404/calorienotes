{"ast":null,"code":"import React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Appbar, Text, IconButton } from 'react-native-paper';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar BottomBarComponent = function BottomBarComponent(_ref) {\n  var meals = _ref.meals,\n      setShowSettings = _ref.setShowSettings,\n      targetCalories = _ref.targetCalories,\n      targetProtein = _ref.targetProtein;\n\n  var countTotalMacro = function countTotalMacro(field) {\n    var total = 0;\n    meals && meals.forEach(function (element) {\n      return total += Number(element[field]) * element.weight / 100;\n    });\n    return Math.round(total);\n  };\n\n  var countTotalCalories = meals.reduce(function (total, meal) {\n    return Math.round(total + meal.weight / 100 * (meal.carbs * 4 + meal.fat * 9 + meal.protein * 4));\n  }, 0);\n  return _jsxs(Appbar, {\n    style: styles.barView,\n    children: [_jsx(View, {\n      style: styles.totalView,\n      children: _jsx(IconButton, {\n        icon: \"cog-outline\",\n        color: \"darkviolet\",\n        onPress: function onPress() {\n          return setShowSettings(true);\n        }\n      })\n    }), _jsxs(View, {\n      style: styles.totalView,\n      children: [_jsx(Text, {\n        children: \"Carbs\"\n      }), _jsx(Text, {\n        children: countTotalMacro('carbs').toFixed()\n      })]\n    }), _jsxs(View, {\n      style: styles.totalView,\n      children: [_jsx(Text, {\n        children: \"Fat\"\n      }), _jsx(Text, {\n        children: countTotalMacro('fat').toFixed()\n      })]\n    }), _jsxs(View, {\n      style: styles.totalView,\n      children: [_jsx(Text, {\n        style: Number(countTotalMacro('protein')) < targetCalories ? styles.redFont : styles.greenFont,\n        children: \"Protein\"\n      }), _jsxs(Text, {\n        style: Number(countTotalMacro('protein')) < targetCalories ? styles.redFont : styles.greenFont,\n        children: [Math.floor(countTotalMacro('protein')), \" / \", targetProtein]\n      })]\n    }), _jsxs(View, {\n      style: styles.totalView,\n      children: [_jsx(Text, {\n        style: countTotalCalories > targetCalories ? styles.redFont : styles.greenFont,\n        children: \"Total Calories\"\n      }), _jsxs(Text, {\n        style: countTotalCalories > targetCalories ? styles.redFont : styles.greenFont,\n        children: [countTotalCalories, \" / \", targetCalories]\n      })]\n    })]\n  });\n};\n\nexport default BottomBarComponent;\nvar styles = StyleSheet.create({\n  barView: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  totalView: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center'\n  },\n  redFont: {\n    color: 'red'\n  },\n  greenFont: {\n    color: 'green'\n  }\n});","map":{"version":3,"names":["React","Appbar","Text","IconButton","BottomBarComponent","meals","setShowSettings","targetCalories","targetProtein","countTotalMacro","field","total","forEach","element","Number","weight","Math","round","countTotalCalories","reduce","meal","carbs","fat","protein","styles","barView","totalView","toFixed","redFont","greenFont","floor","StyleSheet","create","display","flexDirection","justifyContent","color"],"sources":["/home/dzony/Documents/Site/calorienotes/mobileclient/components/bottombar.tsx"],"sourcesContent":["import React, { useState } from 'react'\r\nimport { View, StyleSheet } from 'react-native'\r\nimport { Appbar, Text, IconButton } from 'react-native-paper';\r\n\r\nimport { Meal } from '../screens/homescreen';\r\ninterface Props {\r\n    meals: Meal[],\r\n    setShowSettings: React.Dispatch<React.SetStateAction<boolean>>,\r\n    targetCalories: Number,\r\n    targetProtein: Number\r\n}\r\nconst BottomBarComponent: React.FC<Props> = ({meals, setShowSettings, targetCalories, targetProtein}) => {\r\n\r\n    const countTotalMacro = (field:string) => {\r\n        let total = 0;\r\n        meals && meals.forEach(element => total += (Number(element[field as keyof Meal]) * element.weight/100) );\r\n        return Math.round(total)\r\n    };\r\n    const countTotalCalories = meals.reduce((total, meal) => {\r\n            return Math.round(total + (meal.weight / 100 * (meal.carbs * 4 + meal.fat * 9 + meal.protein * 4)))\r\n        }, 0);\r\n\r\n    return(\r\n        <Appbar style={styles.barView}>\r\n            <View style={styles.totalView}>\r\n                <IconButton \r\n                    icon='cog-outline'\r\n                    color='darkviolet'\r\n                    onPress={() => setShowSettings(true)}\r\n                />\r\n            </View>\r\n            <View style={styles.totalView}>\r\n                <Text>\r\n                    Carbs\r\n                </Text>\r\n                <Text>\r\n                    {countTotalMacro('carbs').toFixed()}\r\n                </Text>\r\n            </View>\r\n            <View style={styles.totalView}>\r\n                <Text>\r\n                    Fat\r\n                </Text>\r\n                <Text>\r\n                    {countTotalMacro('fat').toFixed()}\r\n                </Text>\r\n            </View>\r\n            <View style={styles.totalView}>\r\n                <Text style={Number(countTotalMacro('protein')) < targetCalories ? styles.redFont : styles.greenFont}>\r\n                    Protein\r\n                </Text>\r\n                <Text style={Number(countTotalMacro('protein')) < targetCalories ? styles.redFont : styles.greenFont}>\r\n                    {Math.floor(countTotalMacro('protein'))} / {targetProtein}\r\n                </Text>\r\n            </View>\r\n            <View style={styles.totalView}>\r\n                <Text style={countTotalCalories > targetCalories ? styles.redFont : styles.greenFont}>\r\n                    Total Calories\r\n                </Text>\r\n                <Text style={countTotalCalories > targetCalories ? styles.redFont : styles.greenFont}>\r\n                    {countTotalCalories} / {targetCalories}\r\n                </Text>\r\n            </View>\r\n        </Appbar>\r\n    );\r\n};\r\n\r\nexport default BottomBarComponent\r\n\r\nconst styles = StyleSheet.create({\r\n    barView: {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between'\r\n    },\r\n    totalView: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n    },\r\n    redFont: {\r\n        color: 'red'\r\n    },\r\n    greenFont: {\r\n        color: 'green'\r\n    }\r\n})"],"mappings":"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"},"metadata":{},"sourceType":"module"}