{"ast":null,"code":"import React from 'react';\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { IconButton, DataTable } from 'react-native-paper';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar MealListItemComponent = function MealListItemComponent(_ref) {\n  var meals = _ref.meals,\n      setMeals = _ref.setMeals,\n      setMeal = _ref.setMeal,\n      setShowUpdateMeal = _ref.setShowUpdateMeal,\n      setUpdateMealIndex = _ref.setUpdateMealIndex;\n\n  var countCalories = function countCalories(weight, carbs, fat, protein) {\n    return weight / 100 * (carbs * 4 + fat * 9 + protein * 4);\n  };\n\n  var removeMealAlert = function removeMealAlert(indexPassed, mealName) {\n    Alert.alert(\"Delete \" + mealName, \"Are you sure you want to delete \" + mealName, [{\n      text: 'Yes',\n      onPress: function onPress() {\n        return removeMeal(indexPassed);\n      }\n    }, {\n      text: \"No\"\n    }]);\n  };\n\n  var removeMeal = function removeMeal(indexPassed) {\n    var newMeals = meals.filter(function (element, index) {\n      return index != indexPassed;\n    });\n    setMeals(newMeals);\n  };\n\n  return _jsxs(DataTable, {\n    children: [_jsxs(DataTable.Header, {\n      children: [_jsx(DataTable.Title, {\n        children: \"Meal\"\n      }), _jsx(DataTable.Title, {\n        numeric: true,\n        children: \"Protein\"\n      }), _jsx(DataTable.Title, {\n        numeric: true,\n        children: \"Calories\"\n      }), _jsx(DataTable.Title, {\n        numeric: true,\n        children: \"Remove\"\n      })]\n    }), meals.map(function (meal, index) {\n      return _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          setShowUpdateMeal(true);\n          setMeal({\n            name: meal.name,\n            weight: meal.weight,\n            carbs: meal.carbs,\n            fat: meal.fat,\n            protein: meal.protein\n          });\n          setUpdateMealIndex(index);\n        },\n        children: _jsxs(DataTable.Row, {\n          children: [_jsx(DataTable.Cell, {\n            children: meal.name\n          }), _jsx(DataTable.Cell, {\n            numeric: true,\n            children: meal.protein * meal.weight / 100\n          }), _jsx(DataTable.Cell, {\n            numeric: true,\n            children: countCalories(meal.weight, meal.carbs, meal.fat, meal.protein)\n          }), _jsx(DataTable.Cell, {\n            numeric: true,\n            children: _jsx(IconButton, {\n              icon: \"delete-outline\",\n              color: \"darkviolet\",\n              onPress: function onPress(e) {\n                e.stopPropagation();\n                removeMealAlert(index, meal.name);\n              }\n            })\n          })]\n        })\n      }, index);\n    })]\n  });\n};\n\nexport default MealListItemComponent;","map":{"version":3,"sources":["/home/dzony/Documents/Site/calorienotes/mobileclient/components/meallistitem.tsx"],"names":["React","IconButton","DataTable","MealListItemComponent","meals","setMeals","setMeal","setShowUpdateMeal","setUpdateMealIndex","countCalories","weight","carbs","fat","protein","removeMealAlert","indexPassed","mealName","Alert","alert","text","onPress","removeMeal","newMeals","filter","element","index","map","meal","name","e","stopPropagation"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport { Alert, TouchableOpacity } from 'react-native'\r\nimport { IconButton, DataTable } from 'react-native-paper';\r\n\r\nimport { Meal } from '../screens/homescreen'\r\n\r\ninterface Props {\r\n    meals: Meal[],\r\n    setMeals: React.Dispatch<React.SetStateAction<Meal[]>>,\r\n    setMeal: React.Dispatch<React.SetStateAction<Meal>>,\r\n    setShowUpdateMeal:  React.Dispatch<React.SetStateAction<boolean>>,\r\n    setUpdateMealIndex: React.Dispatch<React.SetStateAction<number | undefined>>,\r\n}\r\n\r\nconst MealListItemComponent:React.FC<Props> = ({meals, setMeals, setMeal, setShowUpdateMeal, setUpdateMealIndex}) => {\r\n\r\n    const countCalories = (weight:number, carbs:number, fat:number, protein:number) => {\r\n        return (weight / 100 * (carbs * 4 + fat * 9 + protein * 4))\r\n    }\r\n\r\n    const removeMealAlert = (indexPassed: number, mealName: string) => {\r\n        Alert.alert(`Delete ${mealName}`,`Are you sure you want to delete ${mealName}`,\r\n        [\r\n            {\r\n                text:'Yes',\r\n                onPress: () => removeMeal(indexPassed)\r\n            },\r\n            {\r\n                text: \"No\",\r\n            },\r\n        ],\r\n        );\r\n    }\r\n\r\n    const removeMeal = (indexPassed: number) => {\r\n        let newMeals:Meal[] = meals.filter((element,index) => index != indexPassed);\r\n        setMeals(newMeals);\r\n    }\r\n\r\n    return(\r\n        <DataTable>\r\n            <DataTable.Header>\r\n                <DataTable.Title>Meal</DataTable.Title>\r\n                <DataTable.Title numeric>Protein</DataTable.Title>\r\n                <DataTable.Title numeric>Calories</DataTable.Title>\r\n                <DataTable.Title numeric>Remove</DataTable.Title>\r\n            </DataTable.Header>\r\n\r\n            {meals.map((meal, index) => (\r\n                <TouchableOpacity key={index} onPress={() => {\r\n                    setShowUpdateMeal(true);\r\n                    setMeal({\r\n                        name: meal.name,\r\n                        weight: meal.weight,\r\n                        carbs: meal.carbs,\r\n                        fat: meal.fat,\r\n                        protein: meal.protein\r\n                    });\r\n                    setUpdateMealIndex(index);\r\n                }}>\r\n                    <DataTable.Row>\r\n                        <DataTable.Cell>{meal.name}</DataTable.Cell>\r\n                        <DataTable.Cell numeric>{meal.protein * meal.weight/100}</DataTable.Cell>\r\n                        <DataTable.Cell numeric>{countCalories(meal.weight,meal.carbs,meal.fat,meal.protein)}</DataTable.Cell>\r\n                        <DataTable.Cell numeric>\r\n                            <IconButton \r\n                                icon='delete-outline'\r\n                                color='darkviolet'\r\n                                onPress={(e) => {\r\n                                    e.stopPropagation();\r\n                                    removeMealAlert(index,meal.name);\r\n                                }}\r\n                            />\r\n                        </DataTable.Cell>\r\n                    </DataTable.Row>\r\n                </TouchableOpacity>\r\n            ))}\r\n        </DataTable>\r\n    )\r\n}\r\n\r\nexport default MealListItemComponent"]},"metadata":{},"sourceType":"module"}