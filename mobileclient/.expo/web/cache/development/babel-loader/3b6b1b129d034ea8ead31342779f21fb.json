{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar LoginScreen = function LoginScreen() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var signin = function signin() {\n    var response;\n    return _regeneratorRuntime.async(function signin$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(fetch(\"http://192.168.0.242/api/token/\", {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify({\n                username: email,\n                password: password\n              })\n            }));\n\n          case 2:\n            response = _context.sent;\n\n            if (response.status == 200) {\n              console.log(response.json());\n            }\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return _jsxs(View, {\n    style: styles.loginWrapper,\n    children: [_jsxs(Text, {\n      children: [email, \" \", password]\n    }), _jsx(TextInput, {\n      style: styles.input,\n      onChangeText: function onChangeText(input) {\n        return setEmail(input);\n      },\n      value: email,\n      placeholder: \"Email\"\n    }), _jsx(TextInput, {\n      style: styles.input,\n      onChangeText: function onChangeText(number) {\n        return setPassword(number);\n      },\n      value: password,\n      placeholder: \"Password\"\n    }), _jsxs(View, {\n      style: styles.buttons,\n      children: [_jsx(Button, {\n        onPress: function onPress() {\n          return signin();\n        },\n        title: \"Login\",\n        color: \"darkviolet\"\n      }), _jsx(Button, {\n        onPress: function onPress() {\n          return console.log('Bttn pressed');\n        },\n        title: \"Signin\",\n        color: \"darkviolet\"\n      })]\n    })]\n  });\n};\n\nexport default LoginScreen;\nvar styles = StyleSheet.create({\n  loginWrapper: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  input: {\n    height: 40,\n    width: 200,\n    margin: 12,\n    borderBottomWidth: 1,\n    padding: 10\n  },\n  buttons: {\n    width: 170,\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginTop: 20,\n    paddingRight: 10\n  }\n});","map":{"version":3,"sources":["/home/dzony/Documents/Site/calorienotes/mobileclient/screens/loginscreen.tsx"],"names":["React","useState","LoginScreen","email","setEmail","password","setPassword","signin","fetch","method","headers","body","JSON","stringify","username","response","status","console","log","json","styles","loginWrapper","input","number","buttons","StyleSheet","create","flex","justifyContent","alignItems","height","width","margin","borderBottomWidth","padding","display","flexDirection","marginTop","paddingRight"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport { StyleSheet, TextInput, View, SafeAreaView, Text, Button } from 'react-native'\r\n\r\n\r\nconst LoginScreen = () => {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const signin = async () => {\r\n        const response = await fetch(`http://192.168.0.242/api/token/`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                username: email,\r\n                password: password\r\n            })\r\n        });\r\n        if(response.status == 200){\r\n            console.log(response.json());\r\n        }\r\n\r\n    }\r\n\r\n    return(\r\n        <View style={styles.loginWrapper}>\r\n            <Text>{email} {password}</Text>\r\n            <TextInput\r\n                style={styles.input}\r\n                onChangeText={(input) => setEmail(input)}\r\n                value={email}\r\n                placeholder='Email'\r\n            />\r\n            <TextInput\r\n                style={styles.input}\r\n                onChangeText={(number)=> setPassword(number)}\r\n                value={password}\r\n                placeholder=\"Password\"\r\n            />\r\n            <View style={styles.buttons}>\r\n                <Button \r\n                    onPress={() => signin()}\r\n                    title='Login'\r\n                    color='darkviolet'/>\r\n                <Button \r\n                    onPress={() => console.log('Bttn pressed')}\r\n                    title='Signin'\r\n                    color='darkviolet'/>\r\n            </View>\r\n        </View>\r\n    );\r\n};\r\n\r\nexport default LoginScreen\r\n\r\nconst styles = StyleSheet.create({\r\n    loginWrapper: {\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        alignItems: 'center'\r\n    },\r\n    input: {\r\n        height: 40,\r\n        width: 200,\r\n        margin: 12,\r\n        borderBottomWidth: 1,\r\n        padding: 10,\r\n    },\r\n    buttons: {\r\n        width:170,\r\n        display:'flex',\r\n        flexDirection:'row',\r\n        justifyContent:'space-between',\r\n        marginTop:20,\r\n        paddingRight:10,\r\n    }\r\n})"]},"metadata":{},"sourceType":"module"}