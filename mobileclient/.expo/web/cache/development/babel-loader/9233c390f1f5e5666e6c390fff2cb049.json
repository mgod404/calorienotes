{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport SendTokenComponent from \"../components/sendtoken\";\nimport NewPasswordComponent from \"../components/newpassword\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\n\nvar NewPasswordScreen = function NewPasswordScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      tokenSent = _useState2[0],\n      setTokenSent = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      success = _useState4[0],\n      setSuccess = _useState4[1];\n\n  return _jsxs(_Fragment, {\n    children: [!tokenSent && _jsx(SendTokenComponent, {\n      setTokenSent: setTokenSent\n    }), tokenSent && _jsx(NewPasswordComponent, {\n      setTokenSent: setTokenSent,\n      setSuccess: setSuccess\n    }), success && _jsxs(View, {\n      style: styles.loginWrapper,\n      children: [_jsx(Text, {\n        style: {\n          color: 'green',\n          textAlign: 'center'\n        },\n        children: \"Password change was succesful! You can now log in with your new password\"\n      }), _jsx(Button, {\n        onPress: function onPress() {\n          return navigation.navigate('Login');\n        },\n        title: \"Back\",\n        color: \"darkviolet\"\n      })]\n    })]\n  });\n};\n\nexport default NewPasswordScreen;\nvar styles = StyleSheet.create({\n  loginWrapper: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  input: {\n    height: 40,\n    width: '80%',\n    margin: 12,\n    borderBottomWidth: 1,\n    padding: 10\n  },\n  buttons: {\n    width: '80%',\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginTop: 20,\n    paddingRight: 10\n  },\n  errorView: {\n    backgroundColor: 'rgba(255, 57, 57, 0.8)',\n    padding: 5,\n    borderRadius: 5\n  }\n});","map":{"version":3,"names":["React","useState","SendTokenComponent","NewPasswordComponent","NewPasswordScreen","navigation","tokenSent","setTokenSent","success","setSuccess","styles","loginWrapper","color","textAlign","navigate","StyleSheet","create","flex","justifyContent","alignItems","input","height","width","margin","borderBottomWidth","padding","buttons","display","flexDirection","marginTop","paddingRight","errorView","backgroundColor","borderRadius"],"sources":["/home/dzony/Documents/Site/calorienotes/mobileclient/screens/newpasswordscreen.tsx"],"sourcesContent":["import React, { useState } from 'react'\nimport { StyleSheet, TextInput, View, Text, Button, Alert } from 'react-native'\nimport { NativeStackNavigationProp } from '@react-navigation/native-stack'\n\nimport SendTokenComponent from '../components/sendtoken'\nimport NewPasswordComponent from '../components/newpassword'\n\nimport { BACKEND_URL } from '../CONFIG'\n\ntype RootStackParamList = {\n    Login: undefined\n};\n\ninterface NavigateProps {\n    navigation: NativeStackNavigationProp<RootStackParamList>;\n}\n\nconst NewPasswordScreen = ({ navigation }: NavigateProps) => {\n    const [tokenSent, setTokenSent] = useState(false);\n    const [success, setSuccess] = useState(false);\n\n    return(\n        <>\n        {!tokenSent && <SendTokenComponent setTokenSent={setTokenSent}/>}\n        {tokenSent && <NewPasswordComponent \n                            setTokenSent={setTokenSent}\n                            setSuccess={setSuccess}\n                            />}\n        {success && \n            <View style={styles.loginWrapper}>\n                <Text style={{color:'green', textAlign:'center'}}>\n                    Password change was succesful!\n                    You can now log in with your new password\n                </Text>\n                <Button \n                    onPress={() => navigation.navigate('Login')}\n                    title='Back'\n                    color='darkviolet'\n                />\n            </View>}\n        </>\n    );\n};\n\nexport default NewPasswordScreen\n\nconst styles = StyleSheet.create({\n    loginWrapper: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    input: {\n        height: 40,\n        width: '80%',\n        margin: 12,\n        borderBottomWidth: 1,\n        padding: 10,\n    },\n    buttons: {\n        width:'80%',\n        display:'flex',\n        flexDirection:'row',\n        justifyContent:'space-between',\n        marginTop:20,\n        paddingRight:10,\n    },\n    errorView: {\n        backgroundColor:'rgba(255, 57, 57, 0.8)', \n        padding:5, \n        borderRadius:5\n    }\n})"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;AAIA,OAAOC,kBAAP;AACA,OAAOC,oBAAP;;;;;AAYA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,OAAmC;EAAA,IAAhCC,UAAgC,QAAhCA,UAAgC;;EACzD,gBAAkCJ,QAAQ,CAAC,KAAD,CAA1C;EAAA;EAAA,IAAOK,SAAP;EAAA,IAAkBC,YAAlB;;EACA,iBAA8BN,QAAQ,CAAC,KAAD,CAAtC;EAAA;EAAA,IAAOO,OAAP;EAAA,IAAgBC,UAAhB;;EAEA,OACI;IAAA,WACC,CAACH,SAAD,IAAc,KAAC,kBAAD;MAAoB,YAAY,EAAEC;IAAlC,EADf,EAECD,SAAS,IAAI,KAAC,oBAAD;MACM,YAAY,EAAEC,YADpB;MAEM,UAAU,EAAEE;IAFlB,EAFd,EAMCD,OAAO,IACJ,MAAC,IAAD;MAAM,KAAK,EAAEE,MAAM,CAACC,YAApB;MAAA,WACI,KAAC,IAAD;QAAM,KAAK,EAAE;UAACC,KAAK,EAAC,OAAP;UAAgBC,SAAS,EAAC;QAA1B,CAAb;QAAA;MAAA,EADJ,EAKI,KAAC,MAAD;QACI,OAAO,EAAE;UAAA,OAAMR,UAAU,CAACS,QAAX,CAAoB,OAApB,CAAN;QAAA,CADb;QAEI,KAAK,EAAC,MAFV;QAGI,KAAK,EAAC;MAHV,EALJ;IAAA,EAPJ;EAAA,EADJ;AAqBH,CAzBD;;AA2BA,eAAeV,iBAAf;AAEA,IAAMM,MAAM,GAAGK,UAAU,CAACC,MAAX,CAAkB;EAC7BL,YAAY,EAAE;IACVM,IAAI,EAAE,CADI;IAEVC,cAAc,EAAE,QAFN;IAGVC,UAAU,EAAE;EAHF,CADe;EAM7BC,KAAK,EAAE;IACHC,MAAM,EAAE,EADL;IAEHC,KAAK,EAAE,KAFJ;IAGHC,MAAM,EAAE,EAHL;IAIHC,iBAAiB,EAAE,CAJhB;IAKHC,OAAO,EAAE;EALN,CANsB;EAa7BC,OAAO,EAAE;IACLJ,KAAK,EAAC,KADD;IAELK,OAAO,EAAC,MAFH;IAGLC,aAAa,EAAC,KAHT;IAILV,cAAc,EAAC,eAJV;IAKLW,SAAS,EAAC,EALL;IAMLC,YAAY,EAAC;EANR,CAboB;EAqB7BC,SAAS,EAAE;IACPC,eAAe,EAAC,wBADT;IAEPP,OAAO,EAAC,CAFD;IAGPQ,YAAY,EAAC;EAHN;AArBkB,CAAlB,CAAf"},"metadata":{},"sourceType":"module"}