{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { IconButton } from 'react-native-paper';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar AddNoteComponent = function AddNoteComponent(_ref) {\n  var note = _ref.note,\n      setNote = _ref.setNote,\n      setShowAddNote = _ref.setShowAddNote,\n      updateDiary = _ref.updateDiary;\n\n  var _useState = useState(note),\n      _useState2 = _slicedToArray(_useState, 2),\n      editedNote = _useState2[0],\n      setEditedNote = _useState2[1];\n\n  return _jsx(Modal, {\n    transparent: true,\n    visible: true,\n    children: _jsx(View, {\n      style: styles.container,\n      children: _jsxs(View, {\n        style: styles.card,\n        children: [_jsx(View, {\n          style: styles.input,\n          children: _jsx(TextInput, {\n            multiline: true,\n            placeholder: \"Write your note for today here.\",\n            value: editedNote,\n            onChangeText: setEditedNote\n          })\n        }), _jsxs(View, {\n          style: styles.buttons,\n          children: [_jsx(IconButton, {\n            icon: \"check\",\n            color: \"darkviolet\",\n            onPress: function onPress() {\n              console.log(\"note updated and passed to update \" + editedNote);\n              updateDiary(undefined, editedNote);\n              setShowAddNote(false);\n            }\n          }), _jsx(IconButton, {\n            icon: \"close\",\n            color: \"darkviolet\",\n            onPress: function onPress() {\n              setShowAddNote(false);\n            }\n          })]\n        })]\n      })\n    })\n  });\n};\n\nexport default AddNoteComponent;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'rgba(0,0,0,0.5)'\n  },\n  card: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'white',\n    padding: 20,\n    borderRadius: 5\n  },\n  input: {\n    borderBottomColor: 'darkviolet',\n    borderBottomWidth: 1\n  },\n  buttons: {\n    alignSelf: 'stretch',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginTop: 10\n  }\n});","map":{"version":3,"sources":["/home/dzony/Documents/Site/calorienotes/mobileclient/components/addnote.tsx"],"names":["React","useState","IconButton","AddNoteComponent","note","setNote","setShowAddNote","updateDiary","editedNote","setEditedNote","styles","container","card","input","buttons","console","log","undefined","StyleSheet","create","flex","justifyContent","alignItems","backgroundColor","display","padding","borderRadius","borderBottomColor","borderBottomWidth","alignSelf","flexDirection","marginTop"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;AAEA,SAASC,UAAT,QAA2B,oBAA3B;;;;AAYA,IAAMC,gBAAiC,GAAG,SAApCA,gBAAoC,OAMhC;AAAA,MAJFC,IAIE,QAJFA,IAIE;AAAA,MAHFC,OAGE,QAHFA,OAGE;AAAA,MAFFC,cAEE,QAFFA,cAEE;AAAA,MADFC,WACE,QADFA,WACE;;AACN,kBAAoCN,QAAQ,CAACG,IAAD,CAA5C;AAAA;AAAA,MAAOI,UAAP;AAAA,MAAmBC,aAAnB;;AAEA,SACI,KAAC,KAAD;AAAO,IAAA,WAAW,MAAlB;AAAmB,IAAA,OAAO,EAAE,IAA5B;AAAA,cACI,KAAC,IAAD;AAAM,MAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA,gBACI,MAAC,IAAD;AAAM,QAAA,KAAK,EAAED,MAAM,CAACE,IAApB;AAAA,mBACI,KAAC,IAAD;AAAM,UAAA,KAAK,EAAEF,MAAM,CAACG,KAApB;AAAA,oBACI,KAAC,SAAD;AACI,YAAA,SAAS,MADb;AAEI,YAAA,WAAW,EAAC,iCAFhB;AAGI,YAAA,KAAK,EAAEL,UAHX;AAII,YAAA,YAAY,EAAEC;AAJlB;AADJ,UADJ,EASI,MAAC,IAAD;AAAM,UAAA,KAAK,EAAEC,MAAM,CAACI,OAApB;AAAA,qBACI,KAAC,UAAD;AACI,YAAA,IAAI,EAAC,OADT;AAEI,YAAA,KAAK,EAAC,YAFV;AAGI,YAAA,OAAO,EAAE,mBAAM;AACXC,cAAAA,OAAO,CAACC,GAAR,wCAAiDR,UAAjD;AACAD,cAAAA,WAAW,CAACU,SAAD,EAAWT,UAAX,CAAX;AACAF,cAAAA,cAAc,CAAC,KAAD,CAAd;AACH;AAPL,YADJ,EAUI,KAAC,UAAD;AACI,YAAA,IAAI,EAAC,OADT;AAEI,YAAA,KAAK,EAAC,YAFV;AAGI,YAAA,OAAO,EAAE,mBAAM;AACXA,cAAAA,cAAc,CAAC,KAAD,CAAd;AACH;AALL,YAVJ;AAAA,UATJ;AAAA;AADJ;AADJ,IADJ;AAkCH,CA3CD;;AA4CA,eAAeH,gBAAf;AAEA,IAAMO,MAAM,GAAGQ,UAAU,CAACC,MAAX,CAAkB;AAC7BR,EAAAA,SAAS,EAAE;AACPS,IAAAA,IAAI,EAAC,CADE;AAEPC,IAAAA,cAAc,EAAE,QAFT;AAGPC,IAAAA,UAAU,EAAE,QAHL;AAIPC,IAAAA,eAAe,EAAE;AAJV,GADkB;AAO7BX,EAAAA,IAAI,EAAE;AACFY,IAAAA,OAAO,EAAC,MADN;AAEFH,IAAAA,cAAc,EAAC,QAFb;AAGFC,IAAAA,UAAU,EAAE,QAHV;AAIFC,IAAAA,eAAe,EAAE,OAJf;AAKFE,IAAAA,OAAO,EAAE,EALP;AAMFC,IAAAA,YAAY,EAAE;AANZ,GAPuB;AAe7Bb,EAAAA,KAAK,EAAE;AACHc,IAAAA,iBAAiB,EAAE,YADhB;AAEHC,IAAAA,iBAAiB,EAAE;AAFhB,GAfsB;AAmB7Bd,EAAAA,OAAO,EAAE;AACLe,IAAAA,SAAS,EAAC,SADL;AAELC,IAAAA,aAAa,EAAC,KAFT;AAGLT,IAAAA,cAAc,EAAC,eAHV;AAILU,IAAAA,SAAS,EAAE;AAJN;AAnBoB,CAAlB,CAAf","sourcesContent":["import React, { useState } from 'react'\nimport { View, StyleSheet, Modal, TextInput } from 'react-native'\nimport { IconButton } from 'react-native-paper';\n\nimport { Meal } from '../screens/homescreen';\n\n\nexport interface Props {\n    note: string,\n    setNote: React.Dispatch<React.SetStateAction<string>>,\n    setShowAddNote: React.Dispatch<React.SetStateAction<boolean>>,\n    updateDiary: (passedMeals?: Meal[], passedNote?: string) => void,\n}\n\nconst AddNoteComponent: React.FC<Props> = (\n    {\n        note, \n        setNote, \n        setShowAddNote,\n        updateDiary\n    }) => {\n    const [editedNote, setEditedNote] = useState(note);\n\n    return (\n        <Modal transparent visible={true}>\n            <View style={styles.container}>\n                <View style={styles.card}>\n                    <View style={styles.input}>\n                        <TextInput \n                            multiline\n                            placeholder=\"Write your note for today here.\"\n                            value={editedNote}\n                            onChangeText={setEditedNote}\n                        />\n                    </View>\n                    <View style={styles.buttons}>\n                        <IconButton \n                            icon='check'\n                            color='darkviolet'\n                            onPress={() => {\n                                console.log(`note updated and passed to update ${editedNote}`);\n                                updateDiary(undefined,editedNote);\n                                setShowAddNote(false);\n                            }}\n                        />\n                        <IconButton \n                            icon='close'\n                            color='darkviolet'\n                            onPress={() => {\n                                setShowAddNote(false);\n                            }}\n                        />\n                    </View>\n                </View>\n            </View>\n        </Modal>\n    );\n}\nexport default AddNoteComponent;\n\nconst styles = StyleSheet.create({\n    container: {\n        flex:1,\n        justifyContent: 'center',\n        alignItems: 'center',\n        backgroundColor: 'rgba(0,0,0,0.5)',\n    },\n    card: {\n        display:'flex',\n        justifyContent:'center',\n        alignItems: 'center',\n        backgroundColor: 'white',\n        padding: 20,\n        borderRadius: 5,\n    },\n    input: {\n        borderBottomColor: 'darkviolet',\n        borderBottomWidth: 1,\n    },\n    buttons: {\n        alignSelf:'stretch', \n        flexDirection:'row', \n        justifyContent:'space-between',\n        marginTop: 10\n    }\n})"]},"metadata":{},"sourceType":"module"}