{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect, useContext } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { IconButton, Text } from 'react-native-paper';\nimport * as SecureStore from 'expo-secure-store';\nimport { JwtTokenContext } from \"../contexts/jwttoken\";\nimport DatePickerComponent from \"../components/datepicker\";\nimport MealListItemComponent from \"../components/meallistitem\";\nimport BottomBarComponent from \"../components/bottombar\";\nimport AddMealComponent from \"../components/addmeal\";\nimport UpdateMealComponent from \"../components/updatemeal\";\nimport AddNoteComponent from \"../components/addnote\";\nimport SettingsComponent from \"../components/settings\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar HomeScreen = function HomeScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      showAddMeal = _useState2[0],\n      setShowAddMeal = _useState2[1];\n\n  var _React$useState = React.useState({\n    name: '',\n    weight: 0,\n    carbs: 0,\n    fat: 0,\n    protein: 0\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      meal = _React$useState2[0],\n      setMeal = _React$useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      showUpdateMeal = _useState4[0],\n      setShowUpdateMeal = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      updateMealIndex = _useState6[0],\n      setUpdateMealIndex = _useState6[1];\n\n  var _useState7 = useState(new Date()),\n      _useState8 = _slicedToArray(_useState7, 2),\n      date = _useState8[0],\n      setDate = _useState8[1];\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      meals = _useState10[0],\n      setMeals = _useState10[1];\n\n  var _useState11 = useState(''),\n      _useState12 = _slicedToArray(_useState11, 2),\n      note = _useState12[0],\n      setNote = _useState12[1];\n\n  var _useState13 = useState(false),\n      _useState14 = _slicedToArray(_useState13, 2),\n      showAddNote = _useState14[0],\n      setShowAddNote = _useState14[1];\n\n  var _useState15 = useState(false),\n      _useState16 = _slicedToArray(_useState15, 2),\n      showSettings = _useState16[0],\n      setShowSettings = _useState16[1];\n\n  var _useState17 = useState(2000),\n      _useState18 = _slicedToArray(_useState17, 2),\n      targetCalories = _useState18[0],\n      setTargetCalories = _useState18[1];\n\n  var _useState19 = useState(100),\n      _useState20 = _slicedToArray(_useState19, 2),\n      targetProtein = _useState20[0],\n      setTargetProtein = _useState20[1];\n\n  var createDiary = function createDiary() {\n    var _date$toISOString$spl = date.toISOString().split('T'),\n        _date$toISOString$spl2 = _slicedToArray(_date$toISOString$spl, 1),\n        stringifyDate = _date$toISOString$spl2[0];\n\n    var bodyPost = {\n      date: stringifyDate,\n      meals: meals,\n      additional_note: note\n    };\n    fetch(\"http://192.168.0.242:8000/api/notes/create/\", {\n      method: 'POST',\n      headers: {\n        'Authorization': \"Bearer \" + (jwt == null ? void 0 : jwt.jwtAccessToken),\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(bodyPost)\n    }).then(function (res) {\n      return res.json();\n    }).catch(function (e) {\n      return console.log(e);\n    });\n  };\n\n  var getDiary = function getDiary() {\n    var response, data;\n    return _regeneratorRuntime.async(function getDiary$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(fetch(\"http://192.168.0.242:8000/api/notes/\" + date.getFullYear() + \"/\" + (date.getMonth() + 1) + \"/\" + date.getDate(), {\n              method: 'GET',\n              headers: {\n                'Authorization': \"Bearer \" + (jwt == null ? void 0 : jwt.jwtAccessToken)\n              }\n            }));\n\n          case 3:\n            response = _context.sent;\n\n            if (!(response.status == 404)) {\n              _context.next = 6;\n              break;\n            }\n\n            return _context.abrupt(\"return\");\n\n          case 6:\n            if (!(response.status == 200)) {\n              _context.next = 13;\n              break;\n            }\n\n            console.log('Meals found, no need to create');\n            _context.next = 10;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 10:\n            data = _context.sent;\n            setMeals(data.meals);\n            setNote(data.additional_note);\n\n          case 13:\n            _context.next = 18;\n            break;\n\n          case 15:\n            _context.prev = 15;\n            _context.t0 = _context[\"catch\"](0);\n            console.error(_context.t0);\n\n          case 18:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 15]], Promise);\n  };\n\n  var update = function update(inputMeals, inputNote) {\n    var _date$toISOString$spl3, _date$toISOString$spl4, stringifyDate, bodyPost, response;\n\n    return _regeneratorRuntime.async(function update$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _date$toISOString$spl3 = date.toISOString().split('T'), _date$toISOString$spl4 = _slicedToArray(_date$toISOString$spl3, 1), stringifyDate = _date$toISOString$spl4[0];\n            bodyPost = {\n              date: stringifyDate,\n              meals: inputMeals,\n              additional_note: inputNote\n            };\n            console.log(bodyPost);\n            _context2.prev = 3;\n            _context2.next = 6;\n            return _regeneratorRuntime.awrap(fetch(\"http://192.168.0.242:8000/api/notes/\" + date.getFullYear() + \"/\" + (date.getMonth() + 1) + \"/\" + date.getDate() + \"/\", {\n              method: 'PUT',\n              headers: {\n                'Authorization': \"Bearer \" + (jwt == null ? void 0 : jwt.jwtAccessToken),\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify(bodyPost)\n            }));\n\n          case 6:\n            response = _context2.sent;\n\n            if (response.status == 201) {\n              console.log('Everything went smoothly, it was updated');\n            }\n\n            ;\n\n            if (response.status == 404) {\n              console.log('meals not found. Creating them');\n              createDiary();\n            }\n\n            console.log(response.status);\n            _context2.next = 16;\n            break;\n\n          case 13:\n            _context2.prev = 13;\n            _context2.t0 = _context2[\"catch\"](3);\n            console.error(_context2.t0);\n\n          case 16:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[3, 13]], Promise);\n  };\n\n  useEffect(function () {\n    setMeals([]);\n    setNote('');\n    getDiary();\n  }, [date]);\n  var jwt = useContext(JwtTokenContext);\n\n  var logout = function logout() {\n    jwt == null ? void 0 : jwt.setJwtRefreshToken('');\n    SecureStore.deleteItemAsync('jwt_refresh_token');\n    navigation.navigate('Login');\n  };\n\n  var updateDiary = function updateDiary() {\n    var passedMeals = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : meals;\n    var passedNote = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : note;\n    setNote(passedNote);\n    setMeals(passedMeals);\n    update(passedMeals, passedNote);\n  };\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(DatePickerComponent, {\n      date: date,\n      setDate: setDate\n    }), _jsx(MealListItemComponent, {\n      meals: meals,\n      setMeals: setMeals,\n      setMeal: setMeal,\n      setShowUpdateMeal: setShowUpdateMeal,\n      setUpdateMealIndex: setUpdateMealIndex,\n      updateDiary: updateDiary\n    }), _jsxs(TouchableOpacity, {\n      onPress: function onPress() {\n        return setShowAddNote(true);\n      },\n      children: [_jsx(Text, {\n        style: styles.noteTitle,\n        children: note ? 'Note' : ''\n      }), _jsx(Text, {\n        style: {\n          marginHorizontal: 18\n        },\n        children: note\n      })]\n    }), _jsxs(View, {\n      style: styles.bottom,\n      children: [_jsxs(View, {\n        style: styles.buttons,\n        children: [_jsx(IconButton, {\n          onPress: function onPress() {\n            return setShowAddMeal(true);\n          },\n          icon: \"plus-circle\",\n          color: 'darkviolet',\n          size: 60\n        }), _jsx(IconButton, {\n          icon: \"note-plus\",\n          color: 'darkviolet',\n          size: 60,\n          onPress: function onPress() {\n            return setShowAddNote(true);\n          }\n        })]\n      }), showAddMeal && _jsx(AddMealComponent, {\n        meal: meal,\n        setMeal: setMeal,\n        meals: meals,\n        setMeals: setMeals,\n        setShowAddMeal: setShowAddMeal,\n        updateDiary: updateDiary\n      }), showUpdateMeal && _jsx(UpdateMealComponent, {\n        setMeals: setMeals,\n        meals: meals,\n        setShowUpdateMeal: setShowUpdateMeal,\n        updateMealIndex: updateMealIndex,\n        meal: meal,\n        setMeal: setMeal,\n        updateDiary: updateDiary\n      }), showAddNote && _jsx(AddNoteComponent, {\n        note: note,\n        setNote: setNote,\n        setShowAddNote: setShowAddNote,\n        updateDiary: updateDiary\n      }), showSettings && _jsx(SettingsComponent, {\n        setShowSettings: setShowSettings,\n        setTargetCalories: setTargetCalories,\n        setTargetProtein: setTargetProtein,\n        targetCalories: targetCalories,\n        targetProtein: targetProtein,\n        logout: logout\n      }), _jsx(BottomBarComponent, {\n        meals: meals,\n        setShowSettings: setShowSettings,\n        targetCalories: targetCalories,\n        targetProtein: targetProtein\n      })]\n    })]\n  });\n};\n\nexport default HomeScreen;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  bottom: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    bottom: 0\n  },\n  buttons: {\n    display: 'flex',\n    flexDirection: 'row-reverse'\n  },\n  noteTitle: {\n    color: 'darkviolet',\n    fontWeight: 'bold',\n    textAlign: 'center'\n  }\n});","map":{"version":3,"sources":["/home/dzony/Documents/Site/calorienotes/mobileclient/screens/homescreen.tsx"],"names":["React","useState","useEffect","useContext","IconButton","Text","SecureStore","JwtTokenContext","DatePickerComponent","MealListItemComponent","BottomBarComponent","AddMealComponent","UpdateMealComponent","AddNoteComponent","SettingsComponent","HomeScreen","navigation","showAddMeal","setShowAddMeal","name","weight","carbs","fat","protein","meal","setMeal","showUpdateMeal","setShowUpdateMeal","updateMealIndex","setUpdateMealIndex","Date","date","setDate","meals","setMeals","note","setNote","showAddNote","setShowAddNote","showSettings","setShowSettings","targetCalories","setTargetCalories","targetProtein","setTargetProtein","createDiary","toISOString","split","stringifyDate","bodyPost","additional_note","fetch","method","headers","jwt","jwtAccessToken","body","JSON","stringify","then","res","json","catch","e","console","log","getDiary","getFullYear","getMonth","getDate","response","status","data","error","update","inputMeals","inputNote","logout","setJwtRefreshToken","deleteItemAsync","navigate","updateDiary","passedMeals","passedNote","styles","container","noteTitle","marginHorizontal","bottom","buttons","StyleSheet","create","flex","position","left","right","display","flexDirection","color","fontWeight","textAlign"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from 'react'\r\nimport { View, StyleSheet, TouchableOpacity } from 'react-native'\r\nimport { NativeStackNavigationProp } from '@react-navigation/native-stack'\r\nimport { IconButton, Text } from 'react-native-paper';\r\nimport * as SecureStore from 'expo-secure-store'\r\n\r\nimport { JwtTokenContext } from '../contexts/jwttoken';\r\n\r\nimport DatePickerComponent from '../components/datepicker'\r\nimport MealListItemComponent from '../components/meallistitem'\r\nimport BottomBarComponent  from '../components/bottombar'\r\nimport AddMealComponent from '../components/addmeal';\r\nimport UpdateMealComponent from '../components/updatemeal';\r\nimport AddNoteComponent from '../components/addnote';\r\nimport SettingsComponent from '../components/settings';\r\n\r\ntype RootStackParamList = {\r\n    Login: undefined\r\n};\r\n\r\ninterface NavigateProps {\r\n    navigation: NativeStackNavigationProp<RootStackParamList>;\r\n}\r\n\r\nexport interface Meal {\r\n    name: string,\r\n    weight: number,\r\n    carbs: number,\r\n    fat: number,\r\n    protein: number\r\n}\r\ninterface TargetMacros {\r\n    target_calories?: number,\r\n    target_protein?: number,\r\n    target_fat?: number,\r\n    target_carbs?: number \r\n}\r\n\r\ninterface NoteFetchData {\r\n    date: string,\r\n    meals: Meal[],\r\n    additional_note: string\r\n}\r\n\r\ninterface DiaryFetchData {\r\n    date: string,\r\n    meals?: Meal[],\r\n    additional_note?: string,\r\n    target_macros: TargetMacros\r\n}\r\n\r\nconst HomeScreen = ({ navigation }: NavigateProps) => {\r\n    const [showAddMeal, setShowAddMeal] = useState(false);\r\n    const [meal, setMeal] = React.useState<Meal>({\r\n        name: '',\r\n        weight: 0,\r\n        carbs: 0,\r\n        fat: 0,\r\n        protein: 0,\r\n    });\r\n    const [showUpdateMeal, setShowUpdateMeal] = useState(false);\r\n    const [updateMealIndex, setUpdateMealIndex] = useState<number>();\r\n\r\n    const [date, setDate] = useState<Date>(new Date());\r\n\r\n    const [meals, setMeals] = useState<Array<Meal>>([]);\r\n    const [note, setNote] = useState('');\r\n    const [showAddNote, setShowAddNote] = useState(false);\r\n\r\n    const [showSettings, setShowSettings] = useState(false);\r\n\r\n    const [targetCalories, setTargetCalories] = useState(2000);\r\n    const [targetProtein, setTargetProtein] = useState(100);\r\n\r\n\r\n    const createDiary = () => {\r\n        const [stringifyDate] = date.toISOString().split('T');\r\n        const bodyPost:NoteFetchData = {\r\n            date: stringifyDate,\r\n            meals: meals,\r\n            additional_note: note,\r\n        };\r\n        fetch(`http://192.168.0.242:8000/api/notes/create/`,{\r\n            method: 'POST',\r\n            headers: {\r\n                'Authorization': `Bearer ${jwt?.jwtAccessToken}`,\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(bodyPost),\r\n        })\r\n            .then(res => res.json())\r\n            .catch(e => console.log(e));\r\n    };\r\n    const getDiary = async () => {\r\n        try {\r\n            const response = await fetch(`http://192.168.0.242:8000/api/notes/${date.getFullYear()}/${date.getMonth() + 1}/${date.getDate()}`,{\r\n                method: 'GET',\r\n                headers: {\r\n                    'Authorization': `Bearer ${jwt?.jwtAccessToken}`,\r\n                },\r\n            });\r\n            if(response.status == 404){\r\n                return\r\n            }\r\n            if(response.status == 200){\r\n                console.log('Meals found, no need to create')\r\n                const data:NoteFetchData = await response.json();\r\n                setMeals(data.meals);\r\n                setNote(data.additional_note);\r\n            }\r\n        }\r\n        catch (e){\r\n            console.error(e);\r\n        }\r\n    }\r\n    const update = async (inputMeals: Meal[], inputNote:string) => {\r\n        const [stringifyDate] = date.toISOString().split('T');\r\n        const bodyPost:NoteFetchData = {\r\n            date: stringifyDate,\r\n            meals: inputMeals,\r\n            additional_note: inputNote,\r\n        };\r\n        console.log(bodyPost);\r\n        try{\r\n            const response = await fetch(`http://192.168.0.242:8000/api/notes/${date.getFullYear()}/${date.getMonth() + 1}/${date.getDate()}/`, {\r\n                method: 'PUT',\r\n                headers: {\r\n                    'Authorization': `Bearer ${jwt?.jwtAccessToken}`,\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(bodyPost)\r\n            });\r\n            if(response.status == 201){\r\n                console.log('Everything went smoothly, it was updated');\r\n            };\r\n            if(response.status == 404){\r\n                console.log('meals not found. Creating them');\r\n                createDiary();\r\n            }\r\n            console.log(response.status)\r\n        }\r\n        catch (e){\r\n            console.error(e);\r\n        }\r\n    }\r\n\r\n    //When date changes, the content of app changes(meals, note)\r\n    useEffect(() => {\r\n        setMeals([]);\r\n        setNote('');\r\n        getDiary();\r\n    },[date]);\r\n\r\n    const jwt = useContext(JwtTokenContext);\r\n    const logout = () => {\r\n        jwt?.setJwtRefreshToken('');\r\n        SecureStore.deleteItemAsync('jwt_refresh_token');\r\n        navigation.navigate('Login');\r\n    }\r\n\r\n    const updateDiary = (passedMeals = meals, passedNote = note) => {\r\n        setNote(passedNote);\r\n        setMeals(passedMeals);\r\n        update(passedMeals, passedNote);\r\n    }\r\n\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <DatePickerComponent \r\n                date={date} \r\n                setDate={setDate}\r\n            />\r\n            <MealListItemComponent \r\n                meals={meals}\r\n                setMeals={setMeals} \r\n                setMeal={setMeal}\r\n                setShowUpdateMeal={setShowUpdateMeal}\r\n                setUpdateMealIndex={setUpdateMealIndex}\r\n                updateDiary={updateDiary}\r\n            />\r\n            <TouchableOpacity onPress={() => setShowAddNote(true)}>\r\n                <Text style={styles.noteTitle}>{note? 'Note' : ''}</Text>\r\n                <Text style={{marginHorizontal:18}}>{note}</Text>\r\n            </TouchableOpacity>\r\n            <View style={styles.bottom}>\r\n                <View style={styles.buttons}>\r\n                    <IconButton \r\n                        onPress={() => setShowAddMeal(true)}\r\n                        icon=\"plus-circle\"\r\n                        color={'darkviolet'}\r\n                        size={60}\r\n                        />\r\n                    <IconButton \r\n                        icon=\"note-plus\"\r\n                        color={'darkviolet'}\r\n                        size={60}\r\n                        onPress={() => setShowAddNote(true)}\r\n                        />\r\n                </View>\r\n                { showAddMeal && \r\n                    <AddMealComponent \r\n                        meal={meal}\r\n                        setMeal={setMeal}\r\n                        meals={meals}\r\n                        setMeals={setMeals} \r\n                        setShowAddMeal={setShowAddMeal}\r\n                        updateDiary={updateDiary}\r\n                    /> }\r\n                { showUpdateMeal && \r\n                    <UpdateMealComponent \r\n                        setMeals={setMeals}\r\n                        meals={meals}\r\n                        setShowUpdateMeal={setShowUpdateMeal}\r\n                        updateMealIndex={updateMealIndex}\r\n                        meal={meal}\r\n                        setMeal={setMeal}\r\n                        updateDiary={updateDiary}\r\n                    /> }\r\n                { showAddNote && \r\n                    <AddNoteComponent \r\n                        note={note}\r\n                        setNote={setNote}\r\n                        setShowAddNote={setShowAddNote}\r\n                        updateDiary={updateDiary}\r\n                    />\r\n                }\r\n                { showSettings &&\r\n                    <SettingsComponent \r\n                        setShowSettings={setShowSettings}\r\n                        setTargetCalories={setTargetCalories}\r\n                        setTargetProtein={setTargetProtein}\r\n                        targetCalories={targetCalories}\r\n                        targetProtein={targetProtein}\r\n                        logout={logout}\r\n                    />\r\n                }\r\n                    <BottomBarComponent \r\n                        meals={meals}\r\n                        setShowSettings={setShowSettings}\r\n                        targetCalories={targetCalories}\r\n                        targetProtein={targetProtein}\r\n                    />\r\n            </View>\r\n        </View>\r\n    );\r\n}\r\n\r\nexport default HomeScreen\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n    },\r\n    bottom: {\r\n        position: 'absolute',\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n    },\r\n    buttons: {\r\n        display: 'flex',\r\n        flexDirection: 'row-reverse',\r\n    },\r\n    noteTitle: {\r\n        color:'darkviolet', \r\n        fontWeight:'bold', \r\n        textAlign:'center'\r\n    }\r\n});"]},"metadata":{},"sourceType":"module"}