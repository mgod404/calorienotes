{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport { Button, IconButton } from 'react-native-paper';\nimport DateTimePicker from '@react-native-community/datetimepicker';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar DatePickerComponent = function DatePickerComponent(props) {\n  var _useState = useState('date'),\n      _useState2 = _slicedToArray(_useState, 2),\n      mode = _useState2[0],\n      setMode = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      show = _useState4[0],\n      setShow = _useState4[1];\n\n  var onChange = function onChange(event, selectedDate) {\n    var currentDate = selectedDate;\n\n    if (currentDate) {\n      props.setDate(currentDate);\n    }\n\n    ;\n    setShow(false);\n  };\n\n  var showMode = function showMode(currentMode) {\n    setShow(true);\n    setMode(currentMode);\n  };\n\n  var showDatepicker = function showDatepicker() {\n    showMode('date');\n  };\n\n  var changeDay = function changeDay(date, days) {\n    var newDate = new Date(date);\n    newDate.setDate(date.getDate() + days);\n    return newDate;\n  };\n\n  return _jsxs(SafeAreaView, {\n    style: styles.AndroidSafeArea,\n    children: [_jsx(IconButton, {\n      icon: \"chevron-left\",\n      style: styles.sideButton,\n      size: 40,\n      color: 'white',\n      onPress: function onPress() {\n        return props.setDate(changeDay(props.date, -1));\n      }\n    }), _jsx(Button, {\n      style: styles.middleButton,\n      mode: \"text\",\n      onPress: showDatepicker,\n      children: _jsx(Text, {\n        style: {\n          fontSize: 20\n        },\n        children: props.date.toDateString()\n      })\n    }), _jsx(IconButton, {\n      icon: \"chevron-right\",\n      style: styles.sideButton,\n      size: 40,\n      color: 'white',\n      onPress: function onPress() {\n        return props.setDate(changeDay(props.date, +1));\n      }\n    }), show && _jsx(DateTimePicker, {\n      testID: \"dateTimePicker\",\n      value: props.date,\n      mode: 'date',\n      is24Hour: true,\n      onChange: onChange,\n      textColor: 'darkviolet',\n      style: {\n        height: 150\n      }\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  middleButton: {\n    flex: 0.6,\n    display: 'flex',\n    justifyContent: 'center',\n    color: '#d5d8dc'\n  },\n  sideButton: {\n    flex: 0.2,\n    display: 'flex',\n    justifyContent: 'center',\n    alignSelf: 'center',\n    color: 'white'\n  },\n  buttonText: {\n    display: 'flex',\n    justifyContent: 'center',\n    fontSize: 50\n  },\n  AndroidSafeArea: {\n    paddingTop: Platform.OS === \"android\" ? StatusBar.currentHeight : 0,\n    flexDirection: 'row',\n    justifyContent: 'center',\n    backgroundColor: 'darkviolet',\n    height: 130\n  }\n});\nexport default DatePickerComponent;","map":{"version":3,"names":["React","useState","Button","IconButton","DateTimePicker","DatePickerComponent","props","mode","setMode","show","setShow","onChange","event","selectedDate","currentDate","setDate","showMode","currentMode","showDatepicker","changeDay","date","days","newDate","Date","getDate","styles","AndroidSafeArea","sideButton","middleButton","fontSize","toDateString","height","StyleSheet","create","flex","display","justifyContent","color","alignSelf","buttonText","paddingTop","Platform","OS","StatusBar","currentHeight","flexDirection","backgroundColor"],"sources":["/home/dzony/Documents/Site/calorienotes/mobileclient/components/datepicker.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { View, Text, StyleSheet, SafeAreaView, Platform, StatusBar  } from 'react-native'\r\nimport { Button, IconButton } from 'react-native-paper'\r\nimport DateTimePicker from '@react-native-community/datetimepicker'\r\n\r\ninterface Props {\r\n    date: Date,\r\n    setDate: React.Dispatch<React.SetStateAction<Date>>, \r\n}\r\n\r\nconst DatePickerComponent: React.FC<Props> = (props) => {\r\n    const [mode, setMode] = useState('date');\r\n    const [show, setShow] = useState(false);\r\n\r\n    const onChange = (event:any, selectedDate:Date | undefined) => {\r\n    const currentDate = selectedDate;\r\n    if(currentDate){\r\n        props.setDate(currentDate);\r\n    };\r\n    setShow(false);\r\n    };\r\n\r\n    const showMode = (currentMode:string) => {\r\n        setShow(true);\r\n        setMode(currentMode);\r\n    };\r\n\r\n    const showDatepicker = () => {\r\n        showMode('date');\r\n    };\r\n\r\n    const changeDay = (date: Date, days: number): Date => {\r\n        let newDate: Date = new Date(date);\r\n        newDate.setDate(date.getDate() + days);\r\n        return newDate;\r\n    };\r\n\r\nreturn (\r\n    <SafeAreaView style={styles.AndroidSafeArea}>\r\n\r\n        <IconButton \r\n            icon='chevron-left'\r\n            style={styles.sideButton}\r\n            size={40}\r\n            color={'white'}\r\n            onPress={() => props.setDate(changeDay(props.date, -1))}\r\n            />\r\n        <Button \r\n            style={styles.middleButton}\r\n            mode='text' \r\n            onPress={showDatepicker}\r\n            >\r\n            <Text style={{fontSize:20}}>{props.date.toDateString()}</Text>\r\n        </Button>\r\n        <IconButton \r\n            icon='chevron-right'\r\n            style={styles.sideButton}\r\n            size={40}\r\n            color={'white'}\r\n            onPress={() => props.setDate(changeDay(props.date, +1))}\r\n            />\r\n        {show && (\r\n        <DateTimePicker\r\n            testID=\"dateTimePicker\"\r\n            value={props.date}\r\n            mode={'date'}\r\n            is24Hour={true}\r\n            onChange={onChange}\r\n            textColor ={'darkviolet'}\r\n            style={{height:150}}\r\n        />\r\n        )}\r\n\r\n    </SafeAreaView>\r\n)}\r\n\r\nconst styles = StyleSheet.create({\r\n    middleButton: {\r\n        flex:0.6,\r\n        display:'flex',\r\n        justifyContent:'center',\r\n        color:'#d5d8dc',\r\n    },\r\n    sideButton:{\r\n        flex:0.2,\r\n        display:'flex',\r\n        justifyContent:'center',\r\n        alignSelf:'center',\r\n        color:'white'\r\n    },\r\n    buttonText: {\r\n        display:'flex',\r\n        justifyContent:'center',\r\n        fontSize:50\r\n    },\r\n    AndroidSafeArea: {\r\n        paddingTop: Platform.OS === \"android\" ? StatusBar.currentHeight : 0,\r\n        flexDirection: 'row',\r\n        justifyContent: 'center',\r\n        backgroundColor: 'darkviolet',\r\n        height:130\r\n    },\r\n});\r\n\r\nexport default DatePickerComponent"],"mappings":"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"},"metadata":{},"sourceType":"module"}