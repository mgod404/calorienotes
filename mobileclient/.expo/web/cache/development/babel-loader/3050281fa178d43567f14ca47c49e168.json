{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { BACKEND_URL } from \"../CONFIG\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar SendTokenComponent = function SendTokenComponent(_ref) {\n  var setTokenSent = _ref.setTokenSent;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var sendToken = function sendToken() {\n    var response;\n    return _regeneratorRuntime.async(function sendToken$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(fetch(BACKEND_URL + \"/api/resetpassword/\", {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify({\n                user: email\n              })\n            }));\n\n          case 3:\n            response = _context.sent;\n\n            if (!(response.status != 201)) {\n              _context.next = 7;\n              break;\n            }\n\n            alert(\"Error Code: \" + response.status);\n            return _context.abrupt(\"return\");\n\n          case 7:\n            setTokenSent(true);\n            return _context.abrupt(\"return\");\n\n          case 11:\n            _context.prev = 11;\n            _context.t0 = _context[\"catch\"](0);\n            _context.t0 instanceof Error ? alert(_context.t0.message) : alert(String(_context.t0));\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 11]], Promise);\n  };\n\n  return _jsxs(View, {\n    style: styles.loginWrapper,\n    children: [_jsx(Text, {\n      style: {\n        width: '80%',\n        textAlign: 'center'\n      },\n      children: \"Type in email that you used to set up your CNotes account. Next, press SEND TOKEN to receive email with special token to reset your password.\"\n    }), _jsx(TextInput, {\n      style: styles.input,\n      onChangeText: function onChangeText(input) {\n        return setEmail(input);\n      },\n      value: email,\n      placeholder: \"Email\"\n    }), _jsxs(View, {\n      style: styles.buttons,\n      children: [_jsx(Button, {\n        onPress: function onPress() {\n          return sendToken();\n        },\n        title: \"Send Token\",\n        color: \"darkviolet\"\n      }), _jsx(Button, {\n        onPress: function onPress() {\n          return setTokenSent(true);\n        },\n        title: \"I already have token\",\n        color: \"darkviolet\"\n      })]\n    })]\n  });\n};\n\nexport default SendTokenComponent;\nvar styles = StyleSheet.create({\n  loginWrapper: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  input: {\n    height: 40,\n    width: '80%',\n    margin: 12,\n    borderBottomWidth: 1,\n    padding: 10\n  },\n  buttons: {\n    width: '80%',\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginTop: 20,\n    paddingRight: 10\n  },\n  errorView: {\n    backgroundColor: 'rgba(255, 57, 57, 0.8)',\n    padding: 5,\n    borderRadius: 5\n  }\n});","map":{"version":3,"names":["React","useState","BACKEND_URL","SendTokenComponent","setTokenSent","email","setEmail","sendToken","fetch","method","headers","body","JSON","stringify","user","response","status","alert","Error","message","String","styles","loginWrapper","width","textAlign","input","buttons","StyleSheet","create","flex","justifyContent","alignItems","height","margin","borderBottomWidth","padding","display","flexDirection","marginTop","paddingRight","errorView","backgroundColor","borderRadius"],"sources":["/home/dzony/Documents/Site/calorienotes/mobileclient/components/sendtoken.tsx"],"sourcesContent":["import React, { useState } from 'react'\nimport { StyleSheet, TextInput, View, Text, Button, Alert } from 'react-native'\nimport { NativeStackNavigationProp } from '@react-navigation/native-stack'\n\nimport { BACKEND_URL } from '../CONFIG'\n\ninterface Props {\n    setTokenSent: React.Dispatch<React.SetStateAction<boolean>>\n}\n\nconst SendTokenComponent: React.FC<Props>= ({setTokenSent}) => {\n    const [email, setEmail] = useState('')\n\n    const sendToken = async () => {\n        try {\n            const response = await fetch(`${BACKEND_URL}/api/resetpassword/`, {\n                method:'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({user: email})\n            });\n            if(response.status != 201){\n                alert(`Error Code: ${response.status}`);\n                return\n            }\n            setTokenSent(true);\n            return\n        } catch (e){\n            e instanceof Error ? alert(e.message): alert(String(e));\n        }\n    }\n\n    return(\n        <View style={styles.loginWrapper}>\n            <Text style={{width:'80%', textAlign:'center'}}>\n                Type in email that you used to set up your CNotes account.\n                Next, press SEND TOKEN to receive email with special token\n                to reset your password.\n            </Text>\n            <TextInput\n                style={styles.input}\n                onChangeText={(input) => setEmail(input)}\n                value={email}\n                placeholder='Email'\n            />\n            <View style={styles.buttons}>\n                <Button \n                    onPress={() => sendToken()}\n                    title='Send Token'\n                    color='darkviolet'/>\n                <Button \n                    onPress={() => setTokenSent(true)}\n                    title='I already have token'\n                    color='darkviolet'/>\n            </View>\n        </View>\n    );\n};\n\nexport default SendTokenComponent\n\nconst styles = StyleSheet.create({\n    loginWrapper: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    input: {\n        height: 40,\n        width: '80%',\n        margin: 12,\n        borderBottomWidth: 1,\n        padding: 10,\n    },\n    buttons: {\n        width:'80%',\n        display:'flex',\n        flexDirection:'row',\n        justifyContent:'space-between',\n        marginTop:20,\n        paddingRight:10,\n    },\n    errorView: {\n        backgroundColor:'rgba(255, 57, 57, 0.8)', \n        padding:5, \n        borderRadius:5\n    }\n})"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;;AAIA,SAASC,WAAT;;;;AAMA,IAAMC,kBAAmC,GAAE,SAArCA,kBAAqC,OAAoB;EAAA,IAAlBC,YAAkB,QAAlBA,YAAkB;;EAC3D,gBAA0BH,QAAQ,CAAC,EAAD,CAAlC;EAAA;EAAA,IAAOI,KAAP;EAAA,IAAcC,QAAd;;EAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY;IAAA;IAAA;MAAA;QAAA;UAAA;YAAA;YAAA;YAAA,iCAEaC,KAAK,CAAIN,WAAJ,0BAAsC;cAC9DO,MAAM,EAAC,MADuD;cAE9DC,OAAO,EAAE;gBACL,gBAAgB;cADX,CAFqD;cAK9DC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;gBAACC,IAAI,EAAET;cAAP,CAAf;YALwD,CAAtC,CAFlB;;UAAA;YAEJU,QAFI;;YAAA,MASPA,QAAQ,CAACC,MAAT,IAAmB,GATZ;cAAA;cAAA;YAAA;;YAUNC,KAAK,kBAAgBF,QAAQ,CAACC,MAAzB,CAAL;YAVM;;UAAA;YAaVZ,YAAY,CAAC,IAAD,CAAZ;YAbU;;UAAA;YAAA;YAAA;YAgBV,uBAAac,KAAb,GAAqBD,KAAK,CAAC,YAAEE,OAAH,CAA1B,GAAuCF,KAAK,CAACG,MAAM,aAAP,CAA5C;;UAhBU;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAAlB;;EAoBA,OACI,MAAC,IAAD;IAAM,KAAK,EAAEC,MAAM,CAACC,YAApB;IAAA,WACI,KAAC,IAAD;MAAM,KAAK,EAAE;QAACC,KAAK,EAAC,KAAP;QAAcC,SAAS,EAAC;MAAxB,CAAb;MAAA;IAAA,EADJ,EAMI,KAAC,SAAD;MACI,KAAK,EAAEH,MAAM,CAACI,KADlB;MAEI,YAAY,EAAE,sBAACA,KAAD;QAAA,OAAWnB,QAAQ,CAACmB,KAAD,CAAnB;MAAA,CAFlB;MAGI,KAAK,EAAEpB,KAHX;MAII,WAAW,EAAC;IAJhB,EANJ,EAYI,MAAC,IAAD;MAAM,KAAK,EAAEgB,MAAM,CAACK,OAApB;MAAA,WACI,KAAC,MAAD;QACI,OAAO,EAAE;UAAA,OAAMnB,SAAS,EAAf;QAAA,CADb;QAEI,KAAK,EAAC,YAFV;QAGI,KAAK,EAAC;MAHV,EADJ,EAKI,KAAC,MAAD;QACI,OAAO,EAAE;UAAA,OAAMH,YAAY,CAAC,IAAD,CAAlB;QAAA,CADb;QAEI,KAAK,EAAC,sBAFV;QAGI,KAAK,EAAC;MAHV,EALJ;IAAA,EAZJ;EAAA,EADJ;AAyBH,CAhDD;;AAkDA,eAAeD,kBAAf;AAEA,IAAMkB,MAAM,GAAGM,UAAU,CAACC,MAAX,CAAkB;EAC7BN,YAAY,EAAE;IACVO,IAAI,EAAE,CADI;IAEVC,cAAc,EAAE,QAFN;IAGVC,UAAU,EAAE;EAHF,CADe;EAM7BN,KAAK,EAAE;IACHO,MAAM,EAAE,EADL;IAEHT,KAAK,EAAE,KAFJ;IAGHU,MAAM,EAAE,EAHL;IAIHC,iBAAiB,EAAE,CAJhB;IAKHC,OAAO,EAAE;EALN,CANsB;EAa7BT,OAAO,EAAE;IACLH,KAAK,EAAC,KADD;IAELa,OAAO,EAAC,MAFH;IAGLC,aAAa,EAAC,KAHT;IAILP,cAAc,EAAC,eAJV;IAKLQ,SAAS,EAAC,EALL;IAMLC,YAAY,EAAC;EANR,CAboB;EAqB7BC,SAAS,EAAE;IACPC,eAAe,EAAC,wBADT;IAEPN,OAAO,EAAC,CAFD;IAGPO,YAAY,EAAC;EAHN;AArBkB,CAAlB,CAAf"},"metadata":{},"sourceType":"module"}