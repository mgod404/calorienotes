{"ast":null,"code":"import React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { IconButton, Button } from 'react-native-paper';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar SettingsComponent = function SettingsComponent(_ref) {\n  var setShowSettings = _ref.setShowSettings,\n      targetCalories = _ref.targetCalories,\n      setTargetCalories = _ref.setTargetCalories,\n      targetProtein = _ref.targetProtein,\n      setTargetProtein = _ref.setTargetProtein,\n      logout = _ref.logout;\n  return _jsx(Modal, {\n    transparent: true,\n    visible: true,\n    children: _jsx(View, {\n      style: styles.container,\n      children: _jsxs(View, {\n        style: styles.card,\n        children: [_jsxs(View, {\n          style: styles.setting,\n          children: [_jsx(Text, {\n            children: \"Set calorie goal\"\n          }), _jsx(View, {\n            style: styles.input,\n            children: _jsx(TextInput, {\n              keyboardType: \"numeric\",\n              value: targetCalories.toString(),\n              onChangeText: function onChangeText(input) {\n                return setTargetCalories(Number(input));\n              }\n            })\n          })]\n        }), _jsxs(View, {\n          style: styles.setting,\n          children: [_jsx(Text, {\n            children: \"Set protein goal\"\n          }), _jsx(View, {\n            style: styles.input,\n            children: _jsx(TextInput, {\n              keyboardType: \"numeric\",\n              value: targetProtein.toString(),\n              onChangeText: function onChangeText(input) {\n                return setTargetProtein(Number(input));\n              }\n            })\n          })]\n        }), _jsxs(View, {\n          style: styles.buttons,\n          children: [_jsx(IconButton, {\n            icon: \"check\",\n            color: \"darkviolet\",\n            onPress: function onPress() {\n              return setShowSettings(false);\n            }\n          }), _jsx(Button, {\n            color: \"darkviolet\",\n            onPress: function onPress() {\n              return logout();\n            },\n            children: \"Logout\"\n          })]\n        })]\n      })\n    })\n  });\n};\n\nexport default SettingsComponent;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'rgba(0,0,0,0.5)'\n  },\n  card: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'white',\n    width: '80%',\n    padding: 20,\n    borderRadius: 5\n  },\n  setting: {\n    flexDirection: 'row',\n    alignSelf: 'stretch',\n    justifyContent: 'space-between'\n  },\n  input: {\n    borderBottomColor: 'darkviolet',\n    borderBottomWidth: 1\n  },\n  buttons: {\n    alignSelf: 'stretch',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginTop: 10\n  }\n});","map":{"version":3,"sources":["/home/dzony/Documents/Site/calorienotes/mobileclient/components/settings.tsx"],"names":["React","IconButton","Button","SettingsComponent","setShowSettings","targetCalories","setTargetCalories","targetProtein","setTargetProtein","logout","styles","container","card","setting","input","toString","Number","buttons","StyleSheet","create","flex","justifyContent","alignItems","backgroundColor","display","width","padding","borderRadius","flexDirection","alignSelf","borderBottomColor","borderBottomWidth","marginTop"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { View, StyleSheet, Modal, Text, TextInput} from 'react-native'\nimport { IconButton, Button } from 'react-native-paper';\n\ninterface Props {\n    setShowSettings: React.Dispatch<React.SetStateAction<boolean>>,\n    targetCalories: number,\n    setTargetCalories: React.Dispatch<React.SetStateAction<number>>,\n    targetProtein: number,\n    setTargetProtein: React.Dispatch<React.SetStateAction<number>>,\n    logout: () => void\n}\n\nconst SettingsComponent: React.FC<Props> = ({setShowSettings ,targetCalories, setTargetCalories, targetProtein, setTargetProtein, logout}) => {\n\n    return(\n        <Modal transparent visible={true}>\n            <View style={styles.container}>\n                <View style={styles.card}>\n                    <View style={styles.setting}>\n                        <Text>Set calorie goal</Text>\n                        <View style={styles.input}>\n                            <TextInput \n                                keyboardType='numeric'\n                                value={targetCalories.toString()}\n                                onChangeText={(input) => setTargetCalories(Number(input))}\n                            />\n                        </View>\n                    </View>\n                    <View style={styles.setting}>\n                        <Text>Set protein goal</Text>\n                        <View style={styles.input}>\n                            <TextInput \n                                keyboardType='numeric'\n                                value={targetProtein.toString()}\n                                onChangeText={(input) => setTargetProtein(Number(input))}\n                            />\n                        </View>\n                    </View>\n                    <View style={styles.buttons}>\n                        <IconButton \n                            icon='check'\n                            color='darkviolet'\n                            onPress={() => setShowSettings(false)}\n                        />\n                        <Button\n                            color='darkviolet'\n                            onPress={()=> logout()}\n                        >Logout</Button>\n                    </View>\n                </View>\n            </View>\n        </Modal>\n    )\n}\n\nexport default SettingsComponent\n\nconst styles = StyleSheet.create({\n    container: {\n        flex:1,\n        justifyContent: 'center',\n        alignItems: 'center',\n        backgroundColor: 'rgba(0,0,0,0.5)',\n    },\n    card: {\n        display:'flex',\n        justifyContent:'center',\n        alignItems: 'center',\n        backgroundColor: 'white',\n        width: '80%',\n        padding: 20,\n        borderRadius: 5,\n    },\n    setting: {\n        flexDirection:'row', \n        alignSelf:'stretch',\n        justifyContent:'space-between'\n    },\n    input: {\n        borderBottomColor: 'darkviolet',\n        borderBottomWidth: 1,\n    },\n    buttons: {\n        alignSelf:'stretch', \n        flexDirection:'row', \n        justifyContent:'space-between',\n        marginTop: 10\n    }\n})"]},"metadata":{},"sourceType":"module"}