{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { IconButton } from 'react-native-paper';\nimport { Button } from 'react-native-paper';\nimport { BarCodeScanner } from 'expo-barcode-scanner';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar BarCodeScannerComponent = function BarCodeScannerComponent(_ref) {\n  var setShowBarCodeScanner = _ref.setShowBarCodeScanner,\n      setMeal = _ref.setMeal;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      hasPermission = _useState2[0],\n      setHasPermission = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      scanned = _useState4[0],\n      setScanned = _useState4[1];\n\n  useEffect(function () {\n    (function _callee() {\n      var _await$BarCodeScanner, status;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(BarCodeScanner.requestPermissionsAsync());\n\n            case 2:\n              _await$BarCodeScanner = _context.sent;\n              status = _await$BarCodeScanner.status;\n              setHasPermission(status === 'granted');\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, []);\n\n  if (hasPermission === null) {\n    return _jsx(Text, {\n      children: \"Requesting for camera permission\"\n    });\n  }\n\n  if (hasPermission === false) {\n    return _jsx(Text, {\n      children: \"No access to camera\"\n    });\n  }\n\n  var fetchFoodData = function fetchFoodData(barcode) {\n    var response, data, nutrients;\n    return _regeneratorRuntime.async(function fetchFoodData$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(fetch(\"https://world.openfoodfacts.org/api/v0/product/\" + String(barcode) + \".json\"));\n\n          case 3:\n            response = _context2.sent;\n            _context2.next = 6;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 6:\n            data = _context2.sent;\n\n            if (!(data.status == 0)) {\n              _context2.next = 10;\n              break;\n            }\n\n            alert(\"Product not found. Try again or type in macronutrients manually.\");\n            return _context2.abrupt(\"return\");\n\n          case 10:\n            nutrients = data.product.nutriments;\n\n            if (data.product.product_name && nutrients.carbohydrates_100g && nutrients.fat_100g && nutrients.proteins_100g) {\n              setMeal({\n                name: data.product.product_name,\n                weight: 0,\n                carbs: nutrients.carbohydrates_100g,\n                fat: nutrients.fat_100g,\n                protein: nutrients.proteins_100g\n              });\n            } else {\n              alert(\"Product has been found, but lacked macronutrient data\");\n            }\n\n            _context2.next = 17;\n            break;\n\n          case 14:\n            _context2.prev = 14;\n            _context2.t0 = _context2[\"catch\"](0);\n            _context2.t0 instanceof Error ? alert(_context2.t0.message) : alert(String(_context2.t0));\n\n          case 17:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 14]], Promise);\n  };\n\n  var handleBarCodeScanned = function handleBarCodeScanned(_ref2) {\n    var type = _ref2.type,\n        data = _ref2.data;\n    setScanned(true);\n    fetchFoodData(data);\n    setShowBarCodeScanner(false);\n  };\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(BarCodeScanner, {\n      onBarCodeScanned: scanned ? undefined : handleBarCodeScanned,\n      style: StyleSheet.absoluteFillObject\n    }), scanned && _jsx(Button, {\n      style: styles.AndroidSafeArea,\n      onPress: function onPress() {\n        return setScanned(false);\n      },\n      children: \"Tap to Scan Again\"\n    }), _jsx(IconButton, {\n      style: {\n        alignSelf: 'flex-end'\n      },\n      icon: \"window-close\",\n      onPress: function onPress() {\n        setShowBarCodeScanner(false);\n      }\n    })]\n  });\n};\n\nexport default BarCodeScannerComponent;\nvar styles = StyleSheet.create({\n  container: {\n    height: '100%'\n  },\n  AndroidSafeArea: {\n    paddingTop: Platform.OS === \"android\" ? StatusBar.currentHeight : 0,\n    flexDirection: 'row',\n    justifyContent: 'center',\n    backgroundColor: 'darkviolet'\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","IconButton","Button","BarCodeScanner","BarCodeScannerComponent","setShowBarCodeScanner","setMeal","hasPermission","setHasPermission","scanned","setScanned","requestPermissionsAsync","status","fetchFoodData","barcode","fetch","String","response","json","data","alert","nutrients","product","nutriments","product_name","carbohydrates_100g","fat_100g","proteins_100g","name","weight","carbs","fat","protein","Error","message","handleBarCodeScanned","type","styles","container","undefined","StyleSheet","absoluteFillObject","AndroidSafeArea","alignSelf","create","height","paddingTop","Platform","OS","StatusBar","currentHeight","flexDirection","justifyContent","backgroundColor"],"sources":["/home/dzony/Documents/Site/calorienotes/mobileclient/components/barcodescanner.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Text, View, StyleSheet, StatusBar, Platform } from 'react-native'\nimport { IconButton } from 'react-native-paper';\nimport { Button } from 'react-native-paper'\nimport { BarCodeScanner } from 'expo-barcode-scanner'\n\nimport { Meal } from '../screens/homescreen';\n\ninterface Props {\n    setShowBarCodeScanner: React.Dispatch<React.SetStateAction<boolean>>,\n    setMeal: React.Dispatch<React.SetStateAction<Meal>>,\n}\n\nconst BarCodeScannerComponent: React.FC<Props> = ({setShowBarCodeScanner, setMeal}) => {\n    const [hasPermission, setHasPermission] = useState(null);\n    const [scanned, setScanned] = useState(false);\n\n    useEffect(() => {\n    (async () => {\n        const { status } = await BarCodeScanner.requestPermissionsAsync();\n        setHasPermission(status === 'granted');\n    })();\n    }, []);\n\n    if (hasPermission === null) {\n        return <Text>Requesting for camera permission</Text>;\n    }\n    if (hasPermission === false) {\n        return <Text>No access to camera</Text>;\n    }\n\n    const fetchFoodData = async (barcode) => {\n        try {\n            const response:any = await fetch(`https://world.openfoodfacts.org/api/v0/product/${String(barcode)}.json`);\n            const data = await response.json();\n            if(data.status == 0) {\n                alert(`Product not found. Try again or type in macronutrients manually.`);\n                return\n            }\n            const nutrients = data.product.nutriments;\n            if(data.product.product_name && nutrients.carbohydrates_100g && nutrients.fat_100g && nutrients.proteins_100g){\n                setMeal({\n                    name: data.product.product_name,\n                    weight: 0,\n                    carbs: nutrients.carbohydrates_100g,\n                    fat: nutrients.fat_100g,\n                    protein: nutrients.proteins_100g,\n                });\n            } else {\n                alert(`Product has been found, but lacked macronutrient data`);\n            }\n        }\n        catch (e) {\n            e instanceof Error ? alert(e.message): alert(String(e));\n        }\n    }\n\n    const handleBarCodeScanned = ({ type, data}) => {\n    setScanned(true);\n    fetchFoodData(data);\n    setShowBarCodeScanner(false);\n    };\n\n    return (\n    <View style={styles.container}>\n        <BarCodeScanner\n            onBarCodeScanned={scanned ? undefined : handleBarCodeScanned}\n            style={StyleSheet.absoluteFillObject}\n        />\n        {scanned && \n        <Button \n            style={styles.AndroidSafeArea} \n            onPress={() => setScanned(false)}>\n                Tap to Scan Again\n        </Button>}\n        <IconButton \n            style={{alignSelf:'flex-end'}}\n            icon='window-close' \n            onPress={() => {\n                setShowBarCodeScanner(false);\n            }}\n        />\n    </View>\n    );\n};\n\nexport default BarCodeScannerComponent;\n\nconst styles = StyleSheet.create({\n    container:{\n        height:'100%',\n    },\n    AndroidSafeArea: {\n        paddingTop: Platform.OS === \"android\" ? StatusBar.currentHeight : 0,\n        flexDirection: 'row',\n        justifyContent: 'center',\n        backgroundColor: 'darkviolet',\n}\n})"],"mappings":"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"},"metadata":{},"sourceType":"module"}