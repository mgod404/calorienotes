{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useContext, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { Switch } from 'react-native-paper';\nimport * as SecureStore from 'expo-secure-store';\nimport { JwtTokenContext } from \"../contexts/jwttoken\";\nimport { BACKEND_URL } from \"../CONFIG\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\n\nvar LoginScreen = function LoginScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      errorMessage = _useState6[0],\n      setErrorMessage = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      rememberMe = _useState8[0],\n      setRememberMe = _useState8[1];\n\n  var onToggleSwitch = function onToggleSwitch() {\n    return setRememberMe(!rememberMe);\n  };\n\n  var jwt = useContext(JwtTokenContext);\n\n  var getNewAccessToken = function getNewAccessToken(refreshToken) {\n    var response, data;\n    return _regeneratorRuntime.async(function getNewAccessToken$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(fetch(BACKEND_URL + \"/api/token/refresh/\", {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: \"{\\\"refresh\\\":\\\"\" + refreshToken + \"\\\"}\"\n            }));\n\n          case 3:\n            response = _context.sent;\n\n            if (!(response.status === 200)) {\n              _context.next = 9;\n              break;\n            }\n\n            _context.next = 7;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 7:\n            data = _context.sent;\n            jwt == null ? void 0 : jwt.setJwtAccessToken(data.access);\n\n          case 9:\n            if (!(response.status == 401)) {\n              _context.next = 16;\n              break;\n            }\n\n            jwt == null ? void 0 : jwt.setJwtRefreshToken('');\n            _context.next = 13;\n            return _regeneratorRuntime.awrap(SecureStore.setItemAsync('jwt_refresh_token', ''));\n\n          case 13:\n            setErrorMessage('Token has expired. Please login again.');\n            _context.next = 20;\n            break;\n\n          case 16:\n            jwt == null ? void 0 : jwt.setJwtRefreshToken('');\n            _context.next = 19;\n            return _regeneratorRuntime.awrap(SecureStore.setItemAsync('jwt_refresh_token', ''));\n\n          case 19:\n            setErrorMessage('Unknown error occured. Please login again.');\n\n          case 20:\n            ;\n            _context.next = 26;\n            break;\n\n          case 23:\n            _context.prev = 23;\n            _context.t0 = _context[\"catch\"](0);\n            _context.t0 instanceof Error ? setErrorMessage(_context.t0.message) : setErrorMessage(String(_context.t0));\n\n          case 26:\n            ;\n\n          case 27:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 23]], Promise);\n  };\n\n  var checkForRefreshKeyInStorage = function checkForRefreshKeyInStorage() {\n    var storageRefreshToken;\n    return _regeneratorRuntime.async(function checkForRefreshKeyInStorage$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(SecureStore.getItemAsync('jwt_refresh_token'));\n\n          case 2:\n            storageRefreshToken = _context2.sent;\n\n            if (!storageRefreshToken) {\n              _context2.next = 8;\n              break;\n            }\n\n            setRememberMe(true);\n            _context2.next = 7;\n            return _regeneratorRuntime.awrap(getNewAccessToken(storageRefreshToken));\n\n          case 7:\n            navigation.navigate('Home');\n\n          case 8:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    checkForRefreshKeyInStorage();\n  }, []);\n\n  var login = function login() {\n    var response, data;\n    return _regeneratorRuntime.async(function login$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            _context3.next = 3;\n            return _regeneratorRuntime.awrap(fetch(BACKEND_URL + \"/api/token/\", {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify({\n                username: email,\n                password: password\n              })\n            }));\n\n          case 3:\n            response = _context3.sent;\n\n            if (!(response.status == 200)) {\n              _context3.next = 14;\n              break;\n            }\n\n            _context3.next = 7;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 7:\n            data = _context3.sent;\n            jwt == null ? void 0 : jwt.setJwtAccessToken(data.access);\n            setErrorMessage('');\n            navigation.navigate('Home');\n\n            if (rememberMe) {\n              jwt == null ? void 0 : jwt.setJwtRefreshToken(data.refresh);\n              SecureStore.setItemAsync('jwt_refresh_token', data.refresh);\n            }\n\n            _context3.next = 15;\n            break;\n\n          case 14:\n            setErrorMessage('Wrong email or password');\n\n          case 15:\n            ;\n            _context3.next = 21;\n            break;\n\n          case 18:\n            _context3.prev = 18;\n            _context3.t0 = _context3[\"catch\"](0);\n            _context3.t0 instanceof Error ? setErrorMessage(_context3.t0.message) : setErrorMessage(String(_context3.t0));\n\n          case 21:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, [[0, 18]], Promise);\n  };\n\n  return _jsxs(View, {\n    style: styles.loginWrapper,\n    children: [_jsx(TextInput, {\n      style: styles.input,\n      onChangeText: function onChangeText(input) {\n        return setEmail(input);\n      },\n      value: email,\n      placeholder: \"Email\"\n    }), _jsx(TextInput, {\n      secureTextEntry: true,\n      style: styles.input,\n      onChangeText: function onChangeText(number) {\n        return setPassword(number);\n      },\n      value: password,\n      placeholder: \"Password\"\n    }), _jsxs(View, {\n      style: styles.underInput,\n      children: [_jsx(Switch, {\n        color: \"darkviolet\",\n        value: rememberMe,\n        onValueChange: onToggleSwitch\n      }), _jsx(Text, {\n        children: \"Remember me\"\n      }), _jsx(Text, {\n        style: styles.forgotPassword,\n        onPress: function onPress() {\n          return navigation.navigate('NewPassword');\n        },\n        children: \"Forgot your Password?\"\n      })]\n    }), errorMessage ? _jsx(View, {\n      style: styles.errorView,\n      children: _jsx(Text, {\n        style: {\n          color: 'lightgray'\n        },\n        children: errorMessage\n      })\n    }) : _jsx(_Fragment, {}), _jsxs(View, {\n      style: styles.buttons,\n      children: [_jsx(Button, {\n        onPress: function onPress() {\n          return login();\n        },\n        title: \"Login\",\n        color: \"darkviolet\"\n      }), _jsx(Button, {\n        onPress: function onPress() {\n          return navigation.navigate('Signup');\n        },\n        title: \"Sign up\",\n        color: \"darkviolet\"\n      })]\n    })]\n  });\n};\n\nexport default LoginScreen;\nvar styles = StyleSheet.create({\n  loginWrapper: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  input: {\n    height: 40,\n    width: '80%',\n    margin: 12,\n    borderBottomWidth: 1,\n    padding: 10\n  },\n  underInput: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between'\n  },\n  forgotPassword: {\n    color: 'blue',\n    alignSelf: 'center',\n    marginLeft: 20,\n    textDecorationLine: 'underline'\n  },\n  buttons: {\n    width: '70%',\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginTop: 20,\n    paddingRight: 10\n  },\n  errorView: {\n    backgroundColor: 'rgba(255, 57, 57, 0.8)',\n    padding: 5,\n    borderRadius: 5\n  }\n});","map":{"version":3,"names":["React","useState","useContext","useEffect","Switch","SecureStore","JwtTokenContext","BACKEND_URL","LoginScreen","navigation","email","setEmail","password","setPassword","errorMessage","setErrorMessage","rememberMe","setRememberMe","onToggleSwitch","jwt","getNewAccessToken","refreshToken","fetch","method","headers","body","response","status","json","data","setJwtAccessToken","access","setJwtRefreshToken","setItemAsync","Error","message","String","checkForRefreshKeyInStorage","getItemAsync","storageRefreshToken","navigate","login","JSON","stringify","username","refresh","styles","loginWrapper","input","number","underInput","forgotPassword","errorView","color","buttons","StyleSheet","create","flex","justifyContent","alignItems","height","width","margin","borderBottomWidth","padding","flexDirection","alignSelf","marginLeft","textDecorationLine","display","marginTop","paddingRight","backgroundColor","borderRadius"],"sources":["/home/dzony/Documents/Site/calorienotes/mobileclient/screens/loginscreen.tsx"],"sourcesContent":["import React, { useState, useContext, useEffect } from 'react'\r\nimport { StyleSheet, TextInput, View, Text, Button } from 'react-native'\r\nimport { Switch } from 'react-native-paper';\r\nimport { NativeStackNavigationProp } from '@react-navigation/native-stack';\r\nimport * as SecureStore from 'expo-secure-store'\r\n\r\nimport {JwtTokenContext} from '../contexts/jwttoken'\r\nimport { BACKEND_URL } from '../CONFIG'\r\n\r\ntype RootStackParamList = {\r\n    Home: undefined,\r\n    Signup: undefined,\r\n    NewPassword: undefined,\r\n};\r\n\r\ninterface NavigationProps {\r\n    navigation: NativeStackNavigationProp<RootStackParamList>\r\n}\r\n\r\ninterface NewAccessTokenResponse {\r\n    access: string\r\n}\r\n\r\n\r\nconst LoginScreen = ({ navigation }: NavigationProps) => {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n\r\n    const [rememberMe, setRememberMe] = useState(false);\r\n    const onToggleSwitch = () => setRememberMe(!rememberMe);\r\n\r\n    const jwt = useContext(JwtTokenContext);\r\n\r\n    const getNewAccessToken = async (refreshToken:string) => {\r\n        try{\r\n            const response = await fetch(`${BACKEND_URL}/api/token/refresh/`,{\r\n                method: 'POST',\r\n                headers:{\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: `{\"refresh\":\"${refreshToken}\"}`\r\n            });\r\n            if(response.status === 200) {\r\n                const data:NewAccessTokenResponse = await response.json();\r\n                jwt?.setJwtAccessToken(data.access);\r\n            } if(response.status == 401) {\r\n                jwt?.setJwtRefreshToken('');\r\n                await SecureStore.setItemAsync('jwt_refresh_token', '');\r\n                setErrorMessage('Token has expired. Please login again.');\r\n            } else {\r\n                jwt?.setJwtRefreshToken('');\r\n                await SecureStore.setItemAsync('jwt_refresh_token', '');\r\n                setErrorMessage('Unknown error occured. Please login again.');\r\n            };\r\n        }\r\n        catch (e){\r\n            e instanceof Error ? setErrorMessage(e.message): setErrorMessage(String(e));\r\n        };\r\n    }\r\n    const checkForRefreshKeyInStorage = async () => {\r\n        const storageRefreshToken = await SecureStore.getItemAsync('jwt_refresh_token');\r\n        if(storageRefreshToken){\r\n            //REFRESH TOKEN SAVED AND FOUND, PROCEED 'REMEMBER ME' FUNC FROM HERE \r\n            setRememberMe(true);\r\n            await getNewAccessToken(storageRefreshToken);\r\n            navigation.navigate('Home');\r\n        }\r\n    }\r\n\r\n    useEffect(()=> {\r\n        checkForRefreshKeyInStorage();\r\n    },[]);\r\n\r\n    const login = async () => {\r\n        try {\r\n            const response = await fetch(`${BACKEND_URL}/api/token/`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    username: email,\r\n                    password: password\r\n                })\r\n            });\r\n            if(response.status == 200){\r\n                const data = await response.json();\r\n                jwt?.setJwtAccessToken(data.access);\r\n                setErrorMessage('');\r\n                navigation.navigate('Home');\r\n                if(rememberMe){\r\n                    jwt?.setJwtRefreshToken(data.refresh);\r\n                    SecureStore.setItemAsync('jwt_refresh_token', data.refresh);\r\n                }\r\n            } else {\r\n                setErrorMessage('Wrong email or password');\r\n            };\r\n        }\r\n        catch(e) {\r\n            e instanceof Error ? setErrorMessage(e.message): setErrorMessage(String(e))\r\n        }\r\n    };\r\n\r\n    return(\r\n        <View style={styles.loginWrapper}>\r\n            <TextInput\r\n                style={styles.input}\r\n                onChangeText={(input) => setEmail(input)}\r\n                value={email}\r\n                placeholder='Email'\r\n            />\r\n            <TextInput\r\n                secureTextEntry={true}\r\n                style={styles.input}\r\n                onChangeText={(number)=> setPassword(number)}\r\n                value={password}\r\n                placeholder=\"Password\"\r\n            />\r\n\r\n            <View style={styles.underInput}>\r\n            <Switch \r\n                color='darkviolet'\r\n                value={rememberMe}\r\n                onValueChange={onToggleSwitch}\r\n                />\r\n            <Text>Remember me</Text>\r\n            <Text \r\n                style={styles.forgotPassword}\r\n                onPress={() => navigation.navigate('NewPassword')}\r\n                >Forgot your Password?</Text>\r\n            </View>\r\n\r\n            {errorMessage ?\r\n            <View style={styles.errorView}>\r\n            <Text style={{color:'lightgray'}}>{errorMessage}</Text>\r\n            </View>: <></>}\r\n\r\n            <View style={styles.buttons}>\r\n                <Button \r\n                    onPress={() => login()}\r\n                    title='Login'\r\n                    color='darkviolet'/>\r\n                <Button \r\n                    onPress={() => navigation.navigate('Signup')}\r\n                    title='Sign up'\r\n                    color='darkviolet'/>\r\n            </View>\r\n        </View>\r\n    );\r\n};\r\n\r\nexport default LoginScreen\r\n\r\nconst styles = StyleSheet.create({\r\n    loginWrapper: {\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    },\r\n    input: {\r\n        height: 40,\r\n        width: '80%',\r\n        margin: 12,\r\n        borderBottomWidth: 1,\r\n        padding: 10,\r\n    },\r\n    underInput: {\r\n        flexDirection:'row', \r\n        alignItems:'center', \r\n        justifyContent:'space-between'\r\n    },\r\n    forgotPassword: {\r\n        color:'blue', \r\n        alignSelf:'center', \r\n        marginLeft:20, \r\n        textDecorationLine:'underline'\r\n    },\r\n    buttons: {\r\n        width:'70%',\r\n        display:'flex',\r\n        flexDirection:'row',\r\n        justifyContent:'space-between',\r\n        marginTop:20,\r\n        paddingRight:10,\r\n    },\r\n    errorView: {\r\n        backgroundColor:'rgba(255, 57, 57, 0.8)', \r\n        padding:5, \r\n        borderRadius:5\r\n    }\r\n})"],"mappings":"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"},"metadata":{},"sourceType":"module"}