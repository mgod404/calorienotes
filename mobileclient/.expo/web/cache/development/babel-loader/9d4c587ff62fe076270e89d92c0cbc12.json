{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport { Button } from 'react-native-paper';\nimport DateTimePicker from '@react-native-community/datetimepicker';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar DatePickerComponent = function DatePickerComponent(props) {\n  var _useState = useState('date'),\n      _useState2 = _slicedToArray(_useState, 2),\n      mode = _useState2[0],\n      setMode = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      show = _useState4[0],\n      setShow = _useState4[1];\n\n  var onChange = function onChange(event, selectedDate) {\n    var currentDate = selectedDate;\n\n    if (currentDate) {\n      props.setDate(currentDate);\n    }\n\n    ;\n    setShow(false);\n  };\n\n  var showMode = function showMode(currentMode) {\n    setShow(true);\n    setMode(currentMode);\n  };\n\n  var showDatepicker = function showDatepicker() {\n    showMode('date');\n  };\n\n  var changeDay = function changeDay(date, days) {\n    var newDate = new Date(date);\n    newDate.setDate(date.getDate() + days);\n    return newDate;\n  };\n\n  return _jsxs(SafeAreaView, {\n    style: styles.AndroidSafeArea,\n    children: [_jsx(Button, {\n      icon: \"chevron-left\",\n      style: styles.sideButton,\n      labelStyle: {\n        textAlign: 'center'\n      },\n      mode: \"text\",\n      onPress: function onPress() {\n        return props.setDate(changeDay(props.date, -1));\n      }\n    }), _jsx(Button, {\n      style: styles.middleButton,\n      mode: \"text\",\n      onPress: showDatepicker,\n      children: _jsx(Text, {\n        children: props.date.toDateString()\n      })\n    }), _jsx(Button, {\n      icon: \"chevron-right\",\n      style: styles.sideButton,\n      mode: \"text\",\n      onPress: function onPress() {\n        return props.setDate(changeDay(props.date, +1));\n      }\n    }), show && _jsx(DateTimePicker, {\n      testID: \"dateTimePicker\",\n      value: props.date,\n      mode: 'date',\n      is24Hour: true,\n      onChange: onChange,\n      textColor: 'darkviolet'\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  middleButton: {\n    flex: 0.6,\n    display: 'flex',\n    justifyContent: 'center',\n    color: '#d5d8dc'\n  },\n  sideButton: {\n    flex: 0.20,\n    display: 'flex',\n    justifyContent: 'center'\n  },\n  buttonText: {\n    display: 'flex',\n    justifyContent: 'center'\n  },\n  AndroidSafeArea: {\n    paddingTop: Platform.OS === \"android\" ? StatusBar.currentHeight : 0,\n    flexDirection: 'row',\n    justifyContent: 'center',\n    backgroundColor: 'darkviolet'\n  }\n});\nexport default DatePickerComponent;","map":{"version":3,"sources":["/home/dzony/Documents/Site/calorienotes/mobileclient/components/datepicker.tsx"],"names":["React","useState","Button","DateTimePicker","DatePickerComponent","props","mode","setMode","show","setShow","onChange","event","selectedDate","currentDate","setDate","showMode","currentMode","showDatepicker","changeDay","date","days","newDate","Date","getDate","styles","AndroidSafeArea","sideButton","textAlign","middleButton","toDateString","StyleSheet","create","flex","display","justifyContent","color","buttonText","paddingTop","Platform","OS","StatusBar","currentHeight","flexDirection","backgroundColor"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { View, Text, StyleSheet, SafeAreaView, Platform, StatusBar  } from 'react-native'\r\nimport { Button } from 'react-native-paper'\r\nimport DateTimePicker from '@react-native-community/datetimepicker'\r\n\r\ninterface Props {\r\n    date: Date,\r\n    setDate: React.Dispatch<React.SetStateAction<Date>>, \r\n}\r\n\r\nconst DatePickerComponent: React.FC<Props> = (props) => {\r\n    const [mode, setMode] = useState('date');\r\n    const [show, setShow] = useState(false);\r\n\r\n    const onChange = (event:any, selectedDate:Date | undefined) => {\r\n    const currentDate = selectedDate;\r\n    if(currentDate){\r\n        props.setDate(currentDate);\r\n    };\r\n    setShow(false);\r\n    };\r\n\r\n    const showMode = (currentMode:string) => {\r\n        setShow(true);\r\n        setMode(currentMode);\r\n    };\r\n\r\n    const showDatepicker = () => {\r\n        showMode('date');\r\n    };\r\n\r\n    const changeDay = (date: Date, days: number): Date => {\r\n        let newDate: Date = new Date(date);\r\n        newDate.setDate(date.getDate() + days);\r\n        return newDate;\r\n    };\r\n\r\nreturn (\r\n    <SafeAreaView style={styles.AndroidSafeArea}>\r\n\r\n        <Button \r\n            icon='chevron-left'\r\n            style={styles.sideButton}\r\n            labelStyle={{textAlign:'center'}}\r\n            mode='text' \r\n            onPress={() => props.setDate(changeDay(props.date, -1))}\r\n            >\r\n        </Button>\r\n        <Button \r\n            style={styles.middleButton}\r\n            mode='text' \r\n            onPress={showDatepicker}\r\n            >\r\n            <Text>{props.date.toDateString()}</Text>\r\n        </Button>\r\n        <Button \r\n            icon='chevron-right'\r\n            style={styles.sideButton}\r\n            mode='text' \r\n            onPress={() => props.setDate(changeDay(props.date, +1))}\r\n            >\r\n        </Button>\r\n        {show && (\r\n          <DateTimePicker\r\n            testID=\"dateTimePicker\"\r\n            value={props.date}\r\n            mode={'date'}\r\n            is24Hour={true}\r\n            onChange={onChange}\r\n            textColor ={'darkviolet'}\r\n          />\r\n        )}\r\n\r\n    </SafeAreaView>\r\n)}\r\n\r\nconst styles = StyleSheet.create({\r\n    middleButton: {\r\n        flex:0.6,\r\n        display:'flex',\r\n        justifyContent:'center',\r\n        color:'#d5d8dc',\r\n    },\r\n    sideButton:{\r\n        flex:0.20,\r\n        display:'flex',\r\n        justifyContent:'center'\r\n    },\r\n    buttonText: {\r\n        display:'flex',\r\n        justifyContent:'center'\r\n    },\r\n    AndroidSafeArea: {\r\n        paddingTop: Platform.OS === \"android\" ? StatusBar.currentHeight : 0,\r\n        flexDirection: 'row',\r\n        justifyContent: 'center',\r\n        backgroundColor: 'darkviolet',\r\n    },\r\n});\r\n\r\nexport default DatePickerComponent"]},"metadata":{},"sourceType":"module"}