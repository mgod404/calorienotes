{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, createContext, useEffect } from 'react';\nimport * as SecureStore from 'expo-secure-store';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport var JwtTokenContext = createContext(null);\nexport var JwtTokenContextProvider = function JwtTokenContextProvider(_ref) {\n  var children = _ref.children;\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      isItFirstRender = _useState2[0],\n      setIsItFirstRender = _useState2[1];\n\n  var getJwtRefreshTokenFromStorage = function getJwtRefreshTokenFromStorage() {\n    var token;\n    return _regeneratorRuntime.async(function getJwtRefreshTokenFromStorage$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (isItFirstRender) {\n              _context.next = 2;\n              break;\n            }\n\n            return _context.abrupt(\"return\");\n\n          case 2:\n            console.log('That getter runs!');\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(SecureStore.getItemAsync('jwt_refresh_token'));\n\n          case 5:\n            token = _context.sent;\n            setIsItFirstRender(false);\n            return _context.abrupt(\"return\", token ? setJwtRefreshToken(token) : setJwtAccessToken(''));\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      jwtAccessToken = _useState4[0],\n      setJwtAccessToken = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      jwtRefreshToken = _useState6[0],\n      setJwtRefreshToken = _useState6[1];\n\n  var _useState7 = useState(0),\n      _useState8 = _slicedToArray(_useState7, 2),\n      userId = _useState8[0],\n      setuserId = _useState8[1];\n\n  useEffect(function () {\n    SecureStore.setItemAsync('jwt_refresh_token', jwtRefreshToken);\n    console.log(\"useEffect for secureStore triggered, jwtRefreshToken here \" + jwtRefreshToken);\n  }, [jwtRefreshToken]);\n  return _jsx(JwtTokenContext.Provider, {\n    value: {\n      jwtAccessToken: jwtAccessToken,\n      jwtRefreshToken: jwtRefreshToken,\n      userId: userId,\n      setJwtAccessToken: setJwtAccessToken,\n      setJwtRefreshToken: setJwtRefreshToken,\n      setuserId: setuserId,\n      getJwtRefreshTokenFromStorage: getJwtRefreshTokenFromStorage\n    },\n    children: children\n  });\n};","map":{"version":3,"sources":["/home/dzony/Documents/Site/calorienotes/mobileclient/contexts/jwttoken.tsx"],"names":["React","useState","createContext","useEffect","SecureStore","JwtTokenContext","JwtTokenContextProvider","children","isItFirstRender","setIsItFirstRender","getJwtRefreshTokenFromStorage","console","log","getItemAsync","token","setJwtRefreshToken","setJwtAccessToken","jwtAccessToken","jwtRefreshToken","userId","setuserId","setItemAsync"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAAsCC,aAAtC,EAAqDC,SAArD,QAAsE,OAAtE;AACA,OAAO,KAAKC,WAAZ,MAA6B,mBAA7B;;AAeA,OAAO,IAAMC,eAAe,GAAGH,aAAa,CAA6B,IAA7B,CAArC;AAEP,OAAO,IAAMI,uBAAuB,GAAG,SAA1BA,uBAA0B,OAA6C;AAAA,MAA3CC,QAA2C,QAA3CA,QAA2C;;AAEhF,kBAA8CN,QAAQ,CAAC,IAAD,CAAtD;AAAA;AAAA,MAAOO,eAAP;AAAA,MAAwBC,kBAAxB;;AACA,MAAMC,6BAA6B,GAAG,SAAhCA,6BAAgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAC9BF,eAD8B;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAIlCG,YAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AAJkC;AAAA,6CAKdR,WAAW,CAACS,YAAZ,CAAyB,mBAAzB,CALc;;AAAA;AAK5BC,YAAAA,KAL4B;AAMlCL,YAAAA,kBAAkB,CAAC,KAAD,CAAlB;AANkC,6CAO3BK,KAAK,GAAGC,kBAAkB,CAACD,KAAD,CAArB,GAA+BE,iBAAiB,CAAC,EAAD,CAP1B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAtC;;AAUA,mBAA4Cf,QAAQ,CAAC,EAAD,CAApD;AAAA;AAAA,MAAOgB,cAAP;AAAA,MAAuBD,iBAAvB;;AACA,mBAA8Cf,QAAQ,CAAC,EAAD,CAAtD;AAAA;AAAA,MAAOiB,eAAP;AAAA,MAAwBH,kBAAxB;;AACA,mBAA4Bd,QAAQ,CAAC,CAAD,CAApC;AAAA;AAAA,MAAOkB,MAAP;AAAA,MAAeC,SAAf;;AAEAjB,EAAAA,SAAS,CAAC,YAAM;AACZC,IAAAA,WAAW,CAACiB,YAAZ,CAAyB,mBAAzB,EAA8CH,eAA9C;AACAP,IAAAA,OAAO,CAACC,GAAR,gEAAyEM,eAAzE;AACH,GAHQ,EAGP,CAACA,eAAD,CAHO,CAAT;AAKA,SACI,KAAC,eAAD,CAAiB,QAAjB;AACI,IAAA,KAAK,EAAE;AAACD,MAAAA,cAAc,EAAdA,cAAD;AAAiBC,MAAAA,eAAe,EAAfA,eAAjB;AAAkCC,MAAAA,MAAM,EAANA,MAAlC;AAA0CH,MAAAA,iBAAiB,EAAjBA,iBAA1C;AAA6DD,MAAAA,kBAAkB,EAAlBA,kBAA7D;AAAiFK,MAAAA,SAAS,EAATA,SAAjF;AAA4FV,MAAAA,6BAA6B,EAA7BA;AAA5F,KADX;AAAA,cAEKH;AAFL,IADJ;AAMH,CA5BM","sourcesContent":["import React, { useState, useContext, createContext, useEffect } from 'react'\nimport * as SecureStore from 'expo-secure-store'\n\ntype JwtTokenContextType = {\n    jwtAccessToken: string,\n    jwtRefreshToken: string,\n    userId: number,\n    setJwtAccessToken: React.Dispatch<React.SetStateAction<string>>,\n    setJwtRefreshToken: React.Dispatch<React.SetStateAction<string>>,\n    setuserId: React.Dispatch<React.SetStateAction<number>>,\n    getJwtRefreshTokenFromStorage: () => Promise<void>,\n};\ntype jwtTokenContextProviderProps = {\n    children: React.ReactNode\n};\n\nexport const JwtTokenContext = createContext<JwtTokenContextType | null>(null);\n\nexport const JwtTokenContextProvider = ({children}:jwtTokenContextProviderProps) => {\n\n    const [isItFirstRender, setIsItFirstRender] = useState(true)\n    const getJwtRefreshTokenFromStorage = async () => {\n        if(!isItFirstRender){\n            return\n        }\n        console.log('That getter runs!');\n        const token = await SecureStore.getItemAsync('jwt_refresh_token');\n        setIsItFirstRender(false)\n        return token ? setJwtRefreshToken(token) : setJwtAccessToken('')\n    }\n\n    const [jwtAccessToken, setJwtAccessToken] = useState('');\n    const [jwtRefreshToken, setJwtRefreshToken] = useState('');\n    const [userId, setuserId] = useState(0);\n\n    useEffect(() => {\n        SecureStore.setItemAsync('jwt_refresh_token', jwtRefreshToken);\n        console.log(`useEffect for secureStore triggered, jwtRefreshToken here ${jwtRefreshToken}`);\n    },[jwtRefreshToken]);\n\n    return(\n        <JwtTokenContext.Provider \n            value={{jwtAccessToken, jwtRefreshToken, userId, setJwtAccessToken, setJwtRefreshToken, setuserId, getJwtRefreshTokenFromStorage}}>\n            {children}\n        </JwtTokenContext.Provider>\n    )\n};\n"]},"metadata":{},"sourceType":"module"}